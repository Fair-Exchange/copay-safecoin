{"version":3,"sources":["../../src/providers/logger/logger.ts","../../src/providers/config/config.ts","../../src/providers/profile/profile.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/index.js","../../src/providers/platform/platform.ts","../../src/providers/wallet/wallet.ts","../../src/providers/popup/popup.ts","../../src/providers/app/app.ts","../../src/providers/on-going-process/on-going-process.ts","../../src/providers/persistence/persistence.ts","../../src/providers/bwc/bwc.ts","../../src/providers/action-sheet/action-sheet.ts","../../src/providers/external-link/external-link.ts","../../src/pages/wallet-tabs/wallet-tabs.provider.ts","../../src/providers/bwc-error/bwc-error.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/script/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/script/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/script/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/script/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/script/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/script/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/script/index.js","../../src/providers/tx-format/tx-format.ts","../../src/providers/address-book/address-book.ts","../../src/providers/replace-parameters/replace-parameters.ts","../../src/providers/push-notifications/push-notifications.ts","../../src/pages/wallet-tabs/wallet-tabs-child.ts","../../src/providers/rate/rate.ts","../../src/providers/touchid/touchid.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/output.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/output.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/output.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/output.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/output.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/output.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/networks.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/address.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/output.js","../../src/providers/fee/fee.ts","../../src/pages/send/amount/amount.ts","../../src/providers/language/language.ts","../../src/providers/email-notifications/email-notifications.ts","../../src/pages/tabs/tabs.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/signature.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/signature.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/signature.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/signature.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/signature.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/signature.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/input.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/signature.js","../../src/providers/incoming-data/incoming-data.ts","../../src/pages/onboarding/disclaimer/disclaimer.ts","../../src/pages/scan/scan.ts","../../src/pages/finish/finish.ts","../../src/pages/settings/addressbook/add/add.ts","../../src/providers/time/time.ts","../../src/pages/backup/backup-warning/backup-warning.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/privatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/privatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/privatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/privatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/privatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/privatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/privatekey.js","../../src/providers/filter/filter.ts","../../src/components/action-sheet/action-sheet-parent.ts","../../src/pages/add/import-wallet/import-wallet.ts","../../src/providers/derivation-path-helper/derivation-path-helper.ts","../../src/providers/node-webkit/node-webkit.ts","../../src/pages/paper-wallet/paper-wallet.ts","../../src/providers/address/address.ts","../../src/pages/tx-details/tx-details.ts","../../src/pages/txp-details/txp-details.ts","../../src/pages/pin/pin-modal/pin-modal.ts","../../src/environments/index.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/unit.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/unit.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/unit.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/unit.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/unit.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/unit.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/opcode.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/unit.js","../../src/providers/dom/dom.ts","../../src/pages/add/join-wallet/join-wallet.ts","../../src/pages/send/confirm/confirm.ts","../../src/providers/tx-confirm-notification/tx-confirm-notification.ts","../../src/providers/clipboard/clipboard.ts","../../src/providers/feedback/feedback.ts","../../src/pages/feedback/send-feedback/send-feedback.ts","../../src/providers/index.ts","../../src/directives/animate/animate.ts","../../src/pages/settings/wallet-settings/wallet-settings.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/wallet-addresses.ts","../../src/pages/onboarding/backup-request/backup-request.ts","../../src/pages/wallet-details/wallet-details.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/persistence/storage/istorage.ts","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/hdpublickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/hdpublickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/hdpublickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/hdpublickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/hdpublickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/hdpublickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/script/script.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/transaction.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/unspentoutput.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/index.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/hdprivatekey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/hdpublickey.js","../../path (ignored)","../../src/components/incoming-data-menu/incoming-data-menu.ts","../../src/components/action-sheet/action-sheet.ts","../../src/components/info-sheet/info-sheet.ts","../../src/components/info-sheet/info-sheet-template.ts","../../src/components/options-sheet/options-sheet.ts","../../src/components/wallet-selector/wallet-selector.ts","../../src/providers/paypro/paypro.ts","../../src/pages/add/copayers/copayers.ts","../../src/pages/home/home.ts","../../src/pages/add/add.ts","../../src/pages/add/create-wallet/create-wallet.ts","../../src/providers/scan/scan.ts","../../src/pages/receive/custom-amount/custom-amount.ts","../../src/pages/paypro/paypro.ts","../../src/pages/send/choose-fee-level/choose-fee-level.ts","../../src/pages/home/activity/activity.ts","../../src/pages/home/proposals/proposals.ts","../../src/providers/release/release.ts","../../src/pages/settings/settings.ts","../../src/providers/home-integrations/home-integrations.ts","../../node_modules/bindings","../../src/providers/backup/backup.ts","../../src/pages/settings/about/about.ts","../../src/pages/settings/about/session-log/session-log.ts","../../src/pages/settings/addressbook/addressbook.ts","../../src/pages/settings/addressbook/view/view.ts","../../src/pages/settings/advanced/advanced.ts","../../src/pages/settings/alt-currency/alt-currency.ts","../../src/pages/settings/fee-policy/fee-policy.ts","../../src/pages/settings/language/language.ts","../../src/pages/settings/lock/lock.ts","../../src/pages/settings/notifications/notifications.ts","../../src/pages/settings/share/share.ts","../../src/pages/backup/backup-game/backup-game.ts","../../src/pages/settings/wallet-settings/wallet-color/wallet-color.ts","../../src/pages/settings/wallet-settings/wallet-name/wallet-name.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/bitcoin-cash/bitcoin-cash.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/all-addresses/all-addresses.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-delete/wallet-delete.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-export/wallet-export.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-information/wallet-information.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-information/wallet-extended-private-key/wallet-extended-private-key.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-service-url/wallet-service-url.ts","../../src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-transaction-history/wallet-transaction-history.ts","../../src/pages/fingerprint/fingerprint.ts","../../src/pages/onboarding/onboarding.ts","../../src/pages/onboarding/tour/tour.ts","../../src/pages/wallet-details/search-tx-modal/search-tx-modal.ts","../../src/pages/wallet-details/wallet-balance/wallet-balance.ts","../../src/pages/wallet-tabs/wallet-tabs.ts","../../src/pages/receive/receive.ts","../../src/pages/send/send.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../streams (ignored)","../../extend-node (ignored)","../../node_modules/encoding/lib","../../util (ignored)","webpack:///util (ignored)?ee78","../../node_modules/moment/locale ^/.//.*$","../../src/app/app.component.ts","../../src/providers/persistence/storage/file-storage.ts","../../src/providers/persistence/storage/local-storage.ts","../../buffer (ignored)","../../crypto (ignored)","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/uri.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/uri.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/uri.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/uri.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/uri.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/uri.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/package.json","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/crypto/ecdsa.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/script/interpreter.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/publickey.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/publickeyhash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/multisig.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/multisigscripthash.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/jsdescription.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/zcash/proof.js","../../../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/uri.js","../../fs (ignored)","../../src/models/profile/profile.model.ts","../../src/validators/address.ts","../../src/providers/app-identity/app-identity.ts","../../src/validators/email.ts","../../src/pages/pages.ts","../../src/pages/onboarding/collect-email/collect-email.ts","../../src/pages/slide-to-accept/slide-to-accept.ts","../../src/pages/includes/card-item/card-item.ts","../../src/pages/includes/feedback-card/feedback-card.ts","../../src/pages/includes/gravatar/gravatar.ts","../../src/pages/includes/txp/txp.ts","../../src/pages/includes/wallet-activity/wallet-activity.ts","../../src/pages/pin/pin.ts","../../src/pages/pin/pin-dots/pin-dots.component.ts","../../src/pages/pin/pin-pad/pin-pad.component.ts","../../src/pages/templates/wide-header-page/wide-header-page.ts","../../src/pipes/fiatToUnit.ts","../../src/pipes/keys.ts","../../src/pipes/order-by.ts","../../src/pipes/satToFiat.ts","../../src/pipes/satToUnit.ts","../../src/directives/copy-to-clipboard/copy-to-clipboard.ts","../../src/directives/ios-scroll-bg-color/ios-scroll-bg-color.ts","../../src/directives/long-press/long-press.ts","../../src/directives/navbar-bg/navbar-bg.ts","../../src/directives/no-low-fee/no-low-fee.ts","../../src/directives/reveal-at-scroll-pos/reveal-at-scroll-pos.ts","../../src/components/components.ts","../../src/components/action-sheets.ts","../../src/components/clipboard-card/clipboard-card.ts","../../src/components/editable-item/editable-item.ts","../../src/components/expandable-header/expandable-header.ts","../../src/components/label-tip/label-tip.ts","../../src/providers/providers.module.ts"],"names":[],"mappings":"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AWO,wEAAM;QACO,sFAAmB;QACxB,sEAAc;QACH,0GAAyB;QACvC,6DAAW;QACN,8EAAgB;QAChB,6EAAgB;QACrB,uEAAW;QACN,sFAAgB;QAC1B,6DAAM;QACC,oEAAa;QACJ,mGAAsB;QACnC,6EAAgB;GAtB1B,eAAe,CAo3C3B;AAp3C2B;;;;;;;;;;;;sDCvB5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;sDCvEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;sDCvEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;sDCvEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;sDCvEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;sDCvEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;sDCvEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AA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A;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC/YA;;AAEA;;;;;;;;8CCFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,GAAG,YAAY;AACnE;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC/YA;;AAEA;;;;;;;;;;8CCFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,GAAG,YAAY;AACnE;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC/YA;;AAEA;;;;;;;;8CCFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,GAAG,YAAY;AACnE;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC/YA;;AAEA;;;;;;;;8CCFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,GAAG,YAAY;AACnE;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC/YA;;AAEA;;;;;;;;8CCFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,GAAG,YAAY;AACnE;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC/YA;;AAEA;;;;;;;;8CCFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,iBAAiB,GAAG,YAAY;AACnE;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,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AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CChLA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACviBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/KA;AACA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CCjRA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC7fA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/KA;AACA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CClRA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACvgBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/KA;AACA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CC3LA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACvgBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/KA;AACA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CCzRA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACvgBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/KA;AACA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CChLA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC7fA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/KA;AACA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;8CChLA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB,KAAK,aAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,cAAc;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,uBAAuB;AAClC,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,aAAa;AAClD;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;AC7fA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC/K2C;AACY;AACA;AAEvD,YAAY;AAC0C;AACS;AAEnC;AAG5B,IAAa,WAAW,GAAxB;IAWE,YACU,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,SAA2B;QAH3B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChGA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChGA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChGA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChGA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChGA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChGA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;8CC1MA;;AAEA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChG2C;AACY;AAChB;AACgB;AAEvD,YAAY;AACuD;AAC1B;AACA;AACS;AACV;AAUxC,IAAa,oBAAoB,GAAjC;IACE,YACU,mBAAwC,EACxC,MAAc,EACd,WAAwB,EACxB,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,SAA2B;QAN3B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAkB;QAEnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IACxD,CAAC;IAEM,QAAQ,CAAC,IAAI;QAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB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AAC;IACL,CAAC;CACF;AA7BY,iBAAiB;IAJ7B,gEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;OACG;KACnC,CAAC;yEAO+B;QACX,sEAAS;QACT,iGAAe;QACL,cAAmB;AAoBlD;SA7BY,iBAAiB,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CCZ9B;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;8CC/YA;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;8CC/YA;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;8CC/YA;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;8CC/YA;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;8CC/YA;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;8CC/YA;;AAEA;AACA;;AAEA,wC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,gBAAgB,cAAc,cAAc;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,gBAAgB,cAAc,cAAc;AACvD,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA,GAAG;AACH;AACA,2CAA2C,SAAS;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,QA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBzB;;GAEG;AACH,MAAM,GAAG,GAAsB;IAC7B,IAAI,EAAE,YAAY;IAClB,gBAAgB,EAAE,IAAI;IACtB,QAAQ,EAAE;QACR,GAAG,EAAE,gDAAgD;QACrD,GAAG,EAAE,qDAAqD;QAC1D,IAAI,EAAE,oDAAoD;QAC1D,IAAI,EAAE,iDAAiD;QACvD,GAAG,EAAE,iDAAiD;QACtD,IAAI,EAAE,iDAAiD;QACvD,GAAG,EAAE,gDAAgD;QACrD,GAAG,EAAE,kDAAkD;QACvD,GAAG,EAAE,iDAAiD;KACvD;IACD,eAAe,EAAE,IAAI;CACtB,CAAC;AAEF,yDAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;;;;;;;;8CCtBnB;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,QAAQ;AAC/E;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;8CChPA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,SAAS;AAChF;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;8CCjPA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;AACA;;AAEA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,QAAQ;AAC/E;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;8CC/OA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,QAAQ;AAC/E;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;8CChPA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,SAAS;AAChF;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;8CChPA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,QAAQ;AAC/E;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;8CCjPA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3PA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uEAAuE,QAAQ;AAC/E;AACA,4BAA4B,SAAS;AACrC;AACA,IAAI,GAAG,sCAAsC,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qBAAqB,EAAE;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;AC1OuB;AAEvB,IAAa,WAAW,GAAxB;IACE,YACY,wBAAkD,EAClD,QAAkB,EAClB,MAAsB;QAFtB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAgB;IAC/B,CAAC;IAEG,qBAAqB,CAAI,SAE/B;QACC,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB;aAC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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;8CCvfA;;AAEA;AACA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;8CCvfA;;AAEA;AACA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;8CCvfA;;AAEA;AACA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;8CCvfA;;AAEA;AACA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;8CCvfA;;AAEA;AACA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;8CCvfA;;AAEA;AACA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,eAAe;AAC1B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,eAAe,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACtlCA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;8CCNA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO,qCAAqC;AACvD,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,uBAAuB;AACrC,cAAc,OAAO;AACrB;;AAEA;AACA;AACA,4CAA4C,0BAA0B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAoE;AACzF;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA,qBAAqB,wEAAwE;AAC7F;AACA;AACA;AACA,WAAW,wDAAwD;AACnE,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,8CAA8C;AACzD,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AClwCA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtGA;;AAEA;AACA;AACA;AACA;;;;;;;;8CCLA;;;AAGA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wDAAwD,SAAS;AACjE;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;8CCnpBA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,QAAQ;AACnB;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACvfA,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAC8B;AAMxE,IAAa,yBAAyB,GAAtC,+BAAuC,SAAQ,4FAAiB;IAO9D;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,C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;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;AC/NA,kBAAkB,4SAA4S,yHAAyH,eAAe,qKAAqK,sNAAsN,yCAAyC,YAAY,4BAA4B,SAAS,qDAAqD,iBAAiB,+IAA+I,oFAAoF,+KAA+K,wRAAwR,mEAAmE,YAAY,gFAAgF,oB;;;;;;;8CCA1yD;;AAEA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AC9NA,kBAAkB,4SAA4S,yHAAyH,eAAe,qKAAqK,sNAAsN,yCAAyC,YAAY,4BAA4B,SAAS,qDAAqD,iBAAiB,+IAA+I,oFAAoF,+KAA+K,wRAAwR,mEAAmE,YAAY,gFAAgF,oB;;;;;;;8CCA1yD;;AAEA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;AC9NA,kBAAkB,4SAA4S,yHAAyH,eAAe,qKAAqK,sNAAsN,yCAAyC,YAAY,4BAA4B,SAAS,qDAAqD,iBAAiB,+IAA+I,oFAAoF,+KAA+K,wRAAwR,mEAAmE,YAAY,gFAAgF,oB;;;;;;;8CCA1yD;;AAEA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;AC9NA,kBAAkB,4SAA4S,yHAAyH,eAAe,qKAAqK,sNAAsN,yCAAyC,YAAY,4BAA4B,SAAS,qDAAqD,iBAAiB,+IAA+I,oFAAoF,+KAA+K,wRAAwR,mEAAmE,YAAY,gFAAgF,oB;;;;;;;8CCA1yD;;AAEA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;AC9NA,kBAAkB,4SAA4S,yHAAyH,eAAe,qKAAqK,sNAAsN,yCAAyC,YAAY,4BAA4B,SAAS,qDAAqD,iBAAiB,+IAA+I,oFAAoF,+KAA+K,wRAAwR,mEAAmE,YAAY,gFAAgF,oB;;;;;;;8CCA1yD;;AAEA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;AC9NA,kBAAkB,4SAA4S,yHAAyH,eAAe,qKAAqK,sNAAsN,yCAAyC,YAAY,4BAA4B,SAAS,qDAAqD,iBAAiB,+IAA+I,oFAAoF,+KAA+K,wRAAwR,mEAAmE,YAAY,gFAAgF,oB;;;;;;;8CCA1yD;;AAEA,wC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0CAA0C;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;8CCjTA;;AAEA;;AAEA;AACA;AACA,wC;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzaAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;AACA,yBAAyB,gBAAgB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;ACvvCA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;;;;;;;AC7FA;;AAEA;;AAEA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;;;;;;;;ACpGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;;AAEA,+BAA+B;AAC/B,kCAAkC;;AAElC;AACA;AACA;AACA;;AAEA;;;;;;;;ACvNA;;AAEA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,kCAAkC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,kCAAkC,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC,4CAA4C;AAC5C,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1KA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;;;;;;;;ACpNA;;AAEA;AACA;AACA;AACA,wpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,IAAI;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAC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","file":"main.js","sourcesContent":["/* tslint:disable:no-console */\nimport { Injectable, isDevMode } from '@angular/core';\n\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class Logger {\n  public levels;\n  public weight;\n  public logs;\n\n  constructor() {\n    this.logs = [];\n    this.levels = [\n      { level: 'error', weight: 1, label: 'Error', def: false },\n      { level: 'warn', weight: 2, label: 'Warning', def: false },\n      { level: 'info', weight: 3, label: 'Info', def: true },\n      { level: 'debug', weight: 4, label: 'Debug', def: false }\n    ];\n\n    // Create an array of level weights for performant filtering.\n    this.weight = {};\n    for (let i = 0; i < this.levels.length; i++) {\n      this.weight[this.levels[i].level] = this.levels[i].weight;\n    }\n  }\n\n  public error(message?, ...optionalParams): void {\n    let msg =\n      '[error] ' + (_.isString(message) ? message : JSON.stringify(message));\n    this.log(msg, ...optionalParams);\n    let args = this.processingArgs(arguments);\n    this.add('error', args);\n  }\n\n  public debug(message?, ...optionalParams): void {\n    let msg =\n      '[debug] ' + (_.isString(message) ? message : JSON.stringify(message));\n    if (isDevMode()) this.log(msg, ...optionalParams);\n    let args = this.processingArgs(arguments);\n    this.add('debug', args);\n  }\n\n  public info(message?, ...optionalParams): void {\n    let msg =\n      '[info] ' + (_.isString(message) ? message : JSON.stringify(message));\n    if (isDevMode()) this.log(msg, ...optionalParams);\n    let args = this.processingArgs(arguments);\n    this.add('info', args);\n  }\n\n  public warn(message?, ...optionalParams): void {\n    let msg =\n      '[warn] ' + (_.isString(message) ? message : JSON.stringify(message));\n    if (isDevMode()) this.log(msg, ...optionalParams);\n    let args = this.processingArgs(arguments);\n    this.add('warn', args);\n  }\n\n  public getLevels() {\n    return this.levels;\n  }\n\n  public getWeight(weight) {\n    return _.find(this.levels, l => {\n      return l.weight == weight;\n    });\n  }\n\n  public getDefaultWeight() {\n    return _.find(this.levels, l => {\n      return l.def;\n    });\n  }\n\n  public add(level, msg) {\n    msg = msg.replace('/xpriv.*/', '[...]');\n    msg = msg.replace('/walletPrivKey.*/', 'walletPrivKey:[...]');\n    this.logs.push({\n      timestamp: new Date().toISOString(),\n      level,\n      msg\n    });\n  }\n\n  /**\n   * Returns logs of <= to filteredWeight\n   * @param {number} filteredWeight Weight (1-4) to use when filtering logs. optional\n   */\n  public get(filterWeight?: number) {\n    let filteredLogs = this.logs;\n    if (filterWeight != undefined) {\n      filteredLogs = _.filter(this.logs, l => {\n        return this.weight[l.level] <= filterWeight;\n      });\n    }\n    return filteredLogs;\n  }\n\n  public processingArgs(argsValues) {\n    var args = Array.prototype.slice.call(argsValues);\n    args = args.map(v => {\n      try {\n        if (typeof v == 'undefined') v = 'undefined';\n        if (!v) v = 'null';\n        if (typeof v == 'object') {\n          v = v.message ? v.message : JSON.stringify(v);\n        }\n      } catch (e) {\n        console.log('Error at log decorator:', e);\n        v = 'undefined';\n      }\n      return v;\n    });\n    return args.join(' ');\n  }\n\n  public log(msg: string, ...optionalParams) {\n    console.log(msg, ...optionalParams);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/logger/logger.ts","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\nimport { PersistenceProvider } from '../persistence/persistence';\n\nimport * as _ from 'lodash';\n\nexport interface Config {\n  limits: {\n    totalCopayers: number;\n    mPlusN: number;\n  };\n\n  wallet: {\n    useLegacyAddress: boolean;\n    requiredCopayers: number;\n    totalCopayers: number;\n    spendUnconfirmed: boolean;\n    reconnectDelay: number;\n    idleDurationMin: number;\n    settings: {\n      unitName: string;\n      unitToSatoshi: number;\n      unitDecimals: number;\n      unitCode: string;\n      alternativeName: string;\n      alternativeIsoCode: string;\n      defaultLanguage: string;\n      feeLevel: string;\n    };\n  };\n\n  bws: {\n    url: string;\n  };\n\n  download: {\n    bitpay: {\n      url: string;\n    };\n    copay: {\n      url: string;\n    };\n  };\n\n  rateApp: {\n    bitpay: {\n      ios: string;\n      android: string;\n      wp: string;\n    };\n    copay: {\n      ios: string;\n      android: string;\n      wp: string;\n    };\n  };\n\n  lock: {\n    method: any;\n    value: any;\n    bannedUntil: any;\n  };\n\n  homepageSimpleView: {\n    enabled: boolean;\n  };\n\n  recentTransactions: {\n    enabled: boolean;\n  };\n\n  showIntegration: {\n    coinbase: boolean;\n    glidera: boolean;\n    debitcard: boolean;\n    amazon: boolean;\n    mercadolibre: boolean;\n    shapeshift: boolean;\n  };\n\n  rates: {\n    url: string;\n  };\n\n  release: {\n    url: string;\n  };\n\n  pushNotificationsEnabled: boolean;\n\n  confirmedTxsNotifications: {\n    enabled: boolean;\n  };\n\n  emailNotifications: {\n    enabled: boolean;\n    email: string;\n  };\n\n  emailFor?: any;\n  bwsFor?: any;\n  aliasFor?: any;\n  colorFor?: any;\n  touchIdFor?: any;\n\n  log: {\n    weight: number;\n  };\n\n  blockExplorerUrl: {\n    btc: string;\n    bch: string;\n    safe: string;\n    btcz: string;\n    zcl: string;\n    anon: string;\n    zel: string;\n    rvn: string;\n    ltc: string;\n  };\n}\n\nconst configDefault: Config = {\n  // wallet limits\n  limits: {\n    totalCopayers: 6,\n    mPlusN: 100\n  },\n\n  // wallet default config\n  wallet: {\n    useLegacyAddress: false,\n    requiredCopayers: 2,\n    totalCopayers: 3,\n    spendUnconfirmed: false,\n    reconnectDelay: 5000,\n    idleDurationMin: 4,\n    settings: {\n      unitName: 'SAFE',\n      unitToSatoshi: 100000000,\n      unitDecimals: 8,\n      unitCode: 'safe',\n      alternativeName: 'US Dollar',\n      alternativeIsoCode: 'USD',\n      defaultLanguage: '',\n      feeLevel: 'normal'\n    }\n  },\n\n  // Bitcore wallet service URL\n  bws: {\n    url: 'https://api.safecoin.org/bwss/api'\n//    url: 'http://192.168.91.206:3232/bws/api'\n  },\n\n  download: {\n    bitpay: {\n      url: 'https://localhost/wallet'\n    },\n    copay: {\n      url: 'https://safecoin.org/wallets/'\n    }\n  },\n\n  rateApp: {\n    bitpay: {\n      ios:\n        'https://localhost/app/bitpay-secure-bitcoin-wallet/id1149581638',\n      android:\n        'https://localhost/store/apps/details?id=com.bitpay.wallet',\n      wp: ''\n    },\n    copay: {\n      ios: 'https://localhost/app/copay-bitcoin-wallet/id951330296',\n      android: 'https://localhost/store/apps/details?id=com.bitpay.copay',\n      wp: ''\n    }\n  },\n\n  lock: {\n    method: null,\n    value: null,\n    bannedUntil: null\n  },\n\n  // External services\n  recentTransactions: {\n    enabled: true\n  },\n\n  homepageSimpleView: {\n    enabled: false\n  },\n\n  showIntegration: {\n    coinbase: false,\n    glidera: false,\n    debitcard: false,\n    amazon: false,\n    mercadolibre: false,\n    shapeshift: false\n  },\n\n  rates: {\n    url: 'https://api.safecoin.org:443/rates'\n  },\n\n  release: {\n    url: 'https://api.github.com/repos/fair-exchange/copay-safecoin/releases/latest'\n  },\n\n  pushNotificationsEnabled: false,\n\n  confirmedTxsNotifications: {\n    enabled: true\n  },\n\n  emailNotifications: {\n    enabled: false,\n    email: ''\n  },\n\n  log: {\n    weight: 3\n  },\n\n  blockExplorerUrl: {\n    btc: 'insight.bitpay.com',\n    bch: 'bch-insight.bitpay.com/#',\n    safe: 'explorer.safecoin.org',\n    btcz: 'explorer.btcz.rocks',\n    zcl: 'explorer.zclassicblue.org:3001/insight',\n    anon: 'anon.anon.org:3001/insight',\n    zel: 'explorer2.zel.cash',\n    rvn: 'ravencoin.network',\n    ltc: 'insight.litecore.io'\n  }\n};\n\n@Injectable()\nexport class ConfigProvider {\n  private configCache: Config;\n\n  constructor(\n    private logger: Logger,\n    private persistence: PersistenceProvider\n  ) {\n    this.logger.info('ConfigProvider initialized.');\n  }\n\n  public load() {\n    return new Promise((resolve, reject) => {\n      this.persistence\n        .getConfig()\n        .then((config: Config) => {\n          if (!_.isEmpty(config)) {\n            this.configCache = _.clone(config);\n            this.backwardCompatibility();\n          } else {\n            this.configCache = _.clone(configDefault);\n          }\n          resolve();\n        })\n        .catch(err => {\n          this.logger.error('Error Loading Config');\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * @param newOpts object or string (JSON)\n   */\n  public set(newOpts) {\n    let config = _.cloneDeep(configDefault);\n\n    if (_.isString(newOpts)) {\n      newOpts = JSON.parse(newOpts);\n    }\n    _.merge(config, this.configCache, newOpts);\n    this.configCache = config;\n    this.persistence.storeConfig(this.configCache).then(() => {\n      this.logger.info('Config saved');\n    });\n  }\n\n  public get(): Config {\n    return this.configCache;\n  }\n\n  public getDefaults(): Config {\n    return configDefault;\n  }\n\n  private backwardCompatibility() {\n    // these ifs are to avoid migration problems\n    if (this.configCache.bws) {\n      this.configCache.bws = configDefault.bws;\n    }\n    if (!this.configCache.wallet) {\n      this.configCache.wallet = configDefault.wallet;\n    }\n    if (!this.configCache.wallet.settings.unitCode) {\n      this.configCache.wallet.settings.unitCode =\n        configDefault.wallet.settings.unitCode;\n    }\n\n    if (!this.configCache.showIntegration) {\n      this.configCache.showIntegration = configDefault.showIntegration;\n    }\n\n    if (!this.configCache.homepageSimpleView) {\n      this.configCache.homepageSimpleView = configDefault.homepageSimpleView;\n    }\n\n    if (!this.configCache.recentTransactions) {\n      this.configCache.recentTransactions = configDefault.recentTransactions;\n    }\n    if (!this.configCache.pushNotificationsEnabled) {\n      this.configCache.pushNotificationsEnabled =\n        configDefault.pushNotificationsEnabled;\n    }\n\n    if (this.configCache.wallet.settings.unitCode == 'bit') {\n      // Convert to BTC. Bits will be disabled\n      this.configCache.wallet.settings.unitName =\n        configDefault.wallet.settings.unitName;\n      this.configCache.wallet.settings.unitToSatoshi =\n        configDefault.wallet.settings.unitToSatoshi;\n      this.configCache.wallet.settings.unitDecimals =\n        configDefault.wallet.settings.unitDecimals;\n      this.configCache.wallet.settings.unitCode =\n        configDefault.wallet.settings.unitCode;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/config/config.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { AppProvider } from '../../providers/app/app';\nimport { LanguageProvider } from '../../providers/language/language';\nimport { BwcErrorProvider } from '../bwc-error/bwc-error';\nimport { BwcProvider } from '../bwc/bwc';\nimport { ConfigProvider } from '../config/config';\nimport { OnGoingProcessProvider } from '../on-going-process/on-going-process';\nimport { PersistenceProvider } from '../persistence/persistence';\nimport { PlatformProvider } from '../platform/platform';\nimport { PopupProvider } from '../popup/popup';\nimport { ReplaceParametersProvider } from '../replace-parameters/replace-parameters';\n\n// models\nimport { Profile } from '../../models/profile/profile.model';\nimport { Coin, WalletOptions } from '../wallet/wallet';\n\n@Injectable()\nexport class ProfileProvider {\n  public wallet: any = {};\n  public profile: Profile;\n\n  private UPDATE_PERIOD = 5;\n  private throttledBwsEvent;\n  private validationLock: boolean = false;\n  private errors = this.bwcProvider.getErrors();\n\n  constructor(\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider,\n    private configProvider: ConfigProvider,\n    private replaceParametersProvider: ReplaceParametersProvider,\n    private bwcProvider: BwcProvider,\n    private bwcErrorProvider: BwcErrorProvider,\n    private platformProvider: PlatformProvider,\n    private appProvider: AppProvider,\n    private languageProvider: LanguageProvider,\n    private events: Events,\n    private popupProvider: PopupProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private translate: TranslateService\n  ) {\n    this.throttledBwsEvent = _.throttle((n, wallet) => {\n      this.newBwsEvent(n, wallet);\n    }, 10000);\n  }\n\n  private updateWalletSettings(wallet): void {\n    let config = this.configProvider.get();\n    let defaults = this.configProvider.getDefaults();\n    let defaultColor = '#0b779c';// '#7a8c9e';\n//      this.appProvider.info.nameCase == 'Copay' ? '#1abb9b' : '#647ce8';\n    // this.config.whenAvailable( (config) => { TODO\n    wallet.usingCustomBWS =\n      config.bwsFor &&\n      config.bwsFor[wallet.id] &&\n      config.bwsFor[wallet.id] != defaults.bws.url;\n    wallet.name =\n      (config.aliasFor && config.aliasFor[wallet.id]) ||\n      wallet.credentials.walletName;\n    wallet.color =\n      config.colorFor && config.colorFor[wallet.id]\n        ? config.colorFor[wallet.id]\n        : defaultColor;\n    wallet.email = config.emailFor && config.emailFor[wallet.id];\n    // });\n  }\n\n  public setWalletOrder(walletId: string, index: number): void {\n    this.persistenceProvider.setWalletOrder(walletId, index).then(() => {\n      this.logger.debug(\n        'Wallet new order stored for ' + walletId + ': ' + index\n      );\n    });\n    if (this.wallet[walletId]) this.wallet[walletId]['order'] = index;\n  }\n\n  public async getWalletOrder(walletId: string) {\n    const order = await this.persistenceProvider.getWalletOrder(walletId);\n    return order;\n  }\n\n  public setBackupFlag(walletId: string): void {\n    this.persistenceProvider.setBackupFlag(walletId);\n    this.logger.debug('Backup flag stored');\n    this.wallet[walletId].needsBackup = false;\n  }\n\n  private requiresBackup(wallet): boolean {\n    if (wallet.isPrivKeyExternal()) return false;\n    if (!wallet.credentials.mnemonic && !wallet.credentials.mnemonicEncrypted)\n      return false;\n//    if (wallet.credentials.network == 'testnet') return false; \n    if (wallet.credentials.network == 'livenet') return false; // TODO eternity for test\n\n    return true;\n  }\n\n  private needsBackup(wallet): Promise<boolean> {\n    return new Promise(resolve => {\n      if (!this.requiresBackup(wallet)) {\n        return resolve(false);\n      }\n\n      this.persistenceProvider\n        .getBackupFlag(wallet.credentials.walletId)\n        .then((val: string) => {\n          if (val) {\n            return resolve(false);\n          }\n          return resolve(true);\n        })\n        .catch(err => {\n          this.logger.error(err);\n        });\n    });\n  }\n\n  private isBalanceHidden(wallet): Promise<boolean> {\n    return new Promise(resolve => {\n      this.persistenceProvider\n        .getHideBalanceFlag(wallet.credentials.walletId)\n        .then(shouldHideBalance => {\n          let isHidden =\n            shouldHideBalance && shouldHideBalance.toString() == 'true'\n              ? true\n              : false;\n          return resolve(isHidden);\n        })\n        .catch(err => {\n          this.logger.error(err);\n        });\n    });\n  }\n\n  private async bindWalletClient(wallet, opts?) {\n    opts = opts ? opts : {};\n    let walletId = wallet.credentials.walletId;\n    if (this.wallet[walletId] && this.wallet[walletId].started && !opts.force) {\n      this.logger.info('This wallet has been initialized. Skip. ' + walletId);\n      return;\n    }\n\n    // INIT WALLET VIEWMODEL\n    wallet.id = walletId;\n    wallet.started = true;\n    wallet.network = wallet.credentials.network;\n    wallet.copayerId = wallet.credentials.copayerId;\n    wallet.m = wallet.credentials.m;\n    wallet.n = wallet.credentials.n;\n    wallet.coin = wallet.credentials.coin;\n    wallet.status = {};\n\n    this.updateWalletSettings(wallet);\n    this.wallet[walletId] = wallet;\n\n    wallet.needsBackup = await this.needsBackup(wallet);\n    wallet.balanceHidden = await this.isBalanceHidden(wallet);\n    wallet.order = await this.getWalletOrder(wallet.id);\n\n    wallet.removeAllListeners();\n\n    wallet.on('report', n => {\n      this.logger.info('BWC Report:' + n);\n    });\n\n    wallet.on('notification', n => {\n      this.logger.debug('BWC Notification:', JSON.stringify(n));\n\n      if (n.type == 'NewBlock' && n.data.network == 'testnet') {\n        this.throttledBwsEvent(n, wallet);\n      } else this.newBwsEvent(n, wallet);\n    });\n\n    wallet.on('walletCompleted', () => {\n      this.logger.debug('Wallet completed');\n      this.updateCredentials(JSON.parse(wallet.export()));\n      this.events.publish('status:updated');\n    });\n\n    wallet.initialize(\n      {\n        notificationIncludeOwn: true\n      },\n      err => {\n        if (err) {\n          this.logger.error('Could not init notifications err:', err);\n          return;\n        }\n        wallet.setNotificationsInterval(this.UPDATE_PERIOD);\n        wallet.openWallet(() => {\n          if (wallet.status !== true)\n            this.logger.debug(\n              'Wallet + ' +\n                walletId +\n                ' status:' +\n                JSON.stringify(wallet.status)\n            );\n        });\n      }\n    );\n    this.events.subscribe('wallet:updated', (walletId: string) => {\n      if (walletId && walletId == wallet.id) {\n        this.logger.debug('Updating settings for wallet:' + wallet.id);\n        this.updateWalletSettings(wallet);\n      }\n    });\n  }\n\n  private newBwsEvent(n, wallet): void {\n    if (wallet.cachedStatus) wallet.cachedStatus.isValid = false;\n\n    if (wallet.completeHistory) wallet.completeHistory.isValid = false;\n\n    if (wallet.cachedActivity) wallet.cachedActivity.isValid = false;\n\n    if (wallet.cachedTxps) wallet.cachedTxps.isValid = false;\n\n    this.events.publish('bwsEvent', wallet.id, n.type, n);\n  }\n\n  public updateCredentials(credentials): void {\n    this.profile.updateWallet(credentials);\n    this.persistenceProvider.storeProfile(this.profile);\n  }\n\n  public getLastKnownBalance(wid: string) {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getBalanceCache(wid)\n        .then((data: string) => {\n          return resolve(data);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private addLastKnownBalance(wallet): Promise<any> {\n    return new Promise(resolve => {\n      let now = Math.floor(Date.now() / 1000);\n      let showRange = 600; // 10min;\n\n      this.getLastKnownBalance(wallet.id)\n        .then((data: any) => {\n          if (data) {\n            let parseData = data;\n            wallet.cachedBalance = parseData.balance;\n            wallet.cachedBalanceUpdatedOn =\n              parseData.updatedOn < now - showRange\n                ? parseData.updatedOn\n                : null;\n          }\n          return resolve();\n        })\n        .catch(err => {\n          this.logger.warn('Could not get last known balance: ', err);\n        });\n    });\n  }\n\n  public setLastKnownBalance(wid: string, balance: number): void {\n    this.persistenceProvider.setBalanceCache(wid, {\n      balance,\n      updatedOn: Math.floor(Date.now() / 1000)\n    });\n  }\n\n  private runValidation(wallet, delay?: number, retryDelay?: number) {\n    delay = delay ? delay : 500;\n    retryDelay = retryDelay ? retryDelay : 50;\n\n    if (this.validationLock) {\n      return setTimeout(() => {\n        this.logger.debug(\n          'ValidatingWallet Locked: Retrying in: ' + retryDelay\n        );\n        return this.runValidation(wallet, delay, retryDelay);\n      }, retryDelay);\n    }\n    this.validationLock = true;\n\n    // IOS devices are already checked\n    let skipDeviceValidation =\n      this.platformProvider.isIOS ||\n      this.profile.isDeviceChecked(this.platformProvider.ua);\n    let walletId = wallet.credentials.walletId;\n\n    this.logger.debug(\n      'ValidatingWallet: ' + walletId + ' skip Device:' + skipDeviceValidation\n    );\n    setTimeout(() => {\n      wallet.validateKeyDerivation(\n        {\n          skipDeviceValidation\n        },\n        (_, isOK) => {\n          this.validationLock = false;\n\n          this.logger.debug(\n            'ValidatingWallet End:  ' + walletId + ' isOK:' + isOK\n          );\n          if (isOK) {\n            this.profile.setChecked(this.platformProvider.ua, walletId);\n          } else {\n            this.logger.warn('Key Derivation failed for wallet:' + walletId);\n            this.persistenceProvider.clearLastAddress(walletId).then(() => {});\n          }\n\n          this.storeProfileIfDirty();\n        }\n      );\n    }, delay);\n  }\n\n  public storeProfileIfDirty(): void {\n    if (this.profile.dirty) {\n      this.persistenceProvider.storeProfile(this.profile).then(() => {\n        this.logger.debug('Saved modified Profile');\n        return;\n      });\n    } else {\n      return;\n    }\n  }\n\n  public importWallet(str: string, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let walletClient = this.bwcProvider.getClient(null, opts);\n\n      this.logger.debug('Importing Wallet:', opts);\n\n      try {\n        let c = JSON.parse(str);\n\n        if (c.xPrivKey && c.xPrivKeyEncrypted) {\n          this.logger.warn(\n            'Found both encrypted and decrypted key. Deleting the encrypted version'\n          );\n          delete c.xPrivKeyEncrypted;\n          delete c.mnemonicEncrypted;\n        }\n\n        str = JSON.stringify(c);\n\n        walletClient.import(str, {\n          compressed: opts.compressed,\n          password: opts.password\n        });\n      } catch (err) {\n        return reject(\n          this.translate.instant('Could not import. Check input file.')\n        );\n      }\n\n      let strParsed = JSON.parse(str);\n\n      if (!strParsed.n) {\n        return reject(\n          'Backup format not recognized. If you are using a Copay Beta backup and version is older than 0.10, please see: https://github.com/bitpay/copay/issues/4730#issuecomment-244522614'\n        );\n      }\n\n      let addressBook = strParsed.addressBook ? strParsed.addressBook : {};\n\n      this.addAndBindWalletClient(walletClient, {\n        bwsurl: opts.bwsurl\n      })\n        .then(() => {\n          this.setMetaData(walletClient, addressBook)\n            .then(() => {\n              return resolve(walletClient);\n            })\n            .catch(err => {\n              this.logger.warn('Could not set meta data: ', err);\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  // An alert dialog\n  private askPassword(warnMsg: string, title: string): Promise<any> {\n    return new Promise(resolve => {\n      let opts = {\n        type: 'password',\n        useDanger: true\n      };\n      this.popupProvider.ionicPrompt(title, warnMsg, opts).then(res => {\n        return resolve(res);\n      });\n    });\n  }\n\n  private showWarningNoEncrypt(): Promise<any> {\n    return new Promise(resolve => {\n      let title = this.translate.instant('Are you sure?');\n      let msg = this.translate.instant(\n        'Without encryption, a thief or another application on this device may be able to access your funds.'\n      );\n      let okText = this.translate.instant(\"I'm sure\");\n      let cancelText = this.translate.instant('Go Back');\n      this.popupProvider\n        .ionicConfirm(title, msg, okText, cancelText)\n        .then(res => {\n          return resolve(res);\n        });\n    });\n  }\n\n  private askToEncryptWallet(wallet): Promise<any> {\n    return new Promise(resolve => {\n      if (!wallet.canSign()) return resolve();\n\n      var title = this.translate.instant(\n        'Would you like to protect this wallet with a password?'\n      );\n      var message = this.translate.instant(\n        'Encryption can protect your funds if this device is stolen or compromised by malicious software.'\n      );\n      var okText = this.translate.instant('Yes');\n      var cancelText = this.translate.instant('No');\n      this.popupProvider\n        .ionicConfirm(title, message, okText, cancelText)\n        .then(res => {\n          if (!res) {\n            return this.showWarningNoEncrypt().then(res => {\n              if (res) return resolve();\n              return this.encrypt(wallet).then(() => {\n                return resolve();\n              });\n            });\n          }\n          return this.encrypt(wallet).then(() => {\n            return resolve();\n          });\n        });\n    });\n  }\n\n  private encrypt(wallet): Promise<any> {\n    return new Promise(resolve => {\n      let title = this.translate.instant(\n        'Enter a password to encrypt your wallet'\n      );\n      let warnMsg = this.translate.instant(\n        'This password is only for this device, and it cannot be recovered. To avoid losing funds, write your password down.'\n      );\n      this.askPassword(warnMsg, title).then((password: string) => {\n        if (!password) {\n          this.showWarningNoEncrypt().then(res => {\n            if (res) return resolve();\n            this.encrypt(wallet).then(() => {\n              return resolve();\n            });\n          });\n        } else {\n          title = this.translate.instant(\n            'Enter your encrypt password again to confirm'\n          );\n          this.askPassword(warnMsg, title).then((password2: string) => {\n            if (!password2 || password != password2) {\n              this.encrypt(wallet).then(() => {\n                return resolve();\n              });\n            } else {\n              wallet.encryptPrivateKey(password);\n              return resolve();\n            }\n          });\n        }\n      });\n    });\n  }\n\n  // Adds and bind a new client to the profile\n  private addAndBindWalletClient(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!wallet || !wallet.credentials) {\n        return reject(this.translate.instant('Could not access wallet'));\n      }\n\n      // Encrypt wallet\n      this.onGoingProcessProvider.pause();\n      this.askToEncryptWallet(wallet).then(() => {\n        this.onGoingProcessProvider.resume();\n\n        let walletId: string = wallet.credentials.walletId;\n\n        if (!this.profile.addWallet(JSON.parse(wallet.export()))) {\n          let message = this.replaceParametersProvider.replace(\n            this.translate.instant('Wallet already in {{nameCase}}'),\n            { nameCase: this.appProvider.info.nameCase }\n          );\n          return reject(message);\n        }\n\n        let skipKeyValidation: boolean = this.shouldSkipValidation(walletId);\n        if (!skipKeyValidation) this.runValidation(wallet);\n\n        this.bindWalletClient(wallet);\n\n        let saveBwsUrl = (): Promise<any> => {\n          return new Promise(resolve => {\n            let defaults = this.configProvider.getDefaults();\n            let bwsFor = {};\n            bwsFor[walletId] = opts.bwsurl || defaults.bws.url;\n\n            // Dont save the default\n            if (bwsFor[walletId] == defaults.bws.url) {\n              return resolve();\n            }\n\n            this.configProvider.set({ bwsFor });\n            return resolve();\n          });\n        };\n\n        saveBwsUrl().then(() => {\n          this.persistenceProvider\n            .storeProfile(this.profile)\n            .then(() => {\n              return resolve(wallet);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        });\n      });\n    });\n  }\n\n  private shouldSkipValidation(walletId: string): boolean {\n    return (\n      this.profile.isChecked(this.platformProvider.ua, walletId) ||\n      this.platformProvider.isIOS\n    );\n  }\n\n  private setMetaData(wallet, addressBook): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getAddressBook(wallet.credentials.network)\n        .then(localAddressBook => {\n          let localAddressBook1 = {};\n          try {\n            localAddressBook1 = JSON.parse(localAddressBook);\n          } catch (ex) {\n            this.logger.info(\n              'Address Book: JSON.parse not neccesary.',\n              localAddressBook\n            );\n          }\n          let mergeAddressBook = _.merge(addressBook, localAddressBook1);\n          this.persistenceProvider\n            .setAddressBook(\n              wallet.credentials.network,\n              JSON.stringify(mergeAddressBook)\n            )\n            .then(() => {\n              return resolve();\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public importExtendedPrivateKey(xPrivKey: string, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let walletClient = this.bwcProvider.getClient(null, opts);\n      this.logger.debug('Importing Wallet xPrivKey');\n\n      walletClient.importFromExtendedPrivateKey(xPrivKey, opts, err => {\n        if (err) {\n          if (err instanceof this.errors.NOT_AUTHORIZED) return reject(err);\n          this.bwcErrorProvider\n            .cb(err, this.translate.instant('Could not import'))\n            .then((msg: string) => {\n              return reject(msg);\n            });\n        } else {\n          this.addAndBindWalletClient(walletClient, {\n            bwsurl: opts.bwsurl\n          })\n            .then(wallet => {\n              return resolve(wallet);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        }\n      });\n    });\n  }\n\n  private normalizeMnemonic(words: string): string {\n    if (!words || !words.indexOf) return words;\n    let isJA = words.indexOf('\\u3000') > -1;\n    let wordList = words.split(/[\\u3000\\s]+/);\n\n    return wordList.join(isJA ? '\\u3000' : ' ');\n  }\n\n  public importMnemonic(words: string, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let walletClient = this.bwcProvider.getClient(null, opts);\n\n      this.logger.debug('Importing Wallet Mnemonic');\n\n      words = this.normalizeMnemonic(words);\n      walletClient.importFromMnemonic(\n        words,\n        {\n          network: opts.networkName,\n          passphrase: opts.passphrase,\n          entropySourcePath: opts.entropySourcePath,\n          derivationStrategy: opts.derivationStrategy || 'BIP44',\n          account: opts.account || 0,\n          coin: opts.coin\n        },\n        err => {\n          if (err) {\n            if (err instanceof this.errors.NOT_AUTHORIZED) {\n              return reject(err);\n            }\n\n            this.bwcErrorProvider\n              .cb(err, this.translate.instant('Could not import'))\n              .then((msg: string) => {\n                return reject(msg);\n              });\n          }\n\n          this.addAndBindWalletClient(walletClient, {\n            bwsurl: opts.bwsurl\n          })\n            .then(wallet => {\n              return resolve(wallet);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        }\n      );\n    });\n  }\n\n  public importExtendedPublicKey(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let walletClient = this.bwcProvider.getClient(null, opts);\n      this.logger.debug('Importing Wallet XPubKey');\n\n      walletClient.importFromExtendedPublicKey(\n        opts.extendedPublicKey,\n        opts.externalSource,\n        opts.entropySource,\n        {\n          account: opts.account || 0,\n          derivationStrategy: opts.derivationStrategy || 'BIP44',\n          coin: opts.coin\n        },\n        err => {\n          if (err) {\n            // in HW wallets, req key is always the same. They can't addAccess.\n            if (err instanceof this.errors.NOT_AUTHORIZED)\n              err.name = 'WALLET_DOES_NOT_EXIST';\n\n            this.bwcErrorProvider\n              .cb(err, this.translate.instant('Could not import'))\n              .then((msg: string) => {\n                return reject(msg);\n              });\n          }\n\n          this.addAndBindWalletClient(walletClient, {\n            bwsurl: opts.bwsurl\n          })\n            .then(wallet => {\n              return resolve(wallet);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        }\n      );\n    });\n  }\n\n  public createProfile(): void {\n    this.logger.info('Creating profile');\n    this.profile = new Profile();\n    this.profile = this.profile.create();\n    this.persistenceProvider.storeNewProfile(this.profile);\n  }\n\n  public bindProfile(profile): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let bindWallets = (): Promise<any> => {\n        return new Promise((resolve, reject) => {\n          let l = profile.credentials.length;\n          let i = 0;\n          let totalBound = 0;\n\n          if (!l) {\n            return resolve();\n          }\n\n          _.each(profile.credentials, credentials => {\n            this.bindWallet(credentials)\n              .then((bound: number) => {\n                i++;\n                totalBound += bound;\n                if (i == l) {\n                  this.logger.info(\n                    'Bound ' + totalBound + ' out of ' + l + ' wallets'\n                  );\n                  return resolve();\n                }\n              })\n              .catch(err => {\n                return reject(err);\n              });\n          });\n        });\n      };\n\n      bindWallets()\n        .then(() => {\n          this.isOnboardingCompleted()\n            .then(() => {\n              this.isDisclaimerAccepted()\n                .then(() => {\n                  return resolve();\n                })\n                .catch(() => {\n                  return reject(\n                    new Error('NONAGREEDDISCLAIMER: Non agreed disclaimer')\n                  );\n                });\n            })\n            .catch(() => {\n              this.isDisclaimerAccepted()\n                .then(() => {\n                  this.setOnboardingCompleted()\n                    .then(() => {\n                      return resolve();\n                    })\n                    .catch(err => {\n                      this.logger.error(err);\n                    });\n                })\n                .catch(() => {\n                  return reject(\n                    new Error(\n                      'ONBOARDINGNONCOMPLETED: Onboarding non completed'\n                    )\n                  );\n                });\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public isDisclaimerAccepted(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let disclaimerAccepted = this.profile && this.profile.disclaimerAccepted;\n      if (disclaimerAccepted) return resolve();\n\n      // OLD flag\n      this.persistenceProvider.getCopayDisclaimerFlag().then(val => {\n        if (val) {\n          this.profile.disclaimerAccepted = true;\n          return resolve();\n        } else {\n          return reject();\n        }\n      });\n    });\n  }\n\n  public isOnboardingCompleted(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let onboardingCompleted =\n        this.profile && this.profile.onboardingCompleted;\n      if (onboardingCompleted) return resolve();\n\n      this.persistenceProvider.getCopayOnboardingFlag().then(val => {\n        if (val) {\n          this.profile.onboardingCompleted = true;\n          return resolve();\n        } else {\n          return reject();\n        }\n      });\n    });\n  }\n\n  private bindWallet(credentials): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!credentials.walletId || !credentials.m) {\n        return reject('bindWallet should receive credentials JSON');\n      }\n\n      // Create the client\n      let getBWSURL = (walletId: string) => {\n        let config = this.configProvider.get();\n        let defaults = this.configProvider.getDefaults();\n        return (config.bwsFor && config.bwsFor[walletId]) || defaults.bws.url;\n      };\n\n      let walletClient = this.bwcProvider.getClient(\n        JSON.stringify(credentials),\n        {\n          bwsurl: getBWSURL(credentials.walletId)\n        }\n      );\n\n      let skipKeyValidation = this.shouldSkipValidation(credentials.walletId);\n      if (!skipKeyValidation) this.runValidation(walletClient, 500);\n\n      this.logger.info(\n        'Binding wallet:' +\n          credentials.walletId +\n          ' Validating?:' +\n          !skipKeyValidation\n      );\n      return resolve(this.bindWalletClient(walletClient));\n    });\n  }\n\n  public loadAndBindProfile(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getProfile()\n        .then(profile => {\n          if (!profile) {\n            return resolve();\n          }\n          this.profile = new Profile();\n          this.profile = this.profile.fromObj(profile);\n          // Deprecated: storageService.tryToMigrate\n          this.logger.debug('Profile read');\n          this.bindProfile(this.profile)\n            .then(() => {\n              return resolve(this.profile);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private seedWallet(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts ? opts : {};\n      let walletClient = this.bwcProvider.getClient(null, opts);\n      let network = opts.networkName || 'livenet';\n\n      if (opts.mnemonic) {\n        try {\n          opts.mnemonic = this.normalizeMnemonic(opts.mnemonic);\n          walletClient.seedFromMnemonic(opts.mnemonic, {\n            network,\n            passphrase: opts.passphrase,\n            account: opts.account || 0,\n            derivationStrategy: opts.derivationStrategy || 'BIP44',\n            coin: opts.coin\n          });\n        } catch (ex) {\n          this.logger.info('Invalid wallet recovery phrase: ', ex);\n          return reject(\n            this.translate.instant(\n              'Could not create: Invalid wallet recovery phrase'\n            )\n          );\n        }\n      } else if (opts.extendedPrivateKey) {\n        try {\n          walletClient.seedFromExtendedPrivateKey(opts.extendedPrivateKey, {\n            network,\n            account: opts.account || 0,\n            derivationStrategy: opts.derivationStrategy || 'BIP44',\n            coin: opts.coin\n          });\n        } catch (ex) {\n          this.logger.warn(\n            'Could not get seed from Extended Private Key: ',\n            ex\n          );\n          return reject(\n            this.translate.instant(\n              'Could not create using the specified extended private key'\n            )\n          );\n        }\n      } else if (opts.extendedPublicKey) {\n        try {\n          walletClient.seedFromExtendedPublicKey(\n            opts.extendedPublicKey,\n            opts.externalSource,\n            opts.entropySource,\n            {\n              account: opts.account || 0,\n              derivationStrategy: opts.derivationStrategy || 'BIP44',\n              coin: opts.coin\n            }\n          );\n          walletClient.credentials.hwInfo = opts.hwInfo;\n        } catch (ex) {\n          this.logger.warn(\n            'Creating wallet from Extended Public Key Arg:',\n            ex,\n            opts\n          );\n          return reject(\n            this.translate.instant(\n              'Could not create using the specified extended public key'\n            )\n          );\n        }\n      } else {\n        let lang = this.languageProvider.getCurrent();\n        try {\n          walletClient.seedFromRandomWithMnemonic({\n            network,\n            passphrase: opts.passphrase,\n            language: lang,\n            account: 0,\n            coin: opts.coin\n          });\n        } catch (e) {\n          this.logger.info('Error creating recovery phrase: ' + e.message);\n          if (e.message.indexOf('language') > 0) {\n            this.logger.info('Using default language for recovery phrase');\n            walletClient.seedFromRandomWithMnemonic({\n              network,\n              passphrase: opts.passphrase,\n              account: 0,\n              coin: opts.coin\n            });\n          } else {\n            return reject(e);\n          }\n        }\n      }\n      return resolve(walletClient);\n    });\n  }\n\n  // Creates a wallet on BWC/BWS\n  private doCreateWallet(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let showOpts = _.clone(opts);\n      if (showOpts.extendedPrivateKey) showOpts.extendedPrivateKey = '[hidden]';\n      if (showOpts.mnemonic) showOpts.mnemonic = '[hidden]';\n\n      this.logger.debug('Creating Wallet:', JSON.stringify(showOpts));\n      setTimeout(() => {\n        this.seedWallet(opts)\n          .then(walletClient => {\n            let name = opts.name || this.translate.instant('Personal Wallet');\n            let myName = opts.myName || this.translate.instant('me');\n\n            walletClient.createWallet(\n              name,\n              myName,\n              opts.m,\n              opts.n,\n              {\n                network: opts.networkName,\n                singleAddress: opts.singleAddress,\n                walletPrivKey: opts.walletPrivKey,\n                coin: opts.coin\n              },\n              err => {\n                if (err) {\n                  this.bwcErrorProvider\n                    .cb(err, this.translate.instant('Error creating wallet'))\n                    .then((msg: string) => {\n                      return reject(msg);\n                    });\n                } else {\n                  return resolve(walletClient);\n                }\n              }\n            );\n          })\n          .catch(err => {\n            return reject(err);\n          });\n      }, 50);\n    });\n  }\n\n  // create and store a wallet\n  public createWallet(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.doCreateWallet(opts)\n        .then(walletClient => {\n          this.addAndBindWalletClient(walletClient, {\n            bwsurl: opts.bwsurl\n          }).then(wallet => {\n            return resolve(wallet);\n          });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  // joins and stores a wallet\n  public joinWallet(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.debug('Joining Wallet:', opts);\n\n      try {\n        var walletData = this.bwcProvider.parseSecret(opts.secret, opts.coin);\n\n        // check if exist\n        if (\n          _.find(this.profile.credentials, {\n            walletId: walletData.walletId\n          })\n        ) {\n          return reject(\n            this.translate.instant('Cannot join the same wallet more that once')\n          );\n        }\n      } catch (ex) {\n        this.logger.debug(ex);\n        return reject(this.translate.instant('Bad wallet invitation'));\n      }\n      opts.networkName = walletData.network;\n      this.logger.debug('Joining Wallet:', opts);\n\n      this.seedWallet(opts)\n        .then(walletClient => {\n          walletClient.joinWallet(\n            opts.secret,\n            opts.myName || 'me',\n            {\n              coin: opts.coin\n            },\n            err => {\n              if (err) {\n                this.bwcErrorProvider\n                  .cb(err, this.translate.instant('Could not join wallet'))\n                  .then((msg: string) => {\n                    return reject(msg);\n                  });\n              } else {\n                this.addAndBindWalletClient(walletClient, {\n                  bwsurl: opts.bwsurl\n                }).then(wallet => {\n                  return resolve(wallet);\n                });\n              }\n            }\n          );\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public getWallet(walletId: string) {\n    return this.wallet[walletId];\n  }\n\n  public deleteWalletClient(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let walletId = wallet.credentials.walletId;\n\n      this.logger.debug('Deleting Wallet:', wallet.credentials.walletName);\n      wallet.removeAllListeners();\n\n      this.profile.deleteWallet(walletId);\n\n      delete this.wallet[walletId];\n\n      this.persistenceProvider.removeAllWalletData(walletId).catch(err => {\n        this.logger.warn('Could not remove all wallet data: ', err);\n      });\n\n      this.persistenceProvider\n        .storeProfile(this.profile)\n        .then(() => {\n          return resolve();\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public createDefaultWallet(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let opts: Partial<WalletOptions> = {};\n      opts.m = 1;\n      opts.n = 1;\n      opts.networkName = 'livenet';\n      opts.coin = Coin.SAFE;\n      this.createWallet(opts)\n        .then(wallet => {\n          return resolve(wallet);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public setDisclaimerAccepted(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.profile.disclaimerAccepted = true;\n      this.persistenceProvider\n        .storeProfile(this.profile)\n        .then(() => {\n          return resolve();\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public setOnboardingCompleted(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.profile.onboardingCompleted = true;\n      this.persistenceProvider\n        .storeProfile(this.profile)\n        .then(() => {\n          return resolve();\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public getWallets(opts?) {\n    if (opts && !_.isObject(opts)) throw new Error('bad argument');\n\n    opts = opts || {};\n\n    let ret = _.values(this.wallet as any);\n\n    if (opts.coin) {\n      ret = _.filter(ret, x => {\n        return x.credentials.coin == opts.coin;\n      });\n    }\n\n    if (opts.network) {\n      ret = _.filter(ret, x => {\n        return x.credentials.network == opts.network;\n      });\n    }\n\n    if (opts.n) {\n      ret = _.filter(ret, w => {\n        return w.credentials.n == opts.n;\n      });\n    }\n\n    if (opts.m) {\n      ret = _.filter(ret, w => {\n        return w.credentials.m == opts.m;\n      });\n    }\n\n    if (opts.hasFunds) {\n      ret = _.filter(ret, w => {\n        if (!w.status) return undefined;\n        return w.status.availableBalanceSat > 0;\n      });\n    }\n\n    if (opts.minAmount) {\n      ret = _.filter(ret, w => {\n        if (!w.status) return undefined;\n        return w.status.availableBalanceSat > opts.minAmount;\n      });\n    }\n\n    if (opts.onlyComplete) {\n      ret = _.filter(ret, w => {\n        return w.isComplete();\n      });\n    } else {\n    }\n\n    // Add cached balance async\n    _.each(ret, x => {\n      this.addLastKnownBalance(x);\n    });\n\n    return _.sortBy(ret, 'order');\n  }\n\n  public toggleHideBalanceFlag(walletId: string): void {\n    this.wallet[walletId].balanceHidden = !this.wallet[walletId].balanceHidden;\n    this.persistenceProvider.setHideBalanceFlag(\n      walletId,\n      this.wallet[walletId].balanceHidden\n    );\n  }\n\n  public getNotifications(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts ? opts : {};\n\n      let TIME_STAMP = 60 * 60 * 6;\n      let MAX = 30;\n\n      let typeFilter = {\n        NewOutgoingTx: 1,\n        NewIncomingTx: 1\n      };\n\n      let w = this.getWallets();\n      if (_.isEmpty(w)) return reject('Could not find any wallet');\n\n      let l = w.length;\n      let j = 0;\n      let notifications = [];\n\n      let isActivityCached = (wallet): boolean => {\n        return wallet.cachedActivity && wallet.cachedActivity.isValid;\n      };\n\n      let updateNotifications = (wallet): Promise<any> => {\n        return new Promise((resolve, reject) => {\n          if (isActivityCached(wallet) && !opts.force) {\n            return resolve();\n          }\n\n          wallet.getNotifications(\n            {\n              timeSpan: TIME_STAMP,\n              includeOwn: true\n            },\n            (err, n) => {\n              if (err) {\n                return reject(err);\n              }\n              wallet.cachedActivity = {\n                n: n.slice(-MAX),\n                isValid: true\n              };\n\n              return resolve();\n            }\n          );\n        });\n      };\n\n      let process = notifications => {\n        if (!notifications) return [];\n\n        let shown = _.sortBy(notifications, 'createdOn').reverse();\n\n        shown = shown.splice(0, opts.limit || MAX);\n\n        _.each(shown, x => {\n          x.txpId = x.data ? x.data.txProposalId : null;\n          x.txid = x.data ? x.data.txid : null;\n          x.types = [x.type];\n\n          x.action = () => {\n            // TODO?\n            // $state.go('tabs.wallet', {\n            //   walletId: x.walletId,\n            //   txpId: x.txpId,\n            //   txid: x.txid,\n            // });\n          };\n        });\n\n        // let finale = shown; GROUPING DISABLED!\n\n        let finale = [];\n        let prev;\n\n        // Item grouping... DISABLED.\n\n        // REMOVE (if we want 1-to-1 notification) ????\n        _.each(shown, x => {\n          if (\n            prev &&\n            prev.walletId === x.walletId &&\n            prev.txpId &&\n            prev.txpId === x.txpId &&\n            prev.creatorId &&\n            prev.creatorId === x.creatorId\n          ) {\n            prev.types.push(x.type);\n            prev.data = _.assign(prev.data, x.data);\n            prev.txid = prev.txid || x.txid;\n            prev.creatorName = prev.creatorName || x.creatorName;\n          } else {\n            finale.push(x);\n            prev = x;\n          }\n        });\n\n        let u = this.bwcProvider.getUtils();\n        _.each(finale, x => {\n          if (\n            x.data &&\n            x.data.message &&\n            x.wallet &&\n            x.wallet.credentials.sharedEncryptingKey\n          ) {\n            // TODO TODO TODO => BWC\n            x.message = u.decryptMessage(\n              x.data.message,\n              x.wallet.credentials.sharedEncryptingKey\n            );\n          }\n        });\n\n        return finale;\n      };\n\n      let pr = (wallet, cb) => {\n        updateNotifications(wallet)\n          .then(() => {\n            let n = _.filter(wallet.cachedActivity.n, x => {\n              return typeFilter[x.type];\n            });\n\n            let idToName = {};\n            if (wallet.cachedStatus) {\n              _.each(wallet.cachedStatus.wallet.copayers, c => {\n                idToName[c.id] = c.name;\n              });\n            }\n\n            _.each(n, x => {\n              x.wallet = wallet;\n              if (x.creatorId && wallet.cachedStatus) {\n                x.creatorName = idToName[x.creatorId];\n              }\n            });\n\n            notifications.push(n);\n            return cb();\n          })\n          .catch(err => {\n            return cb(err);\n          });\n      };\n\n      _.each(w, wallet => {\n        pr(wallet, err => {\n          if (err)\n            this.logger.warn(\n              this.bwcErrorProvider.msg(\n                err,\n                'Error updating notifications for ' + wallet.name\n              )\n            );\n          if (++j == l) {\n            notifications = _.sortBy(notifications, 'createdOn').reverse();\n            notifications = _.compact(_.flatten(notifications)).slice(0, MAX);\n            let total = notifications.length;\n            let processArray = process(notifications);\n            return resolve({ notifications: processArray, total });\n          }\n        });\n      });\n    });\n  }\n\n  public getTxps(opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let MAX = 100;\n      opts = opts ? opts : {};\n\n      let w = this.getWallets();\n      if (_.isEmpty(w)) {\n        return reject('No wallets available');\n      }\n\n      let txps = [];\n\n      _.each(w, x => {\n        if (x.pendingTxps) txps = txps.concat(x.pendingTxps);\n      });\n      let n = txps.length;\n      txps = _.sortBy(txps, 'createdOn').reverse();\n      txps = _.compact(_.flatten(txps)).slice(0, opts.limit || MAX);\n      return resolve({ txps, n });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/profile/profile.ts","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-anon found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreAnon);\nglobal._bitcoreAnon = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/index.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-cash found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreBtcz);\nglobal._bitcoreBtcz = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/index.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-cash found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreLtc);\nglobal._bitcoreLtc = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/index.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-cash found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreRvn);\nglobal._bitcoreRvn = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/index.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-cash found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreSafe);\nglobal._bitcoreSafe = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/index.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-cash found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreZcl);\nglobal._bitcoreZcl = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/index.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib-cash found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcoreZel);\nglobal._bitcoreZel = bitcore.version;\n\n// crypto                          \t\nbitcore.crypto = {};\n// bitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('bitcore-lib').crypto.Hash;\n// bitcore.crypto.Random = require('bitcore-lib').crypto.Random;\n// bitcore.crypto.Point = require('bitcore-lib').crypto.Point ;\nbitcore.crypto.Signature = require('bitcore-lib').crypto.Signature;\n\n// encoding\n bitcore.encoding = {};\nbitcore.encoding.Base58 = require('bitcore-lib').encoding.Base58;\nbitcore.encoding.Base58Check = require('bitcore-lib').encoding.Base58Check;\nbitcore.encoding.BufferReader = require('bitcore-lib').encoding.BufferReader;\nbitcore.encoding.BufferWriter = require('bitcore-lib').encoding.BufferWriter;\n// bitcore.encoding.Varint = require('bitcore-lib').encoding.Varint;\n\n// utilities\n// bitcore.util = {};\n// bitcore.util.buffer = require('bitcore-lib').buffer;\n// bitcore.util.js = require('bitcore-lib').util.js;\n// bitcore.util.preconditions = require('bitcore-lib').util.preconditions;\n// bitcore.util.base32 = require('bitcore-lib').util.base32;\n// bitcore.util.convertBits = require('bitcore-lib').util.convertBits;\n\n// errors thrown by the library\n// bitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\n// bitcore.Block = require('./lib/block');\n// bitcore.MerkleBlock = require('./lib/block/merkleblock');\n// bitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\n//bitcore.Transaction.sighash = require('./lib/transaction/sighash');\nmodule.exports = bitcore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/index.js\n// module id = 25\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class PlatformProvider {\n  public isAndroid: boolean;\n  public isIOS: boolean;\n  public isSafari: boolean;\n  public isCordova: boolean;\n  public isNW: boolean;\n  public ua: string;\n  public isMobile: boolean;\n  public isDevel: boolean;\n\n  constructor(private platform: Platform, private logger: Logger) {\n    let ua = navigator ? navigator.userAgent : null;\n\n    if (!ua) {\n      this.logger.info('Could not determine navigator. Using fixed string');\n      ua = 'dummy user-agent';\n    }\n\n    // Fixes IOS WebKit UA\n    ua = ua.replace(/\\(\\d+\\)$/, '');\n\n    this.isAndroid = this.platform.is('android');\n    this.isIOS = this.platform.is('ios');\n    this.ua = ua;\n    this.isCordova = this.platform.is('cordova');\n    this.isNW = this.isNodeWebkit();\n    this.isMobile = this.platform.is('mobile');\n    this.isDevel = !this.isMobile && !this.isNW;\n\n    this.logger.info('PlatformProvider initialized.');\n  }\n\n  public getBrowserName(): string {\n    let userAgent = window.navigator.userAgent;\n    let browsers = {\n      chrome: /chrome/i,\n      safari: /safari/i,\n      firefox: /firefox/i,\n      ie: /internet explorer/i\n    };\n\n    for (let key in browsers) {\n      if (browsers[key].test(userAgent)) {\n        return key;\n      }\n    }\n\n    return 'unknown';\n  }\n\n  public isNodeWebkit(): boolean {\n    let isNode =\n      typeof process !== 'undefined' && typeof require !== 'undefined';\n    if (isNode) {\n      try {\n        return typeof (window as any).require('nw.gui') !== 'undefined';\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/platform/platform.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events } from 'ionic-angular';\nimport * as lodash from 'lodash';\nimport encoding from 'text-encoding';\nimport { Logger } from '../../providers/logger/logger';\n\n// Providers\nimport { BwcErrorProvider } from '../bwc-error/bwc-error';\nimport { BwcProvider } from '../bwc/bwc';\nimport { ConfigProvider } from '../config/config';\nimport { FeeProvider } from '../fee/fee';\nimport { FilterProvider } from '../filter/filter';\nimport { LanguageProvider } from '../language/language';\nimport { OnGoingProcessProvider } from '../on-going-process/on-going-process';\nimport { PersistenceProvider } from '../persistence/persistence';\nimport { PopupProvider } from '../popup/popup';\nimport { RateProvider } from '../rate/rate';\nimport { TouchIdProvider } from '../touchid/touchid';\nimport { TxFormatProvider } from '../tx-format/tx-format';\n\nexport enum Coin {\n  BTC = 'btc',\n  BCH = 'bch',\n  SAFE = 'safe',\n  BTCZ = 'btcz',\n  ZCL = 'zcl',\n  ANON = 'anon',\n  ZEL = 'zel',\n  RVN = 'rvn',\n  LTC = 'ltc'\n}\n\nexport interface WalletOptions {\n  name: any;\n  m: any;\n  n: any;\n  myName: any;\n  networkName: string;\n  bwsurl: any;\n  singleAddress: any;\n  coin: Coin;\n  extendedPrivateKey: any;\n  mnemonic: any;\n  derivationStrategy: any;\n  secret: any;\n  account: any;\n  passphrase: any;\n  walletPrivKey: any;\n  compliantDerivation: any;\n}\n\nexport interface TransactionProposal {\n  amount: any;\n  toAddress: any;\n  outputs: Array<{\n    toAddress: any;\n    amount: any;\n    message: string;\n  }>;\n  inputs: any;\n  fee: any;\n  message: string;\n  customData?: {\n    service?: string;\n    glideraToken?: string;\n    shapeShift?: string;\n    toWalletName?: any;\n  };\n  payProUrl: any;\n  excludeUnconfirmedUtxos: boolean;\n  feePerKb: number;\n  feeLevel: string;\n  dryRun: boolean;\n}\n\n@Injectable()\nexport class WalletProvider {\n  // Ratio low amount warning (fee/amount) in incoming TX\n  private LOW_AMOUNT_RATIO: number = 0.15;\n\n  // Ratio of \"many utxos\" warning in total balance (fee/amount)\n  private TOTAL_LOW_WARNING_RATIO: number = 0.3;\n\n  private WALLET_STATUS_MAX_TRIES: number = 7;\n  private WALLET_STATUS_DELAY_BETWEEN_TRIES: number = 1.4 * 1000;\n  private SOFT_CONFIRMATION_LIMIT: number = 12;\n  private SAFE_CONFIRMATIONS: number = 6;\n\n  private errors = this.bwcProvider.getErrors();\n\n  private progressFn = {};\n\n  private isPopupOpen: boolean;\n  /* TODO: update on progress\n  private updateOnProgress = {}\n   */\n\n  constructor(\n    private logger: Logger,\n    private bwcProvider: BwcProvider,\n    private txFormatProvider: TxFormatProvider,\n    private configProvider: ConfigProvider,\n    private persistenceProvider: PersistenceProvider,\n    private bwcErrorProvider: BwcErrorProvider,\n    private rateProvider: RateProvider,\n    private filter: FilterProvider,\n    private languageProvider: LanguageProvider,\n    private popupProvider: PopupProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private touchidProvider: TouchIdProvider,\n    private events: Events,\n    private feeProvider: FeeProvider,\n    private translate: TranslateService\n  ) {\n    this.logger.info('WalletService initialized.');\n    this.isPopupOpen = false;\n  }\n\n  private invalidateCache(wallet) {\n    if (wallet.cachedStatus) wallet.cachedStatus.isValid = false;\n\n    if (wallet.completeHistory) wallet.completeHistory.isValid = false;\n\n    if (wallet.cachedActivity) wallet.cachedActivity.isValid = false;\n\n    if (wallet.cachedTxps) wallet.cachedTxps.isValid = false;\n  }\n\n  public getStatus(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts || {};\n      var walletId = wallet.id;\n\n      let processPendingTxps = status => {\n        let txps = status.pendingTxps;\n        let now = Math.floor(Date.now() / 1000);\n\n        /* To test multiple outputs...\n        var txp = {\n          message: 'test multi-output',\n          fee: 1000,\n          createdOn: new Date() / 1000,\n          outputs: []\n        };\n        function addOutput(n) {\n          txp.outputs.push({\n            amount: 600,\n            toAddress: '2N8bhEwbKtMvR2jqMRcTCQqzHP6zXGToXcK',\n            message: 'output #' + (Number(n) + 1)\n          });\n        };\n        lodash.times(150, addOutput);\n        txps.push(txp);\n        */\n\n        lodash.each(txps, tx => {\n          tx = this.txFormatProvider.processTx(\n            wallet.coin,\n            tx,\n            this.useLegacyAddress()\n          );\n\n          // no future transactions...\n          if (tx.createdOn > now) tx.createdOn = now;\n\n          tx.wallet = wallet;\n\n          if (!tx.wallet) {\n            this.logger.error('no wallet at txp?');\n            return;\n          }\n\n          let action = lodash.find(tx.actions, {\n            copayerId: tx.wallet.copayerId\n          });\n\n          if (!action && tx.status == 'pending') {\n            tx.pendingForUs = true;\n          }\n\n          if (action && action.type == 'accept') {\n            tx.statusForUs = 'accepted';\n          } else if (action && action.type == 'reject') {\n            tx.statusForUs = 'rejected';\n          } else {\n            tx.statusForUs = 'pending';\n          }\n\n          if (!tx.deleteLockTime) tx.canBeRemoved = true;\n        });\n        wallet.pendingTxps = txps;\n      };\n\n      let get = (): Promise<any> => {\n        return new Promise((resolve, reject) => {\n          wallet.getStatus(\n            {\n              twoStep: true\n            },\n            (err, ret) => {\n              if (err) {\n                if (err instanceof this.errors.NOT_AUTHORIZED) {\n                  return reject('WALLET_NOT_REGISTERED');\n                }\n                return reject(err);\n              }\n              return resolve(ret);\n            }\n          );\n        });\n      };\n\n      let cacheBalance = (wallet, balance): void => {\n        if (!balance) return;\n\n        let configGet = this.configProvider.get();\n        let config = configGet.wallet;\n\n        let cache = wallet.cachedStatus;\n\n        // Address with Balance\n        cache.balanceByAddress = balance.byAddress;\n\n        // Total wallet balance is same regardless of 'spend unconfirmed funds' setting.\n        cache.totalBalanceSat = balance.totalAmount;\n\n        // Spend unconfirmed funds\n        if (config.spendUnconfirmed) {\n          cache.lockedBalanceSat = balance.lockedAmount;\n          cache.availableBalanceSat = balance.availableAmount;\n          cache.totalBytesToSendMax = balance.totalBytesToSendMax;\n          cache.pendingAmount = 0;\n          cache.spendableAmount = balance.totalAmount - balance.lockedAmount;\n        } else {\n          cache.lockedBalanceSat = balance.lockedConfirmedAmount;\n          cache.availableBalanceSat = balance.availableConfirmedAmount;\n          cache.totalBytesToSendMax = balance.totalBytesToSendConfirmedMax;\n          cache.pendingAmount =\n            balance.totalAmount - balance.totalConfirmedAmount;\n          cache.spendableAmount =\n            balance.totalConfirmedAmount - balance.lockedAmount;\n        }\n\n        // Selected unit\n        cache.unitToSatoshi = config.settings.unitToSatoshi;\n        cache.satToUnit = 1 / cache.unitToSatoshi;\n\n        // STR\n        cache.totalBalanceStr = this.txFormatProvider.formatAmountStr(\n          wallet.coin,\n          cache.totalBalanceSat\n        );\n        cache.lockedBalanceStr = this.txFormatProvider.formatAmountStr(\n          wallet.coin,\n          cache.lockedBalanceSat\n        );\n        cache.availableBalanceStr = this.txFormatProvider.formatAmountStr(\n          wallet.coin,\n          cache.availableBalanceSat\n        );\n        cache.spendableBalanceStr = this.txFormatProvider.formatAmountStr(\n          wallet.coin,\n          cache.spendableAmount\n        );\n        cache.pendingBalanceStr = this.txFormatProvider.formatAmountStr(\n          wallet.coin,\n          cache.pendingAmount\n        );\n\n        cache.alternativeName = config.settings.alternativeName;\n        cache.alternativeIsoCode = config.settings.alternativeIsoCode;\n\n        // Check address\n        this.isAddressUsed(wallet, balance.byAddress)\n          .then(used => {\n            if (used) {\n              this.logger.debug('Address used. Creating new');\n              // Force new address\n              this.getAddress(wallet, true)\n                .then(addr => {\n                  this.logger.debug('New address: ', addr);\n                })\n                .catch(err => {\n                  return reject(err);\n                });\n            }\n          })\n          .catch(err => {\n            return reject(err);\n          });\n\n        this.rateProvider\n          .whenRatesAvailable(wallet.coin)\n          .then(() => {\n            let totalBalanceAlternative = this.rateProvider.toFiat(\n              cache.totalBalanceSat,\n              cache.alternativeIsoCode,\n              wallet.coin\n            );\n            let pendingBalanceAlternative = this.rateProvider.toFiat(\n              cache.pendingAmount,\n              cache.alternativeIsoCode,\n              wallet.coin\n            );\n            let lockedBalanceAlternative = this.rateProvider.toFiat(\n              cache.lockedBalanceSat,\n              cache.alternativeIsoCode,\n              wallet.coin\n            );\n            let spendableBalanceAlternative = this.rateProvider.toFiat(\n              cache.spendableAmount,\n              cache.alternativeIsoCode,\n              wallet.coin\n            );\n            let alternativeConversionRate = this.rateProvider.toFiat(\n              100000000,\n              cache.alternativeIsoCode,\n              wallet.coin\n            );\n\n            cache.totalBalanceAlternative = this.filter.formatFiatAmount(\n              totalBalanceAlternative\n            );\n            cache.pendingBalanceAlternative = this.filter.formatFiatAmount(\n              pendingBalanceAlternative\n            );\n            cache.lockedBalanceAlternative = this.filter.formatFiatAmount(\n              lockedBalanceAlternative\n            );\n            cache.spendableBalanceAlternative = this.filter.formatFiatAmount(\n              spendableBalanceAlternative\n            );\n            cache.alternativeConversionRate = this.filter.formatFiatAmount(\n              alternativeConversionRate\n            );\n\n            cache.alternativeBalanceAvailable = true;\n            cache.isRateAvailable = true;\n          })\n          .catch(err => {\n            this.logger.warn('Could not get rates: ', err);\n          });\n      };\n\n      let isStatusCached = () => {\n        return wallet.cachedStatus && wallet.cachedStatus.isValid;\n      };\n\n      let cacheStatus = (status): void => {\n        if (status.wallet && status.wallet.scanStatus == 'running') return;\n\n        wallet.cachedStatus = status || {};\n        let cache = wallet.cachedStatus;\n        cache.statusUpdatedOn = Date.now();\n        cache.isValid = true;\n        cache.email = status.preferences ? status.preferences.email : null;\n        cacheBalance(wallet, status.balance);\n      };\n\n      let walletStatusHash = status => {\n        return status ? status.balance.totalAmount : wallet.totalBalanceSat;\n      };\n\n      let _getStatus = (initStatusHash, tries: number): Promise<any> => {\n        return new Promise((resolve, reject) => {\n          if (isStatusCached() && !opts.force) {\n            this.logger.debug('Wallet status cache hit:' + wallet.id);\n            cacheStatus(wallet.cachedStatus);\n            processPendingTxps(wallet.cachedStatus);\n            return resolve(wallet.cachedStatus);\n          }\n\n          tries = tries || 0;\n\n          this.logger.debug(\n            'Updating Status:',\n            wallet.credentials.walletName,\n            tries\n          );\n          get()\n            .then(status => {\n              let currentStatusHash = walletStatusHash(status);\n              this.logger.debug(\n                'Status update. hash:' + currentStatusHash + ' Try:' + tries\n              );\n              if (\n                opts.untilItChanges &&\n                initStatusHash == currentStatusHash &&\n                tries < this.WALLET_STATUS_MAX_TRIES &&\n                walletId == wallet.credentials.walletId\n              ) {\n                return setTimeout(() => {\n                  this.logger.debug(\n                    'Retrying update... ' + walletId + ' Try:' + tries\n                  );\n                  return _getStatus(initStatusHash, ++tries);\n                }, this.WALLET_STATUS_DELAY_BETWEEN_TRIES * tries);\n              }\n\n              processPendingTxps(status);\n\n              this.logger.debug(\n                'Got Wallet Status for:' + wallet.credentials.walletName\n              );\n\n              cacheStatus(status);\n\n              wallet.scanning =\n                status.wallet && status.wallet.scanStatus == 'running';\n\n              return resolve(status);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        });\n      };\n\n      _getStatus(walletStatusHash(null), 0)\n        .then(status => {\n          resolve(status);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  // Check address\n  private isAddressUsed(wallet, byAddress): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getLastAddress(wallet.id)\n        .then(addr => {\n          let used = lodash.find(byAddress, {\n            address: addr\n          });\n          return resolve(used);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public useLegacyAddress(): boolean {\n    let config = this.configProvider.get();\n    let walletSettings = config.wallet;\n\n    return walletSettings.useLegacyAddress;\n  }\n\n  public getAddressView(wallet, address: string): string {\n    if (wallet.coin != 'bch' || this.useLegacyAddress()) return address;\n    return this.txFormatProvider.toCashAddress(address);\n  }\n\n  public getProtoAddress(wallet, address: string) {\n    let proto: string = this.getProtocolHandler(wallet.coin, wallet.network);\n    let protoAddr: string = proto + ':' + address;\n\n    if (wallet.coin != 'bch' || this.useLegacyAddress()) {\n      return protoAddr;\n    } else {\n      return protoAddr.toUpperCase();\n    }\n  }\n\n  public getAddress(wallet, forceNew: boolean): Promise<string> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getLastAddress(wallet.id)\n        .then(addr => {\n          if (!forceNew && addr) return resolve(addr);\n\n          if (!wallet.isComplete())\n            return reject(this.bwcErrorProvider.msg('WALLET_NOT_COMPLETE'));\n\n          if (wallet.needsBackup) {\n            return reject(this.bwcErrorProvider.msg('WALLET_NEEDS_BACKUP'));\n          }\n\n          this.createAddress(wallet)\n            .then(_addr => {\n              this.persistenceProvider\n                .storeLastAddress(wallet.id, _addr)\n                .then(() => {\n                  return resolve(_addr);\n                })\n                .catch(err => {\n                  return reject(err);\n                });\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private createAddress(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.debug('Creating address for wallet:', wallet.id);\n\n      wallet.createAddress({}, (err, addr) => {\n        if (err) {\n          let prefix = this.translate.instant('Could not create address');\n          if (\n            err instanceof this.errors.MAIN_ADDRESS_GAP_REACHED ||\n            (err.message && err.message == 'MAIN_ADDRESS_GAP_REACHED')\n          ) {\n            this.logger.warn(this.bwcErrorProvider.msg(err, 'Server Error'));\n            prefix = null;\n            if (!this.isPopupOpen) {\n              this.isPopupOpen = true;\n              this.popupProvider\n                .ionicAlert(\n                  null,\n                  this.bwcErrorProvider.msg('MAIN_ADDRESS_GAP_REACHED')\n                )\n                .then(() => {\n                  this.isPopupOpen = false;\n                });\n            }\n            wallet.getMainAddresses(\n              {\n                reverse: true,\n                limit: 1\n              },\n              (err, addr) => {\n                if (err) return reject(err);\n                return resolve(addr[0].address);\n              }\n            );\n          } else {\n            this.bwcErrorProvider.cb(err, prefix).then(msg => {\n              return reject(msg);\n            });\n          }\n        } else return resolve(addr.address);\n      });\n    });\n  }\n\n  private getSavedTxs(walletId: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getTxHistory(walletId)\n        .then(txs => {\n          let localTxs = [];\n\n          if (lodash.isEmpty(txs)) {\n            return resolve(localTxs);\n          }\n\n          localTxs = txs;\n          return resolve(lodash.compact(localTxs));\n        })\n        .catch((err: Error) => {\n          return reject(err);\n        });\n    });\n  }\n\n  private getTxsFromServer(\n    wallet,\n    skip: number,\n    endingTxid: string,\n    limit: number\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let res = [];\n\n      let result = {\n        res,\n        shouldContinue: res.length >= limit\n      };\n\n      wallet.getTxHistory(\n        {\n          skip,\n          limit\n        },\n        (err: Error, txsFromServer) => {\n          if (err) return reject(err);\n\n          if (lodash.isEmpty(txsFromServer)) return resolve(result);\n\n          res = lodash.takeWhile(txsFromServer, tx => {\n            return tx.txid != endingTxid;\n          });\n\n          result.res = res;\n          result.shouldContinue = res.length >= limit;\n\n          return resolve(result);\n        }\n      );\n    });\n  }\n\n  private updateLocalTxHistory(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts ? opts : {};\n      let FIRST_LIMIT = 5;\n      let LIMIT = 50;\n      let requestLimit = FIRST_LIMIT;\n      let walletId = wallet.credentials.walletId;\n      this.progressFn[walletId] = opts.progressFn || (() => {});\n      let foundLimitTx = [];\n\n      let fixTxsUnit = (txs): void => {\n        if (!txs || !txs[0] || !txs[0].amountStr) return;\n\n        let cacheCoin: string = txs[0].amountStr.split(' ')[1];\n\n        if (cacheCoin == 'bits') {\n          this.logger.debug('Fixing Tx Cache Unit to: ' + wallet.coin);\n          lodash.each(txs, tx => {\n            tx.amountStr = this.txFormatProvider.formatAmountStr(\n              wallet.coin,\n              tx.amount\n            );\n            tx.feeStr = this.txFormatProvider.formatAmountStr(\n              wallet.coin,\n              tx.fees\n            );\n          });\n        }\n      };\n\n      /* TODO: update on progress\n      if (updateOnProgress[wallet.id]) {\n        $log.warn('History update already on progress for: '+ wallet.credentials.walletName);\n\n        if (opts.progressFn) {\n          $log.debug('Rewriting progressFn');\n          progressFn[walletId] = opts.progressFn;\n        }\n        updateOnProgress[wallet.id].push(cb);\n        return; // no callback call yet.\n      }\n\n      updateOnProgress[walletId] = [cb];\n       */\n\n      this.getSavedTxs(walletId)\n        .then(txsFromLocal => {\n          fixTxsUnit(txsFromLocal);\n\n          let confirmedTxs = this.removeAndMarkSoftConfirmedTx(txsFromLocal);\n          let endingTxid = confirmedTxs[0] ? confirmedTxs[0].txid : null;\n          let endingTs = confirmedTxs[0] ? confirmedTxs[0].time : null;\n\n          // First update\n          this.progressFn[walletId](txsFromLocal, 0);\n          wallet.completeHistory = txsFromLocal;\n\n          let getNewTxs = (newTxs, skip: number): Promise<any> => {\n            return new Promise((resolve, reject) => {\n              this.getTxsFromServer(wallet, skip, endingTxid, requestLimit)\n                .then(result => {\n                  let res = result.res;\n                  let shouldContinue = result.shouldContinue\n                    ? result.shouldContinue\n                    : false;\n\n                  newTxs = newTxs.concat(\n                    this.processNewTxs(wallet, lodash.compact(res))\n                  );\n                  this.progressFn[walletId](\n                    newTxs.concat(txsFromLocal),\n                    newTxs.length\n                  );\n                  skip = skip + requestLimit;\n                  this.logger.debug(\n                    'Syncing TXs. Got:' + newTxs.length + ' Skip:' + skip,\n                    ' EndingTxid:',\n                    endingTxid,\n                    ' Continue:',\n                    shouldContinue\n                  );\n\n                  // TODO Dirty <HACK>\n                  // do not sync all history, just looking for a single TX.\n                  if (opts.limitTx) {\n                    foundLimitTx = lodash.find(newTxs, {\n                      txid: opts.limitTx\n                    });\n                    if (!lodash.isEmpty(foundLimitTx)) {\n                      this.logger.debug('Found limitTX: ' + opts.limitTx);\n                      return resolve([foundLimitTx]);\n                    }\n                  }\n                  // </HACK>\n                  if (!shouldContinue) {\n                    this.logger.debug(\n                      'Finished Sync: New / soft confirmed Txs: ' +\n                        newTxs.length\n                    );\n                    return resolve(newTxs);\n                  }\n\n                  requestLimit = LIMIT;\n                  getNewTxs(newTxs, skip).then(txs => {\n                    resolve(txs);\n                  });\n                })\n                .catch(err => {\n                  if (\n                    err instanceof this.errors.CONNECTION_ERROR ||\n                    (err.message && err.message.match(/5../))\n                  ) {\n                    this.logger.info('Retrying history download in 5 secs...');\n                    return reject(\n                      setTimeout(() => {\n                        return getNewTxs(newTxs, skip);\n                      }, 5000)\n                    );\n                  }\n                  return reject(err);\n                });\n            });\n          };\n\n          getNewTxs([], 0)\n            .then(txs => {\n              let array = lodash.compact(txs.concat(confirmedTxs));\n              let newHistory = lodash.uniqBy(array, x => {\n                return (x as any).txid;\n              });\n\n              let updateNotes = (): Promise<any> => {\n                return new Promise((resolve, reject) => {\n                  if (!endingTs) return resolve();\n\n                  this.logger.debug('Syncing notes from: ' + endingTs);\n                  wallet.getTxNotes(\n                    {\n                      minTs: endingTs\n                    },\n                    (err, notes) => {\n                      if (err) {\n                        this.logger.warn('Could not get TxNotes: ', err);\n                        return reject(err);\n                      }\n                      lodash.each(notes, note => {\n                        this.logger.debug('Note for ' + note.txid);\n                        lodash.each(newHistory, (tx: any) => {\n                          if (tx.txid == note.txid) {\n                            this.logger.debug(\n                              '...updating note for ' + note.txid\n                            );\n                            tx.note = note;\n                          }\n                        });\n                      });\n                      return resolve();\n                    }\n                  );\n                });\n              };\n\n              let updateLowAmount = txs => {\n                if (!opts.lowAmount) return;\n\n                lodash.each(txs, tx => {\n                  tx.lowAmount = tx.amount < opts.lowAmount;\n                });\n              };\n\n              this.getLowAmount(wallet).then(fee => {\n                opts.lowAmount = fee;\n                updateLowAmount(txs);\n              });\n\n              updateNotes()\n                .then(() => {\n                  // <HACK>\n                  if (!lodash.isEmpty(foundLimitTx)) {\n                    this.logger.debug(\n                      'Tx history read until limitTx: ' + opts.limitTx\n                    );\n                    return resolve(newHistory);\n                  }\n                  // </HACK>\n\n                  var historyToSave = JSON.stringify(newHistory);\n                  lodash.each(txs, tx => {\n                    tx.recent = true;\n                  });\n                  this.logger.debug(\n                    'Tx History synced. Total Txs: ' + newHistory.length\n                  );\n\n                  // Final update\n                  if (walletId == wallet.credentials.walletId) {\n                    wallet.completeHistory = newHistory;\n                  }\n\n                  return this.persistenceProvider\n                    .setTxHistory(walletId, historyToSave)\n                    .then(() => {\n                      this.logger.debug('Tx History saved.');\n                      return resolve();\n                    })\n                    .catch(err => {\n                      return reject(err);\n                    });\n                })\n                .catch(err => {\n                  return reject(err);\n                });\n            })\n            .catch(err => {\n              /* TODO: update on progress\n          lodash.each(this.updateOnProgress[walletId], function(x) {\n            x.apply(this,err);\n          });\n          this.updateOnProgress[walletId] = false;\n           */\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private processNewTxs(wallet, txs) {\n    let now = Math.floor(Date.now() / 1000);\n    let txHistoryUnique = {};\n    let ret = [];\n    wallet.hasUnsafeConfirmed = false;\n\n    lodash.each(txs, tx => {\n      tx = this.txFormatProvider.processTx(\n        wallet.coin,\n        tx,\n        this.useLegacyAddress()\n      );\n\n      // no future transactions...\n      if (tx.time > now) tx.time = now;\n\n      if (tx.confirmations >= this.SAFE_CONFIRMATIONS) {\n        tx.safeConfirmed = this.SAFE_CONFIRMATIONS + '+';\n      } else {\n        tx.safeConfirmed = false;\n        wallet.hasUnsafeConfirmed = true;\n      }\n\n      if (tx.note) {\n        delete tx.note.encryptedEditedByName;\n        delete tx.note.encryptedBody;\n      }\n\n      if (!txHistoryUnique[tx.txid]) {\n        ret.push(tx);\n        txHistoryUnique[tx.txid] = true;\n      } else {\n        this.logger.debug('Ignoring duplicate TX in history: ' + tx.txid);\n      }\n    });\n\n    return ret;\n  }\n\n  public removeAndMarkSoftConfirmedTx(txs) {\n    return lodash.filter(txs, tx => {\n      if (tx.confirmations >= this.SOFT_CONFIRMATION_LIMIT) return tx;\n      tx.recent = true;\n    });\n  }\n\n  // Approx utxo amount, from which the uxto is economically redeemable\n  public getLowAmount(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getMinFee(wallet)\n        .then(fee => {\n          let minFee: number = fee;\n          return resolve(minFee / this.LOW_AMOUNT_RATIO);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  // Approx utxo amount, from which the uxto is economically redeemable\n  public getMinFee(wallet, nbOutputs?: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.feeProvider\n        .getFeeLevels(wallet.coin)\n        .then(data => {\n          let normalLevelRate = lodash.find(\n            data.levels[wallet.network],\n            level => {\n              return level.level === 'normal';\n            }\n          );\n          let lowLevelRate: string = (normalLevelRate.feePerKb / 1000).toFixed(\n            0\n          );\n          let size = this.getEstimatedTxSize(wallet, nbOutputs);\n          return resolve(size * parseInt(lowLevelRate, 10));\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  // These 2 functions were taken from\n  // https://github.com/bitpay/bitcore-wallet-service/blob/master/lib/model/txproposal.js#L243\n  private getEstimatedSizeForSingleInput(wallet): number {\n    switch (wallet.credentials.addressType) {\n      case 'P2PKH':\n        return 147;\n      default:\n      case 'P2SH':\n        return wallet.m * 72 + wallet.n * 36 + 44;\n    }\n  }\n\n  private getEstimatedTxSize(wallet, nbOutputs?: number): number {\n    // Note: found empirically based on all multisig P2SH inputs and within m & n allowed limits.\n    nbOutputs = nbOutputs ? nbOutputs : 2; // Assume 2 outputs\n    let safetyMargin = 0.02;\n    let overhead = 4 + 4 + 9 + 9;\n    let inputSize = this.getEstimatedSizeForSingleInput(wallet);\n    let outputSize = 34;\n    let nbInputs = 1; // Assume 1 input\n\n    let size = overhead + inputSize * nbInputs + outputSize * nbOutputs;\n    return parseInt((size * (1 + safetyMargin)).toFixed(0), 10);\n  }\n\n  public getTxNote(wallet, txid: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      wallet.getTxNote(\n        {\n          txid\n        },\n        (err, note) => {\n          if (err) return reject(err);\n          return resolve(note);\n        }\n      );\n    });\n  }\n\n  public editTxNote(wallet, args): Promise<any> {\n    return new Promise((resolve, reject) => {\n      wallet.editTxNote(args, (err, res) => {\n        if (err) return reject(err);\n        return resolve(res);\n      });\n    });\n  }\n\n  public getTxp(wallet, txpid: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      wallet.getTx(txpid, (err, txp) => {\n        if (err) return reject(err);\n        return resolve(txp);\n      });\n    });\n  }\n\n  public getTx(wallet, txid: string): Promise<{ fees; amount }> {\n    return new Promise((resolve, reject) => {\n      let finish = list => {\n        let tx = lodash.find(list, {\n          txid\n        });\n\n        if (!tx) return reject('Could not get transaction');\n        return tx;\n      };\n\n      if (wallet.completeHistory && wallet.completeHistory.isValid) {\n        let tx = finish(wallet.completeHistory);\n        return resolve(tx);\n      } else {\n        let opts = {\n          force: true\n        };\n        this.getTxHistory(wallet, opts)\n          .then(txHistory => {\n            let tx = finish(txHistory);\n            return resolve(tx);\n          })\n          .catch(err => {\n            return reject(err);\n          });\n      }\n    });\n  }\n\n  public getTxHistory(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts ? opts : {};\n\n      if (!wallet.isComplete()) return resolve();\n\n      let isHistoryCached = () => {\n        return wallet.completeHistory && wallet.completeHistory.isValid;\n      };\n\n      if (isHistoryCached() && !opts.force)\n        return resolve(wallet.completeHistory);\n\n      this.logger.debug('Updating Transaction History');\n      this.updateLocalTxHistory(wallet, opts)\n        .then(txs => {\n          if (opts.limitTx) {\n            return resolve(txs);\n          }\n\n          wallet.completeHistory.isValid = true;\n          return resolve(wallet.completeHistory);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public isEncrypted(wallet): boolean {\n    if (lodash.isEmpty(wallet)) return undefined;\n    let isEncrypted = wallet.isPrivKeyEncrypted();\n    if (isEncrypted) this.logger.debug('Wallet is encrypted');\n    return isEncrypted;\n  }\n\n  public createTx(wallet, txp: Partial<TransactionProposal>) {\n    return new Promise((resolve, reject) => {\n      if (lodash.isEmpty(txp) || lodash.isEmpty(wallet))\n        return reject('MISSING_PARAMETER');\n\n      wallet.createTxProposal(txp, (err, createdTxp) => {\n        if (err) return reject(err);\n        else {\n          this.logger.debug('Transaction created');\n          return resolve(createdTxp);\n        }\n      });\n    });\n  }\n\n  public publishTx(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (lodash.isEmpty(txp) || lodash.isEmpty(wallet))\n        return reject('MISSING_PARAMETER');\n      wallet.publishTxProposal(\n        {\n          txp\n        },\n        (err, publishedTx) => {\n          if (err) return reject(err);\n          else {\n            this.logger.debug('Transaction published');\n            return resolve(publishedTx);\n          }\n        }\n      );\n    });\n  }\n\n  signTx(wallet, txp, password: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!wallet || !txp) return reject('MISSING_PARAMETER');\n\n      try {\n        wallet.signTxProposal(txp, password, (err, signedTxp) => {\n          if (err) {\n            this.logger.error('Transaction signed err: ', err);\n            return reject(err);\n          }\n          return resolve(signedTxp);\n        });\n      } catch (e) {\n        this.logger.error('Error at signTxProposal:', e);\n        return reject(e);\n      }\n    });\n  }\n\n  public broadcastTx(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (lodash.isEmpty(txp) || lodash.isEmpty(wallet))\n        return reject('MISSING_PARAMETER');\n\n      if (txp.status != 'accepted') return reject('TX_NOT_ACCEPTED');\n\n      wallet.broadcastTxProposal(txp, (err, broadcastedTxp, memo) => {\n        if (err) {\n          if (lodash.isArrayBuffer(err)) {\n            const enc = new encoding.TextDecoder();\n            err = enc.decode(err);\n            this.removeTx(wallet, txp);\n            return reject(err);\n          } else {\n            return reject(err);\n          }\n        }\n\n        this.logger.debug('Transaction broadcasted');\n        if (memo) this.logger.info('Memo: ', memo);\n\n        return resolve(broadcastedTxp);\n      });\n    });\n  }\n\n  public rejectTx(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (lodash.isEmpty(txp) || lodash.isEmpty(wallet))\n        return reject('MISSING_PARAMETER');\n\n      wallet.rejectTxProposal(txp, null, (err, rejectedTxp) => {\n        if (err) return reject(err);\n        this.logger.debug('Transaction rejected');\n        return resolve(rejectedTxp);\n      });\n    });\n  }\n\n  public removeTx(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (lodash.isEmpty(txp) || lodash.isEmpty(wallet))\n        return reject('MISSING_PARAMETER');\n\n      wallet.removeTxProposal(txp, err => {\n        this.logger.debug('Transaction removed');\n\n        this.invalidateCache(wallet);\n        this.events.publish('Local/TxAction', wallet.id);\n        return resolve(err);\n      });\n    });\n  }\n\n  public updateRemotePreferences(clients, prefs?): Promise<any> {\n    return new Promise((resolve, reject) => {\n      prefs = prefs ? prefs : {};\n\n      if (!lodash.isArray(clients)) clients = [clients];\n\n      let updateRemotePreferencesFor = (clients, prefs): Promise<any> => {\n        return new Promise((resolve, reject) => {\n          let wallet = clients.shift();\n          if (!wallet) return resolve();\n          this.logger.debug(\n            'Saving remote preferences',\n            wallet.credentials.walletName,\n            prefs\n          );\n\n          wallet.savePreferences(prefs, err => {\n            if (err) {\n              this.popupProvider.ionicAlert(\n                this.bwcErrorProvider.msg(\n                  err,\n                  this.translate.instant(\n                    'Could not save preferences on the server'\n                  )\n                )\n              );\n              return reject(err);\n            }\n\n            updateRemotePreferencesFor(clients, prefs)\n              .then(() => {\n                return resolve();\n              })\n              .catch(err => {\n                return reject(err);\n              });\n          });\n        });\n      };\n\n      // Update this JIC.\n      let config = this.configProvider.get();\n\n      // Get email from local config\n      prefs.email = config.emailNotifications.email;\n\n      // Get current languge\n      prefs.language = this.languageProvider.getCurrent();\n\n      // Set OLD wallet in bits to btc\n      prefs.unit = 'btc'; // DEPRECATED\n\n      updateRemotePreferencesFor(lodash.clone(clients), prefs)\n        .then(() => {\n          this.logger.debug(\n            'Remote preferences saved for' +\n              lodash\n                .map(clients, (x: any) => {\n                  return x.credentials.walletId;\n                })\n                .join(',')\n          );\n\n          lodash.each(clients, c => {\n            c.preferences = lodash.assign(prefs, c.preferences);\n          });\n          return resolve();\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public recreate(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.debug('Recreating wallet:', wallet.id);\n      wallet.recreateWallet(err => {\n        wallet.notAuthorized = false;\n        if (err) return reject(err);\n        return resolve();\n      });\n    });\n  }\n\n  public startScan(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.debug('Scanning wallet ' + wallet.id);\n      if (!wallet.isComplete()) return reject();\n\n      wallet.scanning = true;\n      wallet.startScan(\n        {\n          includeCopayerBranches: true\n        },\n        err => {\n          if (err) return reject(err);\n          return resolve();\n        }\n      );\n    });\n  }\n\n  public clearTxHistory(wallet): void {\n    this.invalidateCache(wallet);\n    this.persistenceProvider.removeTxHistory(wallet.id);\n  }\n\n  public expireAddress(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.debug('Cleaning Address ' + wallet.id);\n      this.persistenceProvider\n        .clearLastAddress(wallet.id)\n        .then(() => {\n          return resolve();\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public getMainAddresses(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts || {};\n      opts.reverse = true;\n      wallet.getMainAddresses(opts, (err, addresses) => {\n        if (err) return reject(err);\n        return resolve(addresses);\n      });\n    });\n  }\n\n  public getBalance(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts || {};\n      wallet.getBalance(opts, (err, resp) => {\n        if (err) return reject(err);\n        return resolve(resp);\n      });\n    });\n  }\n\n  public getLowUtxos(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      wallet.getUtxos(\n        {\n          coin: wallet.coin\n        },\n        (err, resp) => {\n          if (err || !resp || !resp.length) return reject(err);\n\n          this.getMinFee(wallet, resp.length).then(fee => {\n            let minFee = fee;\n            let balance = lodash.sumBy(resp, 'satoshis');\n\n            // for 2 outputs\n            this.getLowAmount(wallet).then(fee => {\n              let lowAmount = fee;\n              let lowUtxos = lodash.filter(resp, x => {\n                return x.satoshis < lowAmount;\n              });\n\n              let totalLow = lodash.sumBy(lowUtxos, 'satoshis');\n              return resolve({\n                allUtxos: resp || [],\n                lowUtxos: lowUtxos || [],\n                totalLow,\n                warning: minFee / balance > this.TOTAL_LOW_WARNING_RATIO,\n                minFee\n              });\n            });\n          });\n        }\n      );\n    });\n  }\n\n  // An alert dialog\n  private askPassword(warnMsg: string, title: string): Promise<any> {\n    return new Promise(resolve => {\n      let opts = {\n        type: 'password',\n        useDanger: true\n      };\n      this.popupProvider.ionicPrompt(title, warnMsg, opts).then(res => {\n        return resolve(res);\n      });\n    });\n  }\n\n  public encrypt(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      var title = this.translate.instant('Enter a new encrypt password');\n      var warnMsg = this.translate.instant(\n        'Your wallet key will be encrypted. The encrypt password cannot be recovered. Be sure to write it down.'\n      );\n      this.askPassword(warnMsg, title)\n        .then((password: string) => {\n          if (lodash.isNull(password)) {\n            return reject();\n          }\n          if (password == '') {\n            return reject(this.translate.instant('No password'));\n          }\n          title = this.translate.instant('Confirm your new encrypt password');\n          this.askPassword(warnMsg, title)\n            .then((password2: string) => {\n              if (lodash.isNull(password2)) {\n                return reject();\n              }\n              if (password != password2)\n                return reject(this.translate.instant('Password mismatch'));\n              wallet.encryptPrivateKey(password);\n              return resolve();\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public decrypt(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.debug('Disabling private key encryption for' + wallet.name);\n      this.askPassword(\n        null,\n        this.translate.instant('Enter encrypt password')\n      ).then((password: string) => {\n        if (lodash.isNull(password)) {\n          return reject();\n        }\n        if (password == '') {\n          return reject(this.translate.instant('No password'));\n        }\n        try {\n          wallet.decryptPrivateKey(password);\n        } catch (e) {\n          return reject(this.translate.instant('Wrong password'));\n        }\n        return resolve();\n      });\n    });\n  }\n\n  public handleEncryptedWallet(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.isEncrypted(wallet)) return resolve();\n      this.askPassword(\n        null,\n        this.translate.instant('Enter encrypt password')\n      ).then((password: string) => {\n        if (lodash.isNull(password)) {\n          return reject();\n        }\n        if (password == '') {\n          return reject(this.translate.instant('No password'));\n        }\n        if (!wallet.checkPassword(password))\n          return reject(this.translate.instant('Wrong password'));\n        return resolve(password);\n      });\n    });\n  }\n\n  public reject(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.rejectTx(wallet, txp)\n        .then(txpr => {\n          this.invalidateCache(wallet);\n          this.events.publish('Local/TxAction', wallet.id);\n          return resolve(txpr);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public onlyPublish(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.publishTx(wallet, txp)\n        .then(() => {\n          this.invalidateCache(wallet);\n          this.events.publish('Local/TxAction', wallet.id);\n          return resolve();\n        })\n        .catch(err => {\n          return reject(this.bwcErrorProvider.msg(err));\n        });\n    });\n  }\n\n  public prepare(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.touchidProvider\n        .checkWallet(wallet)\n        .then(() => {\n          this.handleEncryptedWallet(wallet)\n            .then((password: string) => {\n              return resolve(password);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private signAndBroadcast(wallet, publishedTxp, password): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.onGoingProcessProvider.set('signingTx');\n      this.signTx(wallet, publishedTxp, password)\n        .then(signedTxp => {\n          this.invalidateCache(wallet);\n          if (signedTxp.status == 'accepted') {\n            this.onGoingProcessProvider.set('broadcastingTx');\n            this.broadcastTx(wallet, signedTxp)\n              .then(broadcastedTxp => {\n                this.events.publish('Local/TxAction', wallet.id);\n                return resolve(broadcastedTxp);\n              })\n              .catch(err => {\n                return reject(this.bwcErrorProvider.msg(err));\n              });\n          } else {\n            this.events.publish('Local/TxAction', wallet.id);\n            return resolve(signedTxp);\n          }\n        })\n        .catch(err => {\n          let msg =\n            err && err.message\n              ? err.message\n              : this.translate.instant(\n                  'The payment was created but could not be completed. Please try again from home screen'\n                );\n          this.logger.debug('Sign error: ' + msg);\n          this.events.publish('Local/TxAction', wallet.id);\n          return reject(msg);\n        });\n    });\n  }\n\n  public publishAndSign(wallet, txp): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // Already published?\n      if (txp.status == 'pending') {\n        this.prepare(wallet)\n          .then((password: string) => {\n            this.signAndBroadcast(wallet, txp, password)\n              .then(broadcastedTxp => {\n                return resolve(broadcastedTxp);\n              })\n              .catch(err => {\n                return reject(err);\n              });\n          })\n          .catch(err => {\n            return reject(err);\n          });\n      } else {\n        this.prepare(wallet)\n          .then((password: string) => {\n            this.onGoingProcessProvider.set('sendingTx');\n            this.publishTx(wallet, txp)\n              .then(publishedTxp => {\n                this.signAndBroadcast(wallet, publishedTxp, password)\n                  .then(broadcastedTxp => {\n                    return resolve(broadcastedTxp);\n                  })\n                  .catch(err => {\n                    return reject(err);\n                  });\n              })\n              .catch(err => {\n                return reject(err);\n              });\n          })\n          .catch(err => {\n            return reject(err);\n          });\n      }\n    });\n  }\n\n  public getEncodedWalletInfo(wallet, password?: string): Promise<any> {\n   debugger;\n    return new Promise((resolve, reject) => {\n      let derivationPath = wallet.credentials.getBaseAddressDerivationPath();\n      let encodingType = {\n        mnemonic: 1,\n        xpriv: 2,\n        xpub: 3\n      };\n      let info: any = {};\n\n      // not supported yet\n      if (wallet.credentials.derivationStrategy != 'BIP44' || !wallet.canSign())\n        return reject(\n          this.translate.instant(\n            'Exporting via QR not supported for this wallet'\n          )\n        );\n\n      var keys = this.getKeysWithPassword(wallet, password);\n\n      if (keys.mnemonic) {\n        info = {\n          type: encodingType.mnemonic,\n          data: keys.mnemonic\n        };\n      } else {\n        info = {\n          type: encodingType.xpriv,\n          data: keys.xPrivKey\n        };\n      }\n\n      return resolve(\n        info.type +\n          '|' +\n          info.data +\n          '|' +\n          wallet.credentials.network.toLowerCase() +\n          '|' +\n          derivationPath +\n          '|' +\n          wallet.credentials.mnemonicHasPassphrase +\n          '|' +\n          wallet.coin\n      );\n    });\n  }\n\n  public getKeysWithPassword(wallet, password: string) {\n    try {\n      return wallet.getKeys(password);\n    } catch (e) {\n      this.logger.debug(e);\n    }\n  }\n\n  public setTouchId(wallet, enabled: boolean): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let opts = {\n        touchIdFor: {}\n      };\n      opts.touchIdFor[wallet.id] = enabled;\n\n      this.touchidProvider\n        .checkWallet(wallet)\n        .then(() => {\n          this.configProvider.set(opts);\n          return resolve();\n        })\n        .catch(err => {\n          opts.touchIdFor[wallet.id] = !enabled;\n          this.logger.debug('Error with fingerprint:' + err);\n          this.configProvider.set(opts);\n          return reject(err);\n        });\n    });\n  }\n\n  public getKeys(wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.prepare(wallet)\n        .then((password: string) => {\n          let keys;\n          try {\n            keys = wallet.getKeys(password);\n          } catch (e) {\n            return reject(e);\n          }\n          return resolve(keys);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public getSendMaxInfo(wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      opts = opts || {};\n      wallet.getSendMaxInfo(opts, (err, res) => {\n        if (err) return reject(err);\n        return resolve(res);\n      });\n    });\n  }\n\n  public getProtocolHandler(coin: string, network?: string): string {\n    if (coin == 'bch') {\n      return network == 'testnet' ? 'bchtest' : 'bitcoincash';\n    } else if (coin == 'safe'){\n      return 'safecoin';\n    } else if (coin == 'btcz'){\n      return 'bitcoinz';\n    } else if (coin == 'zcl'){\n      return 'zclassic';\n    } else if (coin == 'anon'){\n      return 'bitcoinanon';\n    } else if (coin == 'zel'){\n      return 'zelcash';\n    } else if (coin == 'rvn'){\n      return 'ravencoin';\n    } else if (coin == 'ltc'){\n      return 'litecoin';\n    } else {\n      return 'bitcoin';\n    }\n  }\n\n  public copyCopayers(wallet, newWallet): Promise<any> {\n    debugger;\n    return new Promise((resolve, reject) => {\n      let walletPrivKey = this.bwcProvider\n        .getBitcore()\n        .PrivateKey.fromString(wallet.credentials.walletPrivKey);\n      let copayer = 1;\n      let i = 0;\n\n      lodash.each(wallet.credentials.publicKeyRing, item => {\n        let name = item.copayerName || 'copayer ' + copayer++;\n        newWallet._doJoinWallet(\n          newWallet.credentials.walletId,\n          walletPrivKey,\n          item.xPubKey,\n          item.requestPubKey,\n          name,\n          {\n            coin: newWallet.credentials.coin\n          },\n          err => {\n            // Ignore error is copayer already in wallet\n            if (err && !(err instanceof this.errors.COPAYER_IN_WALLET))\n              return reject(err);\n            if (++i == wallet.credentials.publicKeyRing.length)\n              return resolve();\n          }\n        );\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/wallet/wallet.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertController } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class PopupProvider {\n  constructor(\n    private alertCtrl: AlertController,\n    private logger: Logger,\n    private translate: TranslateService\n  ) {}\n\n  public ionicAlert(\n    title: string,\n    subTitle?: string,\n    okText?: string\n  ): Promise<any> {\n    return new Promise(resolve => {\n      let alert = this.alertCtrl.create({\n        title,\n        subTitle,\n        enableBackdropDismiss: false,\n        buttons: [\n          {\n            text: okText ? okText : this.translate.instant('Ok'),\n            handler: () => {\n              this.logger.info('Ok clicked');\n              resolve();\n            }\n          }\n        ]\n      });\n      alert.present();\n    });\n  }\n\n  public ionicConfirm(\n    title: string,\n    message: string,\n    okText?: string,\n    cancelText?: string\n  ): Promise<any> {\n    return new Promise(resolve => {\n      let confirm = this.alertCtrl.create({\n        title,\n        message,\n        buttons: [\n          {\n            text: cancelText ? cancelText : this.translate.instant('Cancel'),\n            handler: () => {\n              this.logger.info('Disagree clicked');\n              resolve(false);\n            }\n          },\n          {\n            text: okText ? okText : this.translate.instant('Ok'),\n            handler: () => {\n              this.logger.info('Agree clicked');\n              resolve(true);\n            }\n          }\n        ],\n        enableBackdropDismiss: false\n      });\n      confirm.present();\n    });\n  }\n\n  public ionicPrompt(\n    title: string,\n    message: string,\n    opts?,\n    okText?: string,\n    cancelText?: string\n  ): Promise<any> {\n    return new Promise(resolve => {\n      let defaultText = opts && opts.defaultText ? opts.defaultText : null;\n      let placeholder = opts && opts.placeholder ? opts.placeholder : null;\n      let inputType = opts && opts.type ? opts.type : 'text';\n      let cssClass = opts && opts.useDanger ? 'alertDanger' : null;\n      let enableBackdropDismiss = !!(opts && opts.enableBackdropDismiss);\n\n      let prompt = this.alertCtrl.create({\n        title,\n        message,\n        cssClass,\n        enableBackdropDismiss,\n        inputs: [\n          {\n            value: defaultText,\n            placeholder,\n            type: inputType\n          }\n        ],\n        buttons: [\n          {\n            text: cancelText ? cancelText : this.translate.instant('Cancel'),\n            handler: () => {\n              this.logger.info('Cancel clicked');\n              resolve(null);\n            }\n          },\n          {\n            text: okText ? okText : this.translate.instant('Ok'),\n            handler: data => {\n              this.logger.info('Saved clicked');\n              resolve(data[0]);\n            }\n          }\n        ]\n      });\n      prompt.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/popup/popup.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { ConfigProvider } from '../../providers/config/config';\nimport { LanguageProvider } from '../../providers/language/language';\nimport { PersistenceProvider } from '../../providers/persistence/persistence';\nimport { PlatformProvider } from '../../providers/platform/platform';\n\n/* TODO: implement interface properly\ninterface App {\n  packageName: string;\n  packageDescription: string;\n  packageNameId: string;\n  themeColor: string;\n  userVisibleName: string;\n  purposeLine: string;\n  bundleName: string;\n  appUri: string;\n  name: string;\n  nameNoSpace: string;\n  nameCase: string;\n  nameCaseNoSpace: string;\n  gitHubRepoName: string;\n  gitHubRepoUrl: string;\n  gitHubRepoBugs: string;\n  disclaimerUrl: string;\n  url: string;\n  appDescription: string;\n  winAppName: string;\n  WindowsStoreIdentityName: string;\n  WindowsStoreDisplayName: string;\n  windowsAppId: string;\n  pushSenderId: string;\n  description: string;\n  version: string;\n  androidVersion: string;\n  commitHash: string;\n  _extraCSS: string;\n  _enabledExtensions;\n}*/\n\n@Injectable()\nexport class AppProvider {\n  public info: any = {};\n  public servicesInfo;\n  private jsonPathApp: string = 'assets/appConfig.json';\n  private jsonPathServices: string = 'assets/externalServices.json';\n\n  constructor(\n    public http: HttpClient,\n    private logger: Logger,\n    private language: LanguageProvider,\n    public config: ConfigProvider,\n    private persistence: PersistenceProvider,\n    private platformProvider: PlatformProvider\n  ) {\n    this.logger.info('AppProvider initialized.');\n  }\n\n  public async load() {\n    await Promise.all([this.getInfo(), this.loadProviders()]);\n    this.setCustomMenuBarNW();\n  }\n\n  private async getInfo() {\n    [this.servicesInfo, this.info] = await Promise.all([\n      this.getServicesInfo(),\n      this.getAppInfo()\n    ]);\n  }\n\n  private async loadProviders() {\n    this.persistence.load();\n    await this.config.load();\n    this.language.load();\n  }\n\n  private getAppInfo() {\n    return this.http.get(this.jsonPathApp).toPromise();\n  }\n\n  private getServicesInfo() {\n    return this.http.get(this.jsonPathServices).toPromise();\n  }\n\n  public setCustomMenuBarNW() {\n    if (!this.platformProvider.isNW) {\n      return;\n    }\n    let gui = (window as any).require('nw.gui');\n    let win = gui.Window.get();\n    let nativeMenuBar = new gui.Menu({\n      type: 'menubar'\n    });\n    try {\n      nativeMenuBar.createMacBuiltin(this.info.nameCase);\n    } catch (e) {\n      this.logger.debug('This is not OSX');\n    }\n    win.menu = nativeMenuBar;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/app/app.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoadingController } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class OnGoingProcessProvider {\n  private loading;\n  private pausedOngoingProcess;\n  private ongoingProcess;\n\n  constructor(\n    private loadingCtrl: LoadingController,\n    private logger: Logger,\n    private translate: TranslateService\n  ) {\n    this.logger.info('OnGoingProcessProvider initialized.');\n    // TODO GET - CLEAR - CHECK DecimalPipe for FILTER WITH TRANSLATE\n    this.ongoingProcess = [];\n  }\n\n  public getProccessNames() {\n    const processNames = {\n      broadcastingTx: this.translate.instant('Broadcasting transaction...'),\n      calculatingFee: this.translate.instant('Calculating fee...'),\n      calculatingSendMax: this.translate.instant('Calculating send max...'),\n      connectingCoinbase: this.translate.instant('Connecting to Coinbase...'),\n      connectingGlidera: this.translate.instant('Connecting to Glidera...'),\n      connectingShapeshift: this.translate.instant(\n        'Connecting to ShapeShift...'\n      ),\n      creatingTx: this.translate.instant('Creating transaction...'),\n      creatingWallet: this.translate.instant('Creating Wallet...'),\n      deletingWallet: this.translate.instant('Deleting Wallet...'),\n      extractingWalletInfo: this.translate.instant(\n        'Extracting Wallet information...'\n      ),\n      fetchingPayPro: this.translate.instant('Fetching payment information...'),\n      generatingCSV: this.translate.instant('Generating .csv file...'),\n      gettingFeeLevels: this.translate.instant('Getting fee levels...'),\n      importingWallet: this.translate.instant('Importing Wallet...'),\n      joiningWallet: this.translate.instant('Joining Wallet...'),\n      recreating: this.translate.instant('Recreating Wallet...'),\n      rejectTx: this.translate.instant('Rejecting payment proposal...'),\n      removeTx: this.translate.instant('Deleting payment proposal...'),\n      retrievingInputs: this.translate.instant(\n        'Retrieving inputs information...'\n      ),\n      scanning: this.translate.instant('Scanning Wallet funds...'),\n      sendingTx: this.translate.instant('Sending transaction...'),\n      signingTx: this.translate.instant('Signing transaction...'),\n      sweepingWallet: this.translate.instant('Sweeping Wallet...'),\n      validatingWords: this.translate.instant('Validating recovery phrase...'),\n      loadingTxInfo: this.translate.instant('Loading transaction info...'),\n      sendingFeedback: this.translate.instant('Sending feedback...'),\n      generatingNewAddress: this.translate.instant('Generating new address...'),\n      sendingByEmail: this.translate.instant('Preparing addresses...'),\n      sending2faCode: this.translate.instant('Sending 2FA code...'),\n      buyingBitcoin: this.translate.instant('Buying Bitcoin...'),\n      sellingBitcoin: this.translate.instant('Selling Bitcoin...'),\n      fetchingBitPayAccount: this.translate.instant(\n        'Fetching BitPay Account...'\n      ),\n      fetchingBitPayCards: this.translate.instant('Fetching BitPay Cards...'),\n      updatingGiftCards: this.translate.instant('Updating Gift Cards...'),\n      updatingGiftCard: this.translate.instant('Updating Gift Card...'),\n      cancelingGiftCard: this.translate.instant('Canceling Gift Card...'),\n      creatingGiftCard: this.translate.instant('Creating Gift Card...'),\n      buyingGiftCard: this.translate.instant('Buying Gift Card...'),\n      topup: this.translate.instant('Top up in progress...'),\n      duplicatingWallet: this.translate.instant('Duplicating wallet...')\n    };\n    return processNames;\n  }\n\n  public clear() {\n    this.ongoingProcess = [];\n    try {\n      this.loading.dismiss();\n    } catch (e) {\n      // No problem\n      this.logger.warn('on-going-process is still active. No problem.', e);\n    }\n    this.loading = null;\n    this.logger.debug('ongoingProcess clear');\n  }\n\n  public pause(): void {\n    this.pausedOngoingProcess = this.ongoingProcess;\n    this.clear();\n  }\n\n  public resume(): void {\n    this.ongoingProcess = this.pausedOngoingProcess;\n    _.forEach(this.pausedOngoingProcess, v => {\n      this.set(v);\n      return;\n    });\n    this.pausedOngoingProcess = [];\n  }\n\n  public set(processName: string): void {\n    this.logger.debug('ongoingProcess active: ', processName);\n    this.ongoingProcess.push(processName);\n    let showName = this.getProccessNames()[processName] || processName;\n    if (!this.loading) {\n      this.loading = this.loadingCtrl.create();\n    }\n    this.loading.setContent(showName);\n    this.loading.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/on-going-process/on-going-process.ts","import { Injectable } from '@angular/core';\nimport { File } from '@ionic-native/file';\nimport * as _ from 'lodash';\nimport { Logger } from '../../providers/logger/logger';\n\nimport { PlatformProvider } from '../platform/platform';\nimport { FileStorage } from './storage/file-storage';\nimport { LocalStorage } from './storage/local-storage';\n// TODO import { RamStorage } from './storage/ram-storage';\n\nexport interface FeedbackValues {\n  time: number;\n  version: string;\n  sent: boolean;\n}\n\nconst Keys = {\n  ADDRESS_BOOK: network => 'addressbook-' + network,\n  ADDRESS_BOOKCOIN: coin => 'addressbook-' + coin,\n  AGREE_DISCLAIMER: 'agreeDisclaimer',\n  AMAZON_GIFT_CARDS: network => 'amazonGiftCards-' + network,\n  AMAZON_USER_INFO: 'amazonUserInfo',\n  APP_IDENTITY: network => 'appIdentity-' + network,\n  BACKUP: walletId => 'backup-' + walletId,\n  BALANCE_CACHE: cardId => 'balanceCache-' + cardId,\n  BITPAY_ACCOUNTS_V2: network => 'bitpayAccounts-v2-' + network,\n  CLEAN_AND_SCAN_ADDRESSES: 'CleanAndScanAddresses',\n  COINBASE_REFRESH_TOKEN: network => 'coinbaseRefreshToken-' + network,\n  COINBASE_TOKEN: network => 'coinbaseToken-' + network,\n  COINBASE_TXS: network => 'coinbaseTxs-' + network,\n  CONFIG: 'config',\n  FEEDBACK: 'feedback',\n  FOCUSED_WALLET_ID: 'focusedWalletId',\n  GLIDERA_PERMISSIONS: network => 'glideraPermissions-' + network,\n  GLIDERA_STATUS: network => 'glideraStatus-' + network,\n  GLIDERA_TOKEN: network => 'glideraToken-' + network,\n  GLIDERA_TXS: network => 'glideraTxs-' + network,\n  HIDE_BALANCE: walletId => 'hideBalance-' + walletId,\n  HOME_TIP: 'homeTip',\n  LAST_ADDRESS: walletId => 'lastAddress-' + walletId,\n  LAST_CURRENCY_USED: 'lastCurrencyUsed',\n  MERCADO_LIBRE: network => 'MercadoLibreGiftCards-' + network,\n  ONBOARDING_COMPLETED: 'onboardingCompleted',\n  PROFILE: 'profile',\n  REMOTE_PREF_STORED: 'remotePrefStored',\n  TX_CONFIRM_NOTIF: txid => 'txConfirmNotif-' + txid,\n  TX_HISTORY: walletId => 'txsHistory-' + walletId,\n  ORDER_WALLET: walletId => 'order-' + walletId\n};\n\ninterface Storage {\n  get(k: string): Promise<any>;\n  set(k: string, v): Promise<void>;\n  remove(k: string): Promise<void>;\n  create(k: string, v): Promise<void>;\n}\n\n@Injectable()\nexport class PersistenceProvider {\n  public storage: Storage;\n\n  constructor(\n    private logger: Logger,\n    private platform: PlatformProvider,\n    private file: File\n  ) {\n    this.logger.info('PersistenceProvider initialized.');\n  }\n\n  public load() {\n    this.storage = this.platform.isCordova\n      ? new FileStorage(this.file, this.logger)\n      : new LocalStorage(this.platform, this.logger);\n  }\n\n  storeNewProfile(profile): Promise<void> {\n    return this.storage.create(Keys.PROFILE, profile);\n  }\n\n  storeProfile(profile): Promise<void> {\n    return this.storage.set(Keys.PROFILE, profile);\n  }\n\n  getProfile(): Promise<any> {\n    return new Promise(resolve => {\n      this.storage.get(Keys.PROFILE).then(profile => {\n        resolve(profile);\n      });\n    });\n  }\n\n  deleteProfile() {\n    return this.storage.remove(Keys.PROFILE);\n  }\n\n  setFeedbackInfo(feedbackValues: FeedbackValues) {\n    return this.storage.set(Keys.FEEDBACK, feedbackValues);\n  }\n\n  getFeedbackInfo() {\n    return this.storage.get(Keys.FEEDBACK);\n  }\n\n  storeFocusedWalletId(walletId: string) {\n    return this.storage.set(Keys.FOCUSED_WALLET_ID, walletId || '');\n  }\n\n  getFocusedWalletId(): Promise<string> {\n    return this.storage.get(Keys.FOCUSED_WALLET_ID);\n  }\n\n  getLastAddress(walletId: string) {\n    return this.storage.get(Keys.LAST_ADDRESS(walletId));\n  }\n\n  storeLastAddress(walletId: string, address) {\n    return this.storage.set(Keys.LAST_ADDRESS(walletId), address);\n  }\n\n  clearLastAddress(walletId: string) {\n    return this.storage.remove(Keys.LAST_ADDRESS(walletId));\n  }\n\n  setBackupFlag(walletId: string) {\n    return this.storage.set(Keys.BACKUP(walletId), Date.now());\n  }\n\n  getBackupFlag(walletId: string) {\n    return this.storage.get(Keys.BACKUP(walletId));\n  }\n\n  clearBackupFlag(walletId: string) {\n    return this.storage.remove(Keys.BACKUP(walletId));\n  }\n\n  setCleanAndScanAddresses(walletId: string) {\n    return this.storage.set(Keys.CLEAN_AND_SCAN_ADDRESSES, walletId);\n  }\n\n  getCleanAndScanAddresses() {\n    return this.storage.get(Keys.CLEAN_AND_SCAN_ADDRESSES);\n  }\n\n  removeCleanAndScanAddresses() {\n    return this.storage.remove(Keys.CLEAN_AND_SCAN_ADDRESSES);\n  }\n\n  getConfig() {\n    return this.storage.get(Keys.CONFIG);\n  }\n\n  storeConfig(config: object) {\n    return this.storage.set(Keys.CONFIG, config);\n  }\n\n  clearConfig() {\n    return this.storage.remove(Keys.CONFIG);\n  }\n\n  getHomeTipAccepted() {\n    return this.storage.get(Keys.HOME_TIP);\n  }\n\n  setHomeTipAccepted(homeTip) {\n    return this.storage.set(Keys.HOME_TIP, homeTip);\n  }\n\n  setHideBalanceFlag(walletId: string, val) {\n    return this.storage.set(Keys.HIDE_BALANCE(walletId), val);\n  }\n\n  getHideBalanceFlag(walletId: string) {\n    return this.storage.get(Keys.HIDE_BALANCE(walletId));\n  }\n\n  setDisclaimerAccepted() {\n    return this.storage.set(Keys.AGREE_DISCLAIMER, true);\n  }\n\n  setOnboardingCompleted() {\n    return this.storage.set(Keys.ONBOARDING_COMPLETED, true);\n  }\n\n  // for compatibility\n  getCopayDisclaimerFlag() {\n    return this.storage.get(Keys.AGREE_DISCLAIMER);\n  }\n\n  getCopayOnboardingFlag() {\n    return this.storage.get(Keys.ONBOARDING_COMPLETED);\n  }\n\n  setRemotePrefsStoredFlag() {\n    return this.storage.set(Keys.REMOTE_PREF_STORED, true);\n  }\n\n  getRemotePrefsStoredFlag() {\n    return this.storage.get(Keys.REMOTE_PREF_STORED);\n  }\n\n  setGlideraToken(network: string, token: string) {\n    return this.storage.set(Keys.GLIDERA_TOKEN(network), token);\n  }\n\n  getGlideraToken(network: string) {\n    return this.storage.get(Keys.GLIDERA_TOKEN(network));\n  }\n\n  removeGlideraToken(network: string) {\n    return this.storage.remove(Keys.GLIDERA_TOKEN(network));\n  }\n\n  setGlideraPermissions(network: string, permissions) {\n    return this.storage.set(Keys.GLIDERA_PERMISSIONS(network), permissions);\n  }\n\n  getGlideraPermissions(network: string) {\n    return this.storage.get(Keys.GLIDERA_PERMISSIONS(network));\n  }\n\n  removeGlideraPermissions(network: string) {\n    return this.storage.remove(Keys.GLIDERA_PERMISSIONS(network));\n  }\n\n  setGlideraStatus(network: string, status) {\n    return this.storage.set(Keys.GLIDERA_STATUS(network), status);\n  }\n\n  getGlideraStatus(network: string) {\n    return this.storage.get(Keys.GLIDERA_STATUS(network));\n  }\n\n  removeGlideraStatus(network: string) {\n    return this.storage.remove(Keys.GLIDERA_STATUS(network));\n  }\n\n  setGlideraTxs(network: string, txs) {\n    return this.storage.set(Keys.GLIDERA_TXS(network), txs);\n  }\n\n  getGlideraTxs(network: string) {\n    return this.storage.get(Keys.GLIDERA_TXS(network));\n  }\n\n  removeGlideraTxs(network: string) {\n    return this.storage.remove(Keys.GLIDERA_TXS(network));\n  }\n\n  setCoinbaseToken(network: string, token: string) {\n    return this.storage.set(Keys.COINBASE_TOKEN(network), token);\n  }\n\n  getCoinbaseToken(network: string) {\n    return this.storage.get(Keys.COINBASE_TOKEN(network));\n  }\n\n  removeCoinbaseToken(network: string) {\n    return this.storage.remove(Keys.COINBASE_TOKEN(network));\n  }\n\n  setCoinbaseRefreshToken(network: string, token: string) {\n    return this.storage.set(Keys.COINBASE_REFRESH_TOKEN(network), token);\n  }\n\n  getCoinbaseRefreshToken(network: string) {\n    return this.storage.get(Keys.COINBASE_REFRESH_TOKEN(network));\n  }\n\n  removeCoinbaseRefreshToken(network: string) {\n    return this.storage.remove(Keys.COINBASE_REFRESH_TOKEN(network));\n  }\n\n  setCoinbaseTxs(network: string, ctx) {\n    return this.storage.set(Keys.COINBASE_TXS(network), ctx);\n  }\n\n  getCoinbaseTxs(network: string) {\n    return this.storage.get(Keys.COINBASE_TXS(network));\n  }\n\n  removeCoinbaseTxs(network: string) {\n    return this.storage.remove(Keys.COINBASE_TXS(network));\n  }\n\n  setAddressBook(network: string, addressbook) {\n    return this.storage.set(Keys.ADDRESS_BOOK(network), addressbook);\n  }\n\n  setAddressBookCoin(coin: string, addressbook) {\n    return this.storage.set(Keys.ADDRESS_BOOKCOIN(coin), addressbook);\n  }\n\n  getAddressBook(network: string) {\n    return this.storage.get(Keys.ADDRESS_BOOK(network));\n  }\n\n  getAddressBookCoin(coin: string) {\n    return this.storage.get(Keys.ADDRESS_BOOKCOIN(coin));\n  }\n\n  removeAddressbook(network: string) {\n    return this.storage.remove(Keys.ADDRESS_BOOK(network));\n  }\n\n  removeAddressbookCoin(coin: string) {\n    return this.storage.remove(Keys.ADDRESS_BOOKCOIN(coin));\n  }\n\n  setLastCurrencyUsed(lastCurrencyUsed) {\n    return this.storage.set(Keys.LAST_CURRENCY_USED, lastCurrencyUsed);\n  }\n\n  getLastCurrencyUsed() {\n    return this.storage.get(Keys.LAST_CURRENCY_USED);\n  }\n\n  checkQuota() {\n    let block = '';\n    // 50MB\n    for (let i = 0; i < 1024 * 1024; ++i) {\n      block += '12345678901234567890123456789012345678901234567890';\n    }\n    this.storage.set('test', block).catch(err => {\n      this.logger.error('CheckQuota Return:' + err);\n    });\n  }\n\n  setTxHistory(walletId: string, txs) {\n    return this.storage.set(Keys.TX_HISTORY(walletId), txs).catch(err => {\n      this.logger.error('Error saving tx History. Size:' + txs.length);\n      this.logger.error(err);\n    });\n  }\n\n  getTxHistory(walletId: string) {\n    return this.storage.get(Keys.TX_HISTORY(walletId));\n  }\n\n  removeTxHistory(walletId: string) {\n    return this.storage.remove(Keys.TX_HISTORY(walletId));\n  }\n\n  setBalanceCache(cardId: string, data) {\n    return this.storage.set(Keys.BALANCE_CACHE(cardId), data);\n  }\n\n  getBalanceCache(cardId: string) {\n    return this.storage.get(Keys.BALANCE_CACHE(cardId));\n  }\n\n  removeBalanceCache(cardId: string) {\n    return this.storage.remove(Keys.BALANCE_CACHE(cardId));\n  }\n\n  setAppIdentity(network: string, data) {\n    return this.storage.set(Keys.APP_IDENTITY(network), data);\n  }\n\n  getAppIdentity(network: string) {\n    return this.storage.get(Keys.APP_IDENTITY(network));\n  }\n\n  removeAppIdentity(network: string) {\n    return this.storage.remove(Keys.APP_IDENTITY(network));\n  }\n\n  removeAllWalletData(walletId: string) {\n    return this.clearLastAddress(walletId)\n      .then(() => this.removeTxHistory(walletId))\n      .then(() => this.clearBackupFlag(walletId))\n      .then(() => this.removeWalletOrder(walletId));\n  }\n\n  // Amazon Gift Cards\n\n  setAmazonGiftCards(network: string, gcs) {\n    return this.storage.set(Keys.AMAZON_GIFT_CARDS(network), gcs);\n  }\n\n  getAmazonGiftCards(network: string) {\n    return this.storage.get(Keys.AMAZON_GIFT_CARDS(network));\n  }\n\n  removeAmazonGiftCards(network: string) {\n    return this.storage.remove(Keys.AMAZON_GIFT_CARDS(network));\n  }\n\n  setAmazonUserInfo(data) {\n    return this.storage.set(Keys.AMAZON_USER_INFO, data);\n  }\n\n  getAmazonUserInfo() {\n    return this.storage.get(Keys.AMAZON_USER_INFO);\n  }\n\n  removeAmazonUserInfo() {\n    return this.storage.remove(Keys.AMAZON_USER_INFO);\n  }\n\n  setTxConfirmNotification(txid: string, val) {\n    return this.storage.set(Keys.TX_CONFIRM_NOTIF(txid), val);\n  }\n\n  getTxConfirmNotification(txid: string) {\n    return this.storage.get(Keys.TX_CONFIRM_NOTIF(txid));\n  }\n\n  removeTxConfirmNotification(txid: string) {\n    return this.storage.remove(Keys.TX_CONFIRM_NOTIF(txid));\n  }\n\n  getBitpayAccounts(network: string) {\n    return this.storage.get(Keys.BITPAY_ACCOUNTS_V2(network));\n  }\n\n  setBitpayAccount(\n    network: string,\n    data: {\n      email: string;\n      token: string;\n      familyName?: string; // last name\n      givenName?: string; // firstName\n    }\n  ) {\n    return this.getBitpayAccounts(network).then(allAccounts => {\n      allAccounts = allAccounts || {};\n      let account = allAccounts[data.email] || {};\n      account.token = data.token;\n      account.familyName = data.familyName;\n      account.givenName = data.givenName;\n      allAccounts[data.email] = account;\n\n      this.logger.info(\n        'Storing BitPay accounts with new account:' + data.email\n      );\n      return this.storage.set(Keys.BITPAY_ACCOUNTS_V2(network), allAccounts);\n    });\n  }\n\n  removeBitpayAccount(network: string, email: string) {\n    return this.getBitpayAccounts(network).then(allAccounts => {\n      allAccounts = allAccounts || {};\n      delete allAccounts[email];\n      return this.storage.set(Keys.BITPAY_ACCOUNTS_V2(network), allAccounts);\n    });\n  }\n\n  setBitpayDebitCards(network: string, email: string, cards) {\n    return this.getBitpayAccounts(network).then(allAccounts => {\n      allAccounts = allAccounts || {};\n      if (!allAccounts[email])\n        throw new Error('Cannot set cards for unknown account ' + email);\n      allAccounts[email].cards = cards;\n      return this.storage.set(Keys.BITPAY_ACCOUNTS_V2(network), allAccounts);\n    });\n  }\n\n  // cards: [\n  //   eid: card id\n  //   id: card id\n  //   lastFourDigits: card number\n  //   token: card token\n  //   email: account email\n  // ]\n  getBitpayDebitCards(network: string) {\n    return this.getBitpayAccounts(network).then(allAccounts => {\n      let allCards = [];\n      _.each(allAccounts, (account, email) => {\n        if (account.cards) {\n          // Add account's email to each card\n          var cards = _.clone(account.cards);\n          _.each(cards, x => {\n            x.email = email;\n          });\n\n          allCards = allCards.concat(cards);\n        }\n      });\n      return allCards;\n    });\n  }\n\n  removeBitpayDebitCard(network: string, cardEid: string) {\n    return this.getBitpayAccounts(network)\n      .then(allAccounts => {\n        return _.each(allAccounts, account => {\n          account.cards = _.reject(account.cards, {\n            eid: cardEid\n          });\n        });\n      })\n      .then(allAccounts => {\n        return this.storage.set(Keys.BITPAY_ACCOUNTS_V2(network), allAccounts);\n      });\n  }\n\n  setMercadoLibreGiftCards(network: string, gcs) {\n    return this.storage.set(Keys.MERCADO_LIBRE(network), gcs);\n  }\n\n  getMercadoLibreGiftCards(network: string) {\n    return this.storage.get(Keys.MERCADO_LIBRE(network));\n  }\n\n  removeMercadoLibreGiftCards(network: string) {\n    return this.storage.remove(Keys.MERCADO_LIBRE(network));\n  }\n\n  setShapeshift(network: string, gcs) {\n    return this.storage.set('shapeShift-' + network, gcs);\n  }\n\n  getShapeshift(network: string) {\n    return this.storage.get('shapeShift-' + network);\n  }\n\n  removeShapeshift(network: string) {\n    return this.storage.remove('shapeShift-' + network);\n  }\n\n  setWalletOrder(walletId: string, order: number) {\n    return this.storage.set(Keys.ORDER_WALLET(walletId), order);\n  }\n\n  getWalletOrder(walletId: string) {\n    return this.storage.get(Keys.ORDER_WALLET(walletId));\n  }\n\n  removeWalletOrder(walletId: string) {\n    return this.storage.remove(Keys.ORDER_WALLET(walletId));\n  }\n\n  setLockStatus(isLocked: string) {\n    return this.storage.set('lockStatus', isLocked);\n  }\n\n  getLockStatus() {\n    return this.storage.get('lockStatus');\n  }\n\n  removeLockStatus() {\n    return this.storage.remove('lockStatus');\n  }\n\n  setEmailLawCompliance(value: string) {\n    return this.storage.set('emailLawCompliance', value);\n  }\n\n  getEmailLawCompliance() {\n    return this.storage.get('emailLawCompliance');\n  }\n\n  removeEmailLawCompliance() {\n    return this.storage.remove('emailLawCompliance');\n  }\n\n  setShowAmazonJapanAnnouncement(value: string) {\n    return this.storage.set('showAmazonJapanAnnouncement', value);\n  }\n\n  getShowAmazonJapanAnnouncement() {\n    return this.storage.get('showAmazonJapanAnnouncement');\n  }\n\n  removeShowAmazonJapanAnnouncement() {\n    return this.storage.remove('showAmazonJapanAnnouncement');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/persistence/persistence.ts","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../providers/logger/logger';\n\nimport * as COREBTC from 'bitcore-lib';\nimport * as COREANON from 'bitcore-lib-anon';\nimport * as COREBTCZ from 'bitcore-lib-btcz';\nimport * as COREBCH from 'bitcore-lib-cash';\nimport * as CORELTC from 'bitcore-lib-ltc';\nimport * as CORERVN from 'bitcore-lib-rvn';\nimport * as CORESAFE from 'bitcore-lib-safe';\nimport * as COREZCL from 'bitcore-lib-zcl';\nimport * as COREZEL from 'bitcore-lib-zel';\nimport * as BWC from 'bitcore-wallet-client';\n\n@Injectable()\nexport class BwcProvider {\n  public buildTx = BWC.buildTx;\n  public parseSecret = BWC.parseSecret;\n  public Client = BWC;\n  constructor(private logger: Logger) {\n    this.logger.info('BwcProvider initialized.');\n  }\n  public getBitcore() {\n//    return BWC.Bitcore;\n      return COREBTC;\n  }\n\n  public getBitcoreCash() {\n//  return BWC.BitcoreCash;\n    return COREBCH;\n  }\n\n  public getBitcoreSafe() {\n    return CORESAFE;\n  }\n\n  public getBitcoreBtcz() {\n    return COREBTCZ;\n  }\n\n  public getBitcoreZcl() {\n    return COREZCL;\n  }\n\n  public getBitcoreAnon() {\n    return COREANON;\n  }\n\n  public getBitcoreZel() {\n    return COREZEL;\n  }\n\n  public getBitcoreRvn() {\n    return CORERVN;\n  }\n\n  public getBitcoreLtc() {\n    return CORELTC;\n  }\n  \n  public getErrors() {\n    return BWC.errors;\n  }\n\n  public getSJCL() {\n    return BWC.sjcl;\n  }\n\n  public getUtils() {\n    return BWC.Utils;\n  }\n\n  public getClient(walletData?, opts?) {\n    opts = opts || {};\n\n    // note opts use `bwsurl` all lowercase;\n    let bwc = new BWC({\n      baseUrl: opts.bwsurl || 'http://192.168.91.206:3232/bws/api',\n      verbose: opts.verbose,\n      timeout: 100000,\n      transports: ['polling']\n    });\n    if (walletData) bwc.import(walletData, opts);\n    return bwc;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/bwc/bwc.ts","import { ComponentRef, Injectable } from '@angular/core';\nimport { ActionSheetParent } from '../../components/action-sheet/action-sheet-parent';\nimport { IncomingDataMenuComponent } from '../../components/incoming-data-menu/incoming-data-menu';\nimport { InfoSheetComponent } from '../../components/info-sheet/info-sheet';\nimport { OptionsSheetComponent } from '../../components/options-sheet/options-sheet';\nimport { WalletSelectorComponent } from '../../components/wallet-selector/wallet-selector';\nimport { DomProvider } from '../../providers/dom/dom';\n\nexport type InfoSheetType =\n  | 'address-copied'\n  | 'appreciate-review'\n  | 'backup-failed'\n  | 'backup-ready'\n  | 'backup-warning'\n  | 'copayers'\n  | 'copy-to-clipboard'\n  | 'custom-amount'\n  | 'default-error'\n  | 'insufficient-funds'\n  | 'legacy-address-info'\n  | 'miner-fee'\n  | 'miner-fee-notice'\n  | 'paper-key-unverified-with-activity'\n  | 'receiving-bitcoin'\n  | 'sensitive-info';\n\nexport type OptionsSheetType = 'address-options' | 'incoming-data';\n\nexport interface WalletSelectorParams {\n  wallets: any[];\n  selectedWalletId: string;\n  title: string;\n}\n@Injectable()\nexport class ActionSheetProvider {\n  constructor(private domProvider: DomProvider) {}\n\n  public createOptionsSheet(\n    type: OptionsSheetType,\n    params?\n  ): OptionsSheetComponent {\n    return this.setupSheet<OptionsSheetComponent>(\n      OptionsSheetComponent,\n      type,\n      params\n    ).instance;\n  }\n\n  public createIncomingDataMenu(params?): IncomingDataMenuComponent {\n    return this.setupSheet<IncomingDataMenuComponent>(\n      IncomingDataMenuComponent,\n      null,\n      params\n    ).instance;\n  }\n\n  public createInfoSheet(type: InfoSheetType, params?): InfoSheetComponent {\n    return this.setupSheet<InfoSheetComponent>(InfoSheetComponent, type, params)\n      .instance;\n  }\n\n  public createWalletSelector(\n    params: WalletSelectorParams\n  ): WalletSelectorComponent {\n    return this.setupSheet<WalletSelectorComponent>(\n      WalletSelectorComponent,\n      null,\n      params\n    ).instance;\n  }\n\n  private setupSheet<T extends ActionSheetParent>(\n    componentType: { new (...args): T },\n    sheetType?: string,\n    params?\n  ): ComponentRef<T> {\n    const sheet = this.domProvider.appendComponentToBody<T>(componentType);\n    sheet.instance.componentRef = sheet;\n    sheet.instance.sheetType = sheetType;\n    sheet.instance.params = params;\n    return sheet;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/action-sheet/action-sheet.ts","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { NodeWebkitProvider } from '../node-webkit/node-webkit';\nimport { PlatformProvider } from '../platform/platform';\nimport { PopupProvider } from '../popup/popup';\n\n@Injectable()\nexport class ExternalLinkProvider {\n  constructor(\n    private popupProvider: PopupProvider,\n    private logger: Logger,\n    private platformProvider: PlatformProvider,\n    private nodeWebkitProvider: NodeWebkitProvider\n  ) {\n    this.logger.info('ExternalLinkProvider initialized.');\n  }\n\n  private restoreHandleOpenURL(old: string): void {\n    setTimeout(() => {\n      (window as any).handleOpenURL = old;\n    }, 500);\n  }\n\n  public open(\n    url: string,\n    optIn?: boolean,\n    title?: string,\n    message?: string,\n    okText?: string,\n    cancelText?: string\n  ) {\n    return new Promise(resolve => {\n      if (optIn) {\n        this.popupProvider\n          .ionicConfirm(title, message, okText, cancelText)\n          .then((res: boolean) => {\n            this.openBrowser(res, url);\n            resolve();\n          });\n      } else {\n        this.openBrowser(true, url);\n        resolve();\n      }\n    });\n  }\n\n  private openBrowser(res: boolean, url: string) {\n    let old = (window as any).handleOpenURL;\n\n    (window as any).handleOpenURL = url => {\n      // Ignore external URLs\n      this.logger.debug('Skip: ' + url);\n    };\n\n    if (res)\n      this.platformProvider.isNW\n        ? this.nodeWebkitProvider.openExternalLink(url)\n        : window.open(url, '_system');\n\n    this.restoreHandleOpenURL(old);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/external-link/external-link.ts","import { Injectable } from '@angular/core';\nimport { Tabs } from 'ionic-angular';\nimport { Coin } from '../../providers/wallet/wallet';\n\nexport interface SendParams {\n  amount: string;\n  coin: Coin;\n}\n\n@Injectable()\nexport class WalletTabsProvider {\n  private tabNav: Tabs;\n  private sendParams: SendParams;\n  private fromPage;\n\n  goToTabIndex(index: number) {\n    return this.tabNav.select(index);\n  }\n\n  setTabNav(nav: Tabs) {\n    this.tabNav = nav;\n  }\n\n  getTabNav() {\n    return this.tabNav;\n  }\n\n  setSendParams(params: SendParams) {\n    this.sendParams = params;\n  }\n\n  getSendParams() {\n    return this.sendParams;\n  }\n\n  setFromPage(page) {\n    this.fromPage = page;\n  }\n\n  getFromPage() {\n    return this.fromPage;\n  }\n\n  clear() {\n    this.tabNav = null;\n    this.sendParams = null;\n    this.fromPage = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-tabs/wallet-tabs.provider.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class BwcErrorProvider {\n  constructor(private translate: TranslateService) {}\n\n  public msg(err, prefix?: string): string {\n    if (!err) return 'Unknown error';\n\n    const name = err.name\n      ? err.name === 'Error'\n        ? err.message\n        : err.name.replace(/^bwc.Error/g, '')\n      : err;\n\n    let body = '';\n    prefix = prefix || '';\n\n    if (name) {\n      switch (name) {\n        case 'INVALID_BACKUP':\n          body = this.translate.instant('Wallet Recovery Phrase is invalid');\n          break;\n        case 'WALLET_DOES_NOT_EXIST':\n          body = this.translate.instant(\n            'Wallet not registered at the wallet service. Recreate it from \"Create Wallet\" using \"Advanced Options\" to set your recovery phrase'\n          );\n          break;\n        case 'MISSING_PRIVATE_KEY':\n          body = this.translate.instant('Missing private keys to sign');\n          break;\n        case 'ENCRYPTED_PRIVATE_KEY':\n          body = this.translate.instant(\n            'Private key is encrypted, cannot sign'\n          );\n          break;\n        case 'SERVER_COMPROMISED':\n          body = this.translate.instant(\n            'Server response could not be verified'\n          );\n          break;\n        case 'COULD_NOT_BUILD_TRANSACTION':\n          body = this.translate.instant('Could not build transaction');\n          break;\n        case 'INSUFFICIENT_FUNDS':\n          body = this.translate.instant('Insufficient funds');\n          break;\n        case 'CONNECTION_ERROR':\n          body = this.translate.instant('Network error');\n          break;\n        case 'NOT_FOUND':\n          body = this.translate.instant('Wallet service not found');\n          break;\n        case 'ECONNRESET_ERROR':\n          body = this.translate.instant('Connection reset by peer');\n          break;\n        case 'BAD_RESPONSE_CODE':\n          body = this.translate.instant(\n            'The request could not be understood by the server'\n          );\n          break;\n        case 'WALLET_ALREADY_EXISTS':\n          body = this.translate.instant('Wallet already exists');\n          break;\n        case 'COPAYER_IN_WALLET':\n          body = this.translate.instant('Copayer already in this wallet');\n          break;\n        case 'WALLET_FULL':\n          body = this.translate.instant('Wallet is full');\n          break;\n        case 'WALLET_NOT_FOUND':\n          body = this.translate.instant('Wallet not found');\n          break;\n        case 'INSUFFICIENT_FUNDS_FOR_FEE':\n          body = this.translate.instant('Insufficient funds for fee');\n          break;\n        case 'LOCKED_FUNDS':\n          body = this.translate.instant(\n            'Funds are locked by pending spend proposals'\n          );\n          break;\n        case 'COPAYER_VOTED':\n          body = this.translate.instant(\n            'Copayer already voted on this spend proposal'\n          );\n          break;\n        case 'NOT_AUTHORIZED':\n          body = this.translate.instant('Not authorized');\n          break;\n        case 'TX_ALREADY_BROADCASTED':\n          body = this.translate.instant('Transaction already broadcasted');\n          break;\n        case 'TX_CANNOT_CREATE':\n          body = this.translate.instant(\n            'Locktime in effect. Please wait to create a new spend proposal'\n          );\n          break;\n        case 'TX_CANNOT_REMOVE':\n          body = this.translate.instant(\n            'Locktime in effect. Please wait to remove this spend proposal'\n          );\n          break;\n        case 'TX_NOT_ACCEPTED':\n          body = this.translate.instant('Spend proposal is not accepted');\n          break;\n        case 'TX_NOT_FOUND':\n          body = this.translate.instant('Spend proposal not found');\n          break;\n        case 'TX_NOT_PENDING':\n          body = this.translate.instant('The spend proposal is not pending');\n          break;\n        case 'UPGRADE_NEEDED':\n          body = this.translate.instant(\n            'Please upgrade Copay to perform this action'\n          );\n          break;\n        case 'BAD_SIGNATURES':\n          body = this.translate.instant('Signatures rejected by server');\n          break;\n        case 'COPAYER_DATA_MISMATCH':\n          body = this.translate.instant('Copayer data mismatch');\n          break;\n        case 'DUST_AMOUNT':\n          body = this.translate.instant('Amount below minimum allowed');\n          break;\n        case 'INCORRECT_ADDRESS_NETWORK':\n          body = this.translate.instant('Incorrect network address');\n          break;\n        case 'COPAYER_REGISTERED':\n          body = this.translate.instant(\n            'Key already associated with an existing wallet'\n          );\n          break;\n        case 'INVALID_ADDRESS':\n          body = this.translate.instant('Invalid address');\n          break;\n        case 'MAIN_ADDRESS_GAP_REACHED':\n          body = this.translate.instant(\n            'Empty addresses limit reached. New addresses cannot be generated.'\n          );\n          break;\n        case 'WALLET_LOCKED':\n          body = this.translate.instant('Wallet is locked');\n          break;\n        case 'WALLET_NOT_COMPLETE':\n          body = this.translate.instant('Wallet is not complete');\n          break;\n        case 'WALLET_NEEDS_BACKUP':\n          body = this.translate.instant('Wallet needs backup');\n          break;\n        case 'MISSING_PARAMETER':\n          body = this.translate.instant('Missing parameter');\n          break;\n        case 'NO_PASSWORD_GIVEN':\n          body = this.translate.instant('Encrypt password needed');\n          break;\n        case 'PASSWORD_INCORRECT':\n          body = this.translate.instant('Wrong encrypt password');\n          break;\n        case 'EXCEEDED_DAILY_LIMIT':\n          body = this.translate.instant(\n            'Exceeded daily limit of $500 per user'\n          );\n          break;\n        case 'ERROR':\n          body = err.message || err.error;\n          break;\n\n        default:\n          body = err.message || name;\n          break;\n      }\n    } else if (err.message) {\n      body = err.message;\n    } else {\n      body = err;\n    }\n\n    var msg = prefix + (body ? (prefix ? ': ' : '') + body : '');\n    return msg;\n  }\n\n  public cb(err: string, prefix?: string): Promise<any> {\n    return new Promise(resolve => {\n      resolve(this.msg(err, prefix));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/bwc-error/bwc-error.ts","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/publickey.js\n// module id = 88\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/script/index.js\n// module id = 89\n// module chunks = 0","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/publickey.js\n// module id = 90\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/script/index.js\n// module id = 91\n// module chunks = 0","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/publickey.js\n// module id = 94\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/script/index.js\n// module id = 95\n// module chunks = 0","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/publickey.js\n// module id = 96\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/script/index.js\n// module id = 97\n// module chunks = 0","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/publickey.js\n// module id = 98\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/script/index.js\n// module id = 99\n// module chunks = 0","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/publickey.js\n// module id = 100\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/script/index.js\n// module id = 101\n// module chunks = 0","'use strict';\n\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n \nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Networks.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(new Buffer(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Networks.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = new Buffer(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = new Buffer([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = new Buffer([0x03]);\n    } else {\n      prefix = new Buffer([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/publickey.js\n// module id = 102\n// module chunks = 0","module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/script/index.js\n// module id = 103\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\nimport { BwcProvider } from '../bwc/bwc';\nimport { ConfigProvider } from '../config/config';\nimport { FilterProvider } from '../filter/filter';\nimport { RateProvider } from '../rate/rate';\n\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class TxFormatProvider {\n  private bitcoreCash;\n\n  // TODO: implement configService\n  public pendingTxProposalsCountForUs: number;\n\n  constructor(\n    private bwcProvider: BwcProvider,\n    private rate: RateProvider,\n    private configProvider: ConfigProvider,\n    private filter: FilterProvider,\n    private logger: Logger\n  ) {\n    this.logger.info('TxFormatProvider initialized.');\n    this.bitcoreCash = this.bwcProvider.getBitcoreCash();\n  }\n\n  public toCashAddress(address: string, withPrefix?: boolean): string {\n    let cashAddr: string = this.bitcoreCash.Address(address).toCashAddress();\n\n    if (withPrefix) {\n      return cashAddr;\n    }\n\n    return cashAddr.split(':')[1]; // rm prefix\n  }\n\n  public toLegacyAddress(address: string): string {\n    let legacyAddr: string = this.bitcoreCash.Address(address);\n    return legacyAddr;\n  }\n\n  // TODO: Check return of formatAmount(...), sometimes returns a number and sometimes a string\n  public formatAmount(satoshis: number, fullPrecision?: boolean) {\n    let settings = this.configProvider.get().wallet.settings;\n\n    if (settings.unitCode == 'sat') return satoshis;\n\n    // TODO : now only works for english, specify opts to change thousand separator and decimal separator\n    var opts = {\n      fullPrecision: !!fullPrecision\n    };\n    return this.bwcProvider\n      .getUtils()\n      .formatAmount(satoshis, settings.unitCode, opts);\n  }\n\n  public formatAmountStr(coin: string, satoshis: number): string {\n    if (isNaN(satoshis)) return undefined;\n    return this.formatAmount(satoshis) + ' ' + coin.toUpperCase();\n  }\n\n  public toFiat(coin: string, satoshis: number, code: string): Promise<any> {\n    // TODO not a promise\n    return new Promise(resolve => {\n      if (isNaN(satoshis)) return resolve();\n      var v1;\n      v1 = this.rate.toFiat(satoshis, code, coin);\n      if (!v1) return resolve(null);\n      return resolve(v1.toFixed(2));\n    });\n  }\n\n  public formatToUSD(coin: string, satoshis: number): Promise<any> {\n    // TODO not a promise\n    return new Promise(resolve => {\n      let v1: number;\n      if (isNaN(satoshis)) return resolve();\n      v1 = this.rate.toFiat(satoshis, 'USD', coin);\n      if (!v1) return resolve(null);\n      return resolve(v1.toFixed(2));\n    });\n  }\n\n  public formatAlternativeStr(coin: string, satoshis: number): string {\n    if (isNaN(satoshis)) return undefined;\n    let settings = this.configProvider.get().wallet.settings;\n\n    let val = (() => {\n      var v1 = parseFloat(\n        this.rate.toFiat(satoshis, settings.alternativeIsoCode, coin).toFixed(2)\n      );\n      v1 = this.filter.formatFiatAmount(v1);\n      if (!v1) return null;\n\n      return v1 + ' ' + settings.alternativeIsoCode;\n    }).bind(this);\n\n    if (\n      (!this.rate.isBtcAvailable() && coin == 'btc') ||\n      (!this.rate.isSafeAvailable() && coin == 'safe') ||\n      (!this.rate.isSafeAvailable() && coin == 'btcz') ||\n      (!this.rate.isSafeAvailable() && coin == 'zcl') ||\n      (!this.rate.isSafeAvailable() && coin == 'anon') ||\n      (!this.rate.isSafeAvailable() && coin == 'zel') ||\n      (!this.rate.isSafeAvailable() && coin == 'rvn') ||\n      (!this.rate.isSafeAvailable() && coin == 'ltc') ||\n      (!this.rate.isBchAvailable() && coin == 'bch')\n    )\n      return null;\n    return val();\n  }\n\n  public processTx(coin: string, tx, useLegacyAddress: boolean) {\n    if (!tx || tx.action == 'invalid') return tx;\n\n    // New transaction output format\n    if (tx.outputs && tx.outputs.length) {\n      var outputsNr = tx.outputs.length;\n\n      if (tx.action != 'received') {\n        if (outputsNr > 1) {\n          tx.recipientCount = outputsNr;\n          tx.hasMultiplesOutputs = true;\n        }\n        tx.amount = _.reduce(\n          tx.outputs,\n          (total, o) => {\n            o.amountStr = this.formatAmountStr(coin, o.amount);\n            o.alternativeAmountStr = this.formatAlternativeStr(coin, o.amount);\n            return total + o.amount;\n          },\n          0\n        );\n      }\n      tx.toAddress = tx.outputs[0].toAddress;\n\n      // toDo: translate all tx.outputs[x].toAddress ?\n      if (tx.toAddress && coin == 'bch') {\n        tx.toAddress = useLegacyAddress\n          ? this.toLegacyAddress(tx.toAddress)\n          : this.toCashAddress(tx.toAddress);\n      }\n    }\n\n    tx.amountStr = this.formatAmountStr(coin, tx.amount);\n    tx.alternativeAmountStr = this.formatAlternativeStr(coin, tx.amount);\n    tx.feeStr = this.formatAmountStr(coin, tx.fee || tx.fees);\n\n    if (tx.amountStr) {\n      tx.amountValueStr = tx.amountStr.split(' ')[0];\n      tx.amountUnitStr = tx.amountStr.split(' ')[1];\n    }\n\n    if (tx.addressTo && coin == 'bch') {\n      tx.addressTo = useLegacyAddress\n        ? this.toLegacyAddress(tx.addressTo)\n        : this.toCashAddress(tx.addressTo);\n    }\n\n    return tx;\n  }\n\n  public formatPendingTxps(txps) {\n    this.pendingTxProposalsCountForUs = 0;\n    var now = Math.floor(Date.now() / 1000);\n\n    /* To test multiple outputs...\n    var txp = {\n      message: 'test multi-output',\n      fee: 1000,\n      createdOn: new Date() / 1000,\n      outputs: []\n    };\n    function addOutput(n) {\n      txp.outputs.push({\n        amount: 600,\n        toAddress: '2N8bhEwbKtMvR2jqMRcTCQqzHP6zXGToXcK',\n        message: 'output #' + (Number(n) + 1)\n      });\n    };\n    lodash.times(150, addOutput);\n    txps.push(txp);\n    */\n\n    _.each(txps, function(tx) {\n      // no future transactions...\n      if (tx.createdOn > now) tx.createdOn = now;\n\n      // TODO: implement profileService.getWallet(tx.walletId)\n      // TODO tx.wallet = profileService.getWallet(tx.walletId);\n      tx.wallet = {\n        coin: 'safe',\n        copayerId: 'asdasdasdasd'\n      };\n      // hardcoded tx.wallet ^\n\n      if (!tx.wallet) {\n        this.logger.debug('no wallet at txp?');\n        return;\n      }\n\n      tx = this.processTx(tx.wallet.coin, tx);\n\n      var action = _.find(tx.actions, {\n        copayerId: tx.wallet.copayerId\n      });\n\n      if (!action && tx.status == 'pending') {\n        tx.pendingForUs = true;\n      }\n\n      if (action && action.type == 'accept') {\n        tx.statusForUs = 'accepted';\n      } else if (action && action.type == 'reject') {\n        tx.statusForUs = 'rejected';\n      } else {\n        tx.statusForUs = 'pending';\n      }\n\n      if (!tx.deleteLockTime) tx.canBeRemoved = true;\n    });\n\n    return txps;\n  }\n\n  public parseAmount(\n    coin: string,\n    amount,\n    currency: string,\n    onlyIntegers?: boolean\n  ) {\n    let settings = this.configProvider.get().wallet.settings;\n    let satToBtc = 1 / 100000000;\n    let unitToSatoshi = settings.unitToSatoshi;\n    let amountUnitStr;\n    let amountSat;\n    let alternativeIsoCode = settings.alternativeIsoCode;\n\n    // If fiat currency\n    if (currency != 'BCH' && currency != 'BTC' && currency != 'SAFE' && currency != 'BTCZ' &&\n        currency != 'ZCL' && currency != 'ANON' && currency != 'ZEL' && currency != 'RVN' && \n        currency != 'LTC' && currency != 'sat') {\n      let formattedAmount = onlyIntegers\n        ? this.filter.formatFiatAmount(amount.toFixed(0))\n        : this.filter.formatFiatAmount(amount);\n      amountUnitStr = formattedAmount + ' ' + currency;\n      amountSat = Number(this.rate.fromFiat(amount, currency, coin).toFixed(0));\n    } else if (currency == 'sat') {\n      amountSat = Number(amount);\n      amountUnitStr = this.formatAmountStr(coin, amountSat);\n      // convert sat to BTC or BCH\n      amount = (amountSat * satToBtc).toFixed(8);\n      currency = coin.toUpperCase();\n    } else {\n      amountSat = parseInt((amount * unitToSatoshi).toFixed(0), 10);\n      amountUnitStr = this.formatAmountStr(coin, amountSat);\n      // convert unit to BTC or BCH\n      amount = (amountSat * satToBtc).toFixed(8);\n      currency = coin.toUpperCase();\n    }\n\n    return {\n      amount,\n      currency,\n      alternativeIsoCode,\n      amountSat,\n      amountUnitStr\n    };\n  }\n\n  public satToUnit(amount): number {\n    let settings = this.configProvider.get().wallet.settings;\n    let unitToSatoshi = settings.unitToSatoshi;\n    let satToUnit = 1 / unitToSatoshi;\n    let unitDecimals = settings.unitDecimals;\n    return parseFloat((amount * satToUnit).toFixed(unitDecimals));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tx-format/tx-format.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from '../../providers/logger/logger';\nimport { PersistenceProvider } from '../../providers/persistence/persistence';\nimport { BwcProvider } from '../bwc/bwc';\n\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class AddressBookProvider {\n  constructor(\n    private bwcProvider: BwcProvider,\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider,\n    private translate: TranslateService\n  ) {\n    this.logger.info('AddressBookProvider initialized.');\n  }\n\n  private getNetwork(address: string): string {\ndebugger;\n    let network;\n    try {\n      network = this.bwcProvider.getBitcore().Address(address).network.name;\n    } catch (e) {\n      try {\n        this.logger.warn('No valid bitcoin address. Trying bitcoin cash...');\n        network = this.bwcProvider.getBitcoreCash().Address(address).network.name;\n      } catch (e) {\n        try {\n          this.logger.warn('No valid bitcoin cash address. Trying safecoin...');\n          network = this.bwcProvider.getBitcoreSafe().Address(address).network.name;\n        } catch (e) {\n          try {\n            this.logger.warn('No valid safecoin address. Trying bitcoinz...');\n            network = this.bwcProvider.getBitcoreBtcz().Address(address).network.name;\n          } catch (e) {\n            try {\n              this.logger.warn('No valid bitcoinz address. Trying ravencoin...');\n              network = this.bwcProvider.getBitcoreRvn().Address(address).network.name;\n            } catch (e) {\n              try {\n                this.logger.warn('No valid ravencoin address. Trying anonymous...');\n                network = this.bwcProvider.getBitcoreAnon().Address(address).network.name;\n              } catch (e) {\n              try {\n                this.logger.warn('No valid anonymous address. Trying zclassic...');\n                network = this.bwcProvider.getBitcoreZcl().Address(address).network.name;\n              } catch (e) {\n               try {\n                  this.logger.warn('No valid zclassic address. Trying zelcash...');\n                  network = this.bwcProvider.getBitcoreZel().Address(address).network.name;\n                } catch (e) {\n                  this.logger.warn('No valid zelcash address. Trying litecoin...');\n                  network = this.bwcProvider.getBitcoreLtc().Address(address).network.name;\n                }\n                }\n              }\n            } \n          }\n        }\n      }\n    }\n    return network;\n  }\n\n  public get(addr: string): Promise<any> {\n// debugger;\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getAddressBook('testnet')\n        .then(ab => {\n          if (ab && _.isString(ab)) ab = JSON.parse(ab);\n          if (ab && ab[addr]) return resolve(ab[addr]);\n\n          this.persistenceProvider\n            .getAddressBook('livenet')\n            .then(ab => {\n              if (ab && _.isString(ab)) ab = JSON.parse(ab);\n              if (ab && ab[addr]) return resolve(ab[addr]);\n              return resolve();\n            })\n            .catch(() => {\n              return reject();\n            });\n        })\n        .catch(() => {\n          return reject();\n        });\n    });\n  }\n\n  public list(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getAddressBook('testnet')\n        .then(ab => {\n          if (ab && _.isString(ab)) ab = JSON.parse(ab);\n\n          ab = ab || {};\n          this.persistenceProvider\n            .getAddressBook('livenet')\n            .then(ab2 => {\n              if (ab2 && _.isString(ab)) ab2 = JSON.parse(ab2);\n\n              ab2 = ab2 || {};\n              return resolve(_.defaults(ab2, ab));\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(() => {\n          let msg = this.translate.instant('Could not get the Addressbook');\n          return reject(msg);\n        });\n    });\n  }\n\n  public add(entry): Promise<any> {\n    return new Promise((resolve, reject) => {\n      var network = this.getNetwork(entry.address);\n      if (_.isEmpty(network)) {\n        let msg = this.translate.instant('Not valid bitcoin address');\n        return reject(msg);\n      }\n      entry.network = network;\n      this.persistenceProvider\n        .getAddressBook(network)\n        .then(ab => {\n          if (ab && _.isString(ab)) ab = JSON.parse(ab);\n          ab = ab || {};\n          if (_.isArray(ab)) ab = {}; // No array\n          if (ab[entry.address]) {\n            let msg = this.translate.instant('Entry already exist');\n            return reject(msg);\n          }\n          ab[entry.address] = entry;\n          this.persistenceProvider\n            .setAddressBook(network, JSON.stringify(ab))\n            .then(() => {\n              this.list()\n                .then(ab => {\n                  return resolve(ab);\n                })\n                .catch(err => {\n                  return reject(err);\n                });\n            })\n            .catch(() => {\n              let msg = this.translate.instant('Error adding new entry');\n              return reject(msg);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public remove(addr: string, network: string): Promise<any> {\n debugger;\n    return new Promise((resolve, reject) => {\n      // var network = this.getNetwork(addr);\n      if (_.isEmpty(network)) {\n        // let msg = this.translate.instant('Not valid address');\n        // return reject(msg);\n        network = 'livenet';\n      }\n      this.persistenceProvider\n        .getAddressBook(network)\n        .then(ab => {\n          if (ab && _.isString(ab)) ab = JSON.parse(ab);\n          ab = ab || {};\n          if (_.isEmpty(ab)) {\n            let msg = this.translate.instant('Addressbook is empty');\n            return reject(msg);\n          }\n          if (!ab[addr]) {\n            let msg = this.translate.instant('Entry does not exist');\n            return reject(msg);\n          }\n          delete ab[addr];\n          this.persistenceProvider\n            .setAddressBook(network, JSON.stringify(ab))\n            .then(() => {\n              this.list()\n                .then(ab => {\n                  return resolve(ab);\n                })\n                .catch(err => {\n                  return reject(err);\n                });\n            })\n            .catch(() => {\n              let msg = this.translate.instant('Error deleting entry');\n              return reject(msg);\n            });\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public removeAll(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .removeAddressbook('livenet')\n        .then(() => {\n          this.persistenceProvider.removeAddressbook('testnet').then(() => {\n            return resolve();\n          });\n        })\n        .catch(() => {\n          let msg = this.translate.instant('Error deleting addressbook');\n          return reject(msg);\n        })\n        .catch(() => {\n          let msg = this.translate.instant('Error deleting addressbook');\n          return reject(msg);\n        });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/address-book/address-book.ts","/*\n* Example of use:\n* let message = this.replaceParametersProvider.replace(this.translate.instant('A total of {{amountBelowFeeStr}} {{coin}} were excluded. These funds come from UTXOs smaller than the network fee provided.'), { amountBelowFeeStr: amountBelowFeeStr, coin: this.tx.coin.toUpperCase() });\n*/\n\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class ReplaceParametersProvider {\n  constructor() {}\n\n  public replace(stringToReplace: string, params): string {\n    let processedParams = [];\n    for (let key in params) {\n      processedParams.push({ key, value: params[key] });\n    }\n\n    processedParams.forEach(param => {\n      stringToReplace = _.replace(\n        stringToReplace,\n        new RegExp('{{' + param.key + '}}', 'g'),\n        param.value\n      );\n      stringToReplace = _.replace(\n        stringToReplace,\n        new RegExp('{{ ' + param.key + ' }}', 'g'),\n        param.value\n      );\n    });\n    return stringToReplace;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/replace-parameters/replace-parameters.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FCM } from '@ionic-native/fcm';\nimport { Events } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { AppProvider } from '../app/app';\nimport { BwcProvider } from '../bwc/bwc';\nimport { ConfigProvider } from '../config/config';\nimport { PlatformProvider } from '../platform/platform';\nimport { ProfileProvider } from '../profile/profile';\n\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class PushNotificationsProvider {\n  private isIOS: boolean;\n  private isAndroid: boolean;\n  private usePushNotifications: boolean;\n  private _token = null;\n\n  constructor(\n    public http: HttpClient,\n    public profileProvider: ProfileProvider,\n    public platformProvider: PlatformProvider,\n    public configProvider: ConfigProvider,\n    public logger: Logger,\n    public appProvider: AppProvider,\n    private bwcProvider: BwcProvider,\n    private FCMPlugin: FCM,\n    private events: Events\n  ) {\n    this.logger.info('PushNotificationsProvider initialized.');\n    this.isIOS = this.platformProvider.isIOS;\n    this.isAndroid = this.platformProvider.isAndroid;\n    this.usePushNotifications = this.platformProvider.isCordova;\n  }\n\n  public init(): void {\n    if (!this.usePushNotifications || this._token) return;\n    this.configProvider.load().then(() => {\n      if (!this.configProvider.get().pushNotificationsEnabled) return;\n\n      this.logger.debug('Starting push notification registration...');\n\n      // Keep in mind the function will return null if the token has not been established yet.\n      this.FCMPlugin.getToken().then(token => {\n        this.logger.debug('Get token for push notifications: ' + token);\n        this._token = token;\n        this.enable();\n        this.handlePushNotifications();\n      });\n    });\n  }\n\n  public handlePushNotifications(): void {\n    if (this.usePushNotifications) {\n      this.FCMPlugin.onTokenRefresh().subscribe(token => {\n        if (!this._token) return;\n        this.logger.debug('Refresh and update token for push notifications...');\n        this._token = token;\n        this.enable();\n      });\n\n      this.FCMPlugin.onNotification().subscribe(data => {\n        if (!this._token) return;\n        this.logger.debug(\n          'New Event Push onNotification: ' + JSON.stringify(data)\n        );\n        if (data.wasTapped) {\n          // Notification was received on device tray and tapped by the user.\n          var walletIdHashed = data.walletId;\n          if (!walletIdHashed) return;\n          this._openWallet(walletIdHashed);\n        } else {\n          // TODO\n          // Notification was received in foreground. Maybe the user needs to be notified.\n        }\n      });\n    }\n  }\n\n  public updateSubscription(walletClient): void {\n    if (!this._token) {\n      this.logger.warn(\n        'Push notifications disabled for this device. Nothing to do here.'\n      );\n      return;\n    }\n    this._subscribe(walletClient);\n  }\n\n  public enable(): void {\n    if (!this._token) {\n      this.logger.warn(\n        'No token available for this device. Cannot set push notifications. Needs registration.'\n      );\n      return;\n    }\n\n    var wallets = this.profileProvider.getWallets();\n    _.forEach(wallets, walletClient => {\n      this._subscribe(walletClient);\n    });\n  }\n\n  public disable(): void {\n    if (!this._token) {\n      this.logger.warn(\n        'No token available for this device. Cannot disable push notifications.'\n      );\n      return;\n    }\n\n    var wallets = this.profileProvider.getWallets();\n    _.forEach(wallets, walletClient => {\n      this._unsubscribe(walletClient);\n    });\n    this._token = null;\n  }\n\n  public unsubscribe(walletClient): void {\n    if (!this._token) return;\n    this._unsubscribe(walletClient);\n  }\n\n  private _subscribe(walletClient): void {\n    let opts = {\n      token: this._token,\n      platform: this.isIOS ? 'ios' : this.isAndroid ? 'android' : null,\n      packageName: this.appProvider.info.packageNameId\n    };\n    walletClient.pushNotificationsSubscribe(opts, err => {\n      if (err)\n        this.logger.error(\n          walletClient.name + ': Subscription Push Notifications error. ',\n          JSON.stringify(err)\n        );\n      else\n        this.logger.debug(\n          walletClient.name + ': Subscription Push Notifications success.'\n        );\n    });\n  }\n\n  private _unsubscribe(walletClient): void {\n    walletClient.pushNotificationsUnsubscribe(this._token, err => {\n      if (err)\n        this.logger.error(\n          walletClient.name + ': Unsubscription Push Notifications error. ',\n          JSON.stringify(err)\n        );\n      else\n        this.logger.debug(\n          walletClient.name + ': Unsubscription Push Notifications Success.'\n        );\n    });\n  }\n\n  private _openWallet(walletIdHashed): void {\n    let walletIdHash;\n    let sjcl = this.bwcProvider.getSJCL();\n\n    let wallets = this.profileProvider.getWallets();\n    let wallet = _.find(wallets, w => {\n      walletIdHash = sjcl.hash.sha256.hash(w.credentials.walletId);\n      return _.isEqual(walletIdHashed, sjcl.codec.hex.fromBits(walletIdHash));\n    });\n\n    if (!wallet) return;\n\n    this.events.publish('OpenWallet', wallet);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/push-notifications/push-notifications.ts","import { Component } from '@angular/core';\nimport { NavController, ViewController } from 'ionic-angular';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { WalletTabsPage } from './wallet-tabs';\nimport { WalletTabsProvider } from './wallet-tabs.provider';\n\n@Component({ template: '' })\nexport class WalletTabsChild {\n  wallets;\n  wallet;\n\n  constructor(\n    public navCtrl: NavController,\n    public profileProvider: ProfileProvider,\n    public walletTabsProvider: WalletTabsProvider\n  ) {}\n\n  ngOnInit() {\n    this.wallets = this.profileProvider.getWallets();\n    this.wallet = this.getParentWallet();\n  }\n\n  public close(): Promise<any> {\n    return this.getParentTabs().dismiss();\n  }\n\n  public getParentTabs(): ViewController {\n    const navParent = this.navCtrl.parent;\n    return navParent && navParent.viewCtrl;\n  }\n\n  public getParentWallet() {\n    const tabs = this.getParentTabs();\n    const walletId = tabs && tabs.instance && tabs.instance.walletId;\n    return this.profileProvider.getWallet(walletId);\n  }\n\n  public isWithinWalletTabs(): boolean {\n    const tabs = this.getParentTabs();\n    const tabsInstance = tabs && (tabs.instance as WalletTabsPage);\n    return tabsInstance && tabsInstance.walletTabs ? true : false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-tabs/wallet-tabs-child.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport env from '../../environments';\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class RateProvider {\n  private alternatives;\n  private ratesBTC;\n  private ratesBCH;\n  private ratesSAFE;\n  private ratesBTCZ;\n  private ratesZCL;\n  private ratesANON;\n  private ratesZEL;\n  private ratesRVN;\n  private ratesLTC;\n  private ratesBtcAvailable: boolean;\n  private ratesBchAvailable: boolean;\n  private ratesSafeAvailable: boolean;\n  private ratesBtczAvailable: boolean;\n  private ratesZclAvailable: boolean;\n  private ratesAnonAvailable: boolean;\n  private ratesZelAvailable: boolean;\n  private ratesRvnAvailable: boolean;\n  private ratesLtcAvailable: boolean;\n\n  private SAT_TO_BTC: number;\n  private BTC_TO_SAT: number;\n\n  private btcrateServiceUrl = env.ratesAPI.btc;\n  private bchRateServiceUrl = env.ratesAPI.bch;\n  private safeRateServiceUrl = env.ratesAPI.safe;\n  private btczRateServiceUrl = env.ratesAPI.btcz;\n  private zclRateServiceUrl = env.ratesAPI.zcl;\n  private anonRateServiceUrl = env.ratesAPI.anon;\n  private zelRateServiceUrl = env.ratesAPI.zel;\n  private rvnRateServiceUrl = env.ratesAPI.rvn;\n  private ltcRateServiceUrl = env.ratesAPI.ltc;\n/*  private names = {\n    aed:  'UAE Dirham (AED)',\n    ars:  'Argentine Peso (ARS)',\n    aud:  'Australian Dollar (AUD)',\n    bch:  'Bitcoin Cash (BCH)',\n    bdt:  'Bangladeshi Taka (BDT)',\n    bhd:  'Bahraini Dinar (BHD)',\n    bmd:  'Bermudan Dollar (BMD)',\n    brl:  'Brazilian Real (BRL)',\n    btc:  'Bitcoin (BTC)',\n    cad:  'Canadian Dollar (CAD)',\n    chf:  'Swiss Franc (CHF)',\n    clp:  'Chilean Peso (CLP)',\n    cny:  'Chinese Yuan (CNY)',\n    czk:  'Czech Koruna (CZK)',\n    dkk:  'Danish Krone (DKK)',\n    eth:  'Ethereum (ETH)',\n    eur:  'Eurozone Euro (EUR)',\n    gbp:  'Pound Sterling (GBP)',\n    hkd:  'Hong Kong Dollar (HKD)',\n    huf:  'Hungarian Forint (HUF)',\n    idr:  'Indonesian Rupiah (IDR)',\n    ils:  'Israeli Shekel (ILS)',\n    inr:  'Indian Rupee (INR)',\n    jpy:  'Japanese Yen (JPY)',\n    krw:  'South Korean Won (KRW)',\n    kwd:  'Kuwaiti Dinar (KWD)',\n    lkr:  'Sri Lankan Rupee (LKR)',\n    ltc:  'Litecoin (LTC)',\n    mmk:  'Myanma Kyat (MMK)',\n    mxn:  'Mexican Peso (MXN)',\n    myr:  'Malaysian Ringgit (MYR)',\n    nok:  'Norwegian Krone (NOK)',\n    nzd:  'New Zealand Dollar (NZD)',\n    php:  'Philippine Peso (PHP)',\n    pkr:  'Pakistani Rupee (PKR)',\n    pln:  'Polish Zloty (PLN)',\n    rub:  'Russian Ruble (RUB)',\n    sar:  'Saudi Riyal (SAR)',\n    sek:  'Swedish Krona (SEK)',\n    sgd:  'Singapore Dollar (SGD)',\n    thb:  'Thai Baht (THB)',\n    try:  'Turkish Lira (TRY)',\n    twd:  'New Taiwan Dollar (TWD)',\n    usd:  'US Dollar (USD)',\n    vef:  'Venezuelan Bolívar Fuerte (VEF)',\n    xag:  'Silver (troy ounce) (XAG)',\n    xau:  'Gold (troy ounce) (XAU)',\n    zar:  'South African Rand'\n  };\n  private codes = {\n    aed:  'AED',\n    ars:  'ARS',\n    aud:  'AUD',\n    bch:  'BCH',\n    bdt:  'BDT',\n    bhd:  'BHD',\n    bmd:  'BMD',\n    brl:  'BRL',\n    btc:  'BTC',\n    cad:  'CAD',\n    chf:  'CHF',\n    clp:  'CLP',\n    cny:  'CNY',\n    czk:  'CZK',\n    dkk:  'DKK',\n    eth:  'ETH',\n    eur:  'EUR',\n    gbp:  'GBP',\n    hkd:  'HKD',\n    huf:  'HUF',\n    idr:  'IDR',\n    ils:  'ILS',\n    inr:  'INR',\n    jpy:  'JPY',\n    krw:  'KRW',\n    kwd:  'KWD',\n    lkr:  'LKR',\n    ltc:  'LTC',\n    mmk:  'MMK',\n    mxn:  'MXN',\n    myr:  'MYR',\n    nok:  'NOK',\n    nzd:  'NZD',\n    php:  'PHP',\n    pkr:  'PKR',\n    pln:  'PLN',\n    rub:  'RUB',\n    sar:  'SAR',\n    sek:  'SEK',\n    sgd:  'SGD',\n    thb:  'THB',\n    try:  'TRY',\n    twd:  'TWD',\n    usd:  'USD',\n    vef:  'VEF',\n    xag:  'XAG',\n    xau:  'XAU',\n    zar:  'ZAR',\n};\n  */\n\n\n  constructor(private http: HttpClient, private logger: Logger) {\n    this.logger.info('RateProvider initialized.');\n    this.alternatives = [];\n    this.ratesBTC = {};\n    this.ratesBCH = {};\n    this.ratesSAFE = {};\n    this.ratesBTCZ = {};\n    this.ratesZCL = {};\n    this.ratesANON = {};\n    this.ratesZEL = {};\n    this.ratesRVN = {};\n    this.ratesLTC = {};\n    this.SAT_TO_BTC = 1 / 1e8;\n    this.BTC_TO_SAT = 1e8;\n    this.ratesBtcAvailable = false;\n    this.ratesBchAvailable = false;\n    this.ratesSafeAvailable = false;\n    this.ratesBtczAvailable = false;\n    this.ratesLtcAvailable = false;\n//    this.updateRatesBtc();\n//    this.updateRatesBch();\n//    this.updateRatesSafe();\n//    this.updateRatesBtcz();\n//    this.updateRatesLtc();\n//    this.updateRatesZcl();\n//    this.updateRatesZcl();\n//    this.updateRatesAnon();\n//    this.updateRatesRvn();\n  }\n\n  public updateRatesBtc(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getBTC()\n        .then(dataBTC => {\n          _.each(dataBTC, currency => {\n            this.ratesBTC[currency.code] = currency.rate;\n            this.alternatives.push({\n              name: currency.name,\n              isoCode: currency.code,\n              rate: currency.rate\n            });\n          });\n          this.ratesBtcAvailable = true;\n          resolve();\n        })\n        .catch(errorBTC => {\n          this.logger.error(errorBTC);\n          reject(errorBTC);\n        });\n    });\n  }\n  public updateRatesSafe(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getSAFE()\n        .then(dataSAFE => {\n          _.each(dataSAFE, currency => {\n            this.ratesSAFE[currency.code] = currency.rate;\n          });\n          this.ratesSafeAvailable = true;\n          resolve();\n        })\n        .catch(errorSAFE => {\n          this.logger.error(errorSAFE);\n          reject(errorSAFE);\n        });\n    });\n  }\n\n  public updateRatesBtcz(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getBTCZ()\n        .then(dataBTCZ => {\n          _.each(dataBTCZ, currency => {\n            this.ratesBTCZ[currency.code] = currency.rate;\n          });\n          this.ratesBtczAvailable = true;\n          resolve();\n        })\n        .catch(errorBTCZ => {\n          this.logger.error(errorBTCZ);\n          reject(errorBTCZ);\n        });\n    });\n  }\n  public updateRatesZcl(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getZCL()\n        .then(dataZCL => {\n          _.each(dataZCL, currency => {\n            this.ratesZCL[currency.code] = currency.rate;\n          });\n          this.ratesZclAvailable = true;\n          resolve();\n        })\n        .catch(errorZCL => {\n          this.logger.error(errorZCL);\n          reject(errorZCL);\n        });\n    });\n  }\n\n  public updateRatesAnon(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getANON()\n        .then(dataANON => {\n          _.each(dataANON, currency => {\n            this.ratesANON[currency.code] = currency.rate;\n          });\n          this.ratesAnonAvailable = true;\n          resolve();\n        })\n        .catch(errorANON => {\n          this.logger.error(errorANON);\n          reject(errorANON);\n        });\n    });\n  }\n\n  public updateRatesZel(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getZEL()\n        .then(dataZEL => {\n          _.each(dataZEL, currency => {\n            this.ratesZEL[currency.code] = currency.rate;\n          });\n          this.ratesZelAvailable = true;\n          resolve();\n        })\n        .catch(errorZEL => {\n          this.logger.error(errorZEL);\n          reject(errorZEL);\n        });\n    });\n  }\n\n  public updateRatesRvn(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getRVN()\n        .then(dataRVN => {\n          _.each(dataRVN, currency => {\n            this.ratesRVN[currency.code] = currency.rate;\n          });\n          this.ratesRvnAvailable = true;\n          resolve();\n        })\n        .catch(errorRVN => {\n          this.logger.error(errorRVN);\n          reject(errorRVN);\n        });\n    });\n  }\n\n  public updateRatesLtc(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getLTC()\n        .then(dataLTC => {\n          _.each(dataLTC, currency => {\n            this.ratesLTC[currency.code] = currency.rate;\n          });\n          this.ratesLtcAvailable = true;\n          resolve();\n        })\n        .catch(errorLTC => {\n          this.logger.error(errorLTC);\n          reject(errorLTC);\n        });\n    });\n  }\n\n  public updateRatesBch(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getBCH()\n        .then(dataBCH => {\n          _.each(dataBCH, currency => {\n            this.ratesBCH[currency.code] = currency.rate;\n          });\n          this.ratesBchAvailable = true;\n          resolve();\n        })\n        .catch(errorBCH => {\n          this.logger.error(errorBCH);\n          reject(errorBCH);\n        });\n    });\n  }\n\n  public getBTC(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.btcrateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getSAFE(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.safeRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getBTCZ(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.btczRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getZCL(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.zclRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getANON(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.anonRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getZEL(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.zelRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getRVN(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.rvnRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n  public getLTC(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.ltcRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n\n  public getBCH(): Promise<any> {\n    return new Promise(resolve => {\n      this.http.get(this.bchRateServiceUrl).subscribe(data => {\n        resolve(data);\n      });\n    });\n  }\n\n  public getRate(code: string, chain?: string): number {\n    if (chain == 'bch') return this.ratesBCH[code];\n    else if (chain == 'btc') return this.ratesBTC[code];\n    else if (chain == 'safe') return this.ratesSAFE[code];\n    else if (chain == 'btcz') return this.ratesBTCZ[code];\n    else if (chain == 'zcl') return this.ratesZCL[code];\n    else if (chain == 'anon') return this.ratesANON[code];\n    else if (chain == 'zel') return this.ratesZEL[code];\n    else if (chain == 'rvn') return this.ratesRVN[code];\n    else return this.ratesLTC[code];\n  }\n\n  public getAlternatives() {\n    return this.alternatives;\n  }\n\n  public isBtcAvailable() {\n    return this.ratesBtcAvailable;\n  }\n\n  public isSafeAvailable() {\n    return this.ratesSafeAvailable;\n  }\n\n  public isBtczAvailable() {\n    return this.ratesBtczAvailable;\n  }\n  public isZclAvailable() {\n    return this.ratesZclAvailable;\n  }\n  public isAnonAvailable() {\n    return this.ratesAnonAvailable;\n  }\n  public isZelAvailable() {\n    return this.ratesZelAvailable;\n  }\n  public isRvnAvailable() {\n    return this.ratesRvnAvailable;\n  }\n\n  public isLtcAvailable() {\n    return this.ratesLtcAvailable;\n  }\n\n  public isBchAvailable() {\n    return this.ratesBchAvailable;\n  }\n\n  public toFiat(satoshis: number, code: string, chain: string): number {\n    if (\n      (!this.isBtcAvailable() && chain == 'btc') ||\n      (!this.isSafeAvailable() && chain == 'safe') ||\n      (!this.isBtczAvailable() && chain == 'btcz') ||\n      (!this.isZclAvailable() && chain == 'zcl') ||\n      (!this.isAnonAvailable() && chain == 'anon') ||\n      (!this.isZelAvailable() && chain == 'zel') ||\n      (!this.isRvnAvailable() && chain == 'rvn') ||\n      (!this.isLtcAvailable() && chain == 'ltc') ||\n      (!this.isBchAvailable() && chain == 'bch')\n    ) {\n      return null;\n    }\n    return satoshis * this.SAT_TO_BTC * this.getRate(code, chain);\n  }\n\n  public fromFiat(amount: number, code: string, chain: string): number {\n    if (\n      (!this.isBtcAvailable() && chain == 'btc') ||\n      (!this.isSafeAvailable() && chain == 'safe') ||\n      (!this.isBtczAvailable() && chain == 'btcz') ||\n      (!this.isZclAvailable() && chain == 'zcl') ||\n      (!this.isAnonAvailable() && chain == 'anon') ||\n      (!this.isZelAvailable() && chain == 'zel') ||\n      (!this.isRvnAvailable() && chain == 'rvn') ||\n      (!this.isLtcAvailable() && chain == 'ltc') ||\n      (!this.isBchAvailable() && chain == 'bch')\n    ) {\n      return null;\n    }\n    return (amount / this.getRate(code, chain)) * this.BTC_TO_SAT;\n  }\n\n  public listAlternatives(sort: boolean) {\n    let alternatives = _.map(this.getAlternatives(), (item: any) => {\n      return {\n        name: item.name,\n        isoCode: item.isoCode\n      };\n    });\n    if (sort) {\n      alternatives.sort((a, b) => {\n        return a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1;\n      });\n    }\n    return _.uniqBy(alternatives, 'isoCode');\n  }\n\n  public whenRatesAvailable(chain: string): Promise<any> {\n    return new Promise(resolve => {\n      if (\n        (this.ratesBtcAvailable && chain == 'btc') ||\n        (this.ratesSafeAvailable && chain == 'safe') ||\n        (this.ratesBtczAvailable && chain == 'btcz') ||\n        (this.ratesZclAvailable && chain == 'zcl') ||\n        (this.ratesAnonAvailable && chain == 'anon') ||\n        (this.ratesZelAvailable && chain == 'zel') ||\n        (this.ratesRvnAvailable && chain == 'rvn') ||\n        (this.ratesLtcAvailable && chain == 'ltc') ||\n        (this.ratesBchAvailable && chain == 'bch')\n      )\n        resolve();\n   /*   else {\n        if (chain == 'btc') {\n          this.updateRatesBtc().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'bch') {\n          this.updateRatesBch().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'safe') {\n          this.updateRatesSafe().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'btcz') {\n          this.updateRatesBtcz().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'zcl') {\n          this.updateRatesZcl().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'anon') {\n          this.updateRatesAnon().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'zel') {\n          this.updateRatesZel().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'rvn') {\n          this.updateRatesRvn().then(() => {\n            resolve();\n          });\n        }\n        if (chain == 'ltc') {\n          this.updateRatesLtc().then(() => {\n            resolve();\n          });\n        }\n      } */\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/rate/rate.ts","import { Injectable } from '@angular/core';\nimport { AndroidFingerprintAuth } from '@ionic-native/android-fingerprint-auth';\nimport { TouchID } from '@ionic-native/touch-id';\n\n// Providers\nimport { AppProvider } from '../../providers/app/app';\nimport { Logger } from '../../providers/logger/logger';\nimport { ConfigProvider } from '../config/config';\nimport { PlatformProvider } from '../platform/platform';\n\nexport enum TouchIdErrors {\n  fingerprintCancelled = 'FINGERPRINT_CANCELLED'\n}\n@Injectable()\nexport class TouchIdProvider {\n  constructor(\n    private app: AppProvider,\n    private touchId: TouchID,\n    private androidFingerprintAuth: AndroidFingerprintAuth,\n    private platform: PlatformProvider,\n    private config: ConfigProvider,\n    private logger: Logger\n  ) {}\n\n  public isAvailable(): Promise<any> {\n    return new Promise(resolve => {\n      if (this.platform.isCordova && this.platform.isAndroid) {\n        this.checkAndroid().then(isAvailable => {\n          return resolve(isAvailable);\n        });\n      } else if (this.platform.isCordova && this.platform.isIOS) {\n        this.checkIOS().then(isAvailable => {\n          return resolve(isAvailable);\n        });\n      } else {\n        return resolve(false);\n      }\n    });\n  }\n\n  private checkIOS(): Promise<any> {\n    return new Promise(resolve => {\n      this.touchId.isAvailable().then(\n        () => {\n          return resolve(true);\n        },\n        () => {\n          this.logger.debug('Fingerprint is not available');\n          return resolve(false);\n        }\n      );\n    });\n  }\n\n  private checkAndroid() {\n    return new Promise(resolve => {\n      this.androidFingerprintAuth\n        .isAvailable()\n        .then(res => {\n          if (res.isAvailable) return resolve(true);\n          else {\n            this.logger.debug('Fingerprint is not available');\n            return resolve(false);\n          }\n        })\n        .catch(() => {\n          this.logger.warn(\n            'Touch ID (Android) is not available for this device'\n          );\n          return resolve(false);\n        });\n    });\n  }\n\n  private verifyIOSFingerprint(): Promise<any> {\n    return this.touchId\n      .verifyFingerprint('Scan your fingerprint please')\n      .catch(err => {\n        if (err && (err.code == -2 || err.code == -128))\n          err.message = TouchIdErrors.fingerprintCancelled;\n        throw err;\n      });\n  }\n\n  private verifyAndroidFingerprint(): Promise<any> {\n    return this.androidFingerprintAuth\n      .encrypt({ clientId: this.app.info.nameCase })\n      .then(result => {\n        if (result.withFingerprint) {\n          this.logger.debug('Successfully authenticated with fingerprint.');\n        } else if (result.withBackup) {\n          this.logger.debug('Successfully authenticated with backup password!');\n        } else this.logger.debug(\"Didn't authenticate!\");\n      })\n      .catch(error => {\n        const err = new Error(error);\n        if (error === TouchIdErrors.fingerprintCancelled) {\n          this.logger.debug('Fingerprint authentication cancelled');\n          err.message = TouchIdErrors.fingerprintCancelled;\n        } else {\n          this.logger.warn('Could not get Fingerprint Authenticated', error);\n        }\n        throw err;\n      });\n  }\n\n  public check(): Promise<any> {\n    if (this.platform.isIOS) return this.verifyIOSFingerprint();\n    if (this.platform.isAndroid) return this.verifyAndroidFingerprint();\n    return undefined;\n  }\n\n  private isNeeded(wallet): string {\n    let config = this.config.get();\n    config.touchIdFor = config.touchIdFor || {};\n    return config.touchIdFor[wallet.credentials.walletId];\n  }\n\n  public checkWallet(wallet): Promise<any> {\n    return this.isAvailable().then((isAvailable: boolean) => {\n      if (!isAvailable) return undefined;\n      if (this.isNeeded(wallet)) return this.check();\n      return undefined;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/touchid/touchid.ts","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x1325,\n  privatekey: 0x80,\n  scripthash: 0x13AF,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: 0xa8eaa2cd,\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/networks.js\n// module id = 144\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 22) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n  var prefix = buffer[0]*256 + buffer[1];\n  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 2 + 20) {\n    throw new TypeError('Address buffers must be exactly 22 bytes.');\n  }\n\n  network = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (!bufferVersion.network || (network && network !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(2);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin Private b-address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = new Buffer(2);\n  version.writeUInt16BE(this.network[this.type], 0);\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Zclassic t-address buffer\n */\nAddress.prototype.toZCLBuffer = function() {\n  var version = new Buffer(2);\n  version.writeUInt16BE(0x1cb8, 0);\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} BTC (standard) address buffer\n */\nAddress.prototype.toBTCBuffer = function() {\n  var version = new Buffer(1);\n  version.writeUInt8BE(0x6f, 0);\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin Private b-address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Zclassic t-address\n */\nAddress.prototype.toZCLString = function() {\n  return Base58Check.encode(this.toZCLBuffer());\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin (standard) address\n */\nAddress.prototype.toBTCString = function() {\n  return Base58Check.encode(this.toBTCBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/address.js\n// module id = 145\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/output.js\n// module id = 146\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x1cb8,\n  privatekey: 0x80,\n  scripthash: 0x1cbd,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  zaddr: 0x169a,\n  zkey: 0xab36,\n  networkMagic: 0x24e92764,\n  port: 1989,\n  dnsSeeds: [\n    'zparty.pl',\n    'seed.bitcoinz.ph',\n    'dnsseed.kemperink.org',\n    'seeder.nomadteam.net'\n  ]\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\naddNetwork({\n  name: 'testnet',\n  alias: 'regtest',\n  pubkeyhash: 0x1d25,\n  privatekey: 0xef,\n  scripthash: 0x1cba,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  zaddr: 0x16b6,\n  zkey: 0xac08,\n});\n\n/**\n * @instance\n * @member Networks#testnet\n */\nvar testnet = get('testnet');\n\n// Add configurable values for testnet/regtest\n\nvar TESTNET = {\n  PORT: 18233,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xfa1af9bf),\n  DNS_SEEDS: [\n    'dnsseed.testnet.z.cash',\n  ]\n};\n\nfor (var key in TESTNET) {\n  if (!_.isObject(TESTNET[key])) {\n    networkMaps[TESTNET[key]] = testnet;\n  }\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xaae83f5f),\n  DNS_SEEDS: []\n};\n\nfor (var key in REGTEST) {\n  if (!_.isObject(REGTEST[key])) {\n    networkMaps[REGTEST[key]] = testnet;\n  }\n}\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT;\n    } else {\n      return TESTNET.PORT;\n    }\n  }\n});\n\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.NETWORK_MAGIC;\n    } else {\n      return TESTNET.NETWORK_MAGIC;\n    }\n  }\n});\n\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS;\n    } else {\n      return TESTNET.DNS_SEEDS;\n    }\n  }\n});\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/networks.js\n// module id = 147\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n  var prefix = buffer[0]*256 + buffer[1];\n  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 2 + 20) {\n    throw new TypeError('Address buffers must be exactly 22 bytes.');\n  }\n\n  network = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (!bufferVersion.network || (network && network !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(2);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = new Buffer(2);\n  version.writeUInt16BE(this.network[this.type], 0);\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/address.js\n// module id = 148\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/output.js\n// module id = 149\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x30,\n  privatekey: 0xb0,\n  scripthash: 0x32,\n  xpubkey: 0x019da462,\n  xprivkey: 0x019d9cfe,\n  networkMagic: 0xfbc0b6db,\n  port: 9333,\n  dnsSeeds: [\n    'dnsseed.litecointools.com',\n    'dnsseed.litecoinpool.org',\n    'dnsseed.ltc.xurious.com',\n    'dnsseed.koin-project.com',\n    'seed-a.litecoin.loshan.co.uk',\n    'dnsseed.thrasher.io'\n  ]\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\naddNetwork({\n  name: 'testnet',\n  alias: 'regtest',\n  pubkeyhash: 0x1d,\n  privatekey: 0xef,\n  scripthash: 0x1c,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  zaddr: 0x16b6,\n  zkey: 0xac08,\n});\n\n/**\n * @instance\n * @member Networks#testnet\n */\nvar testnet = get('testnet');\n\n// Add configurable values for testnet/regtest\n\nvar TESTNET = {\n  PORT: 18233,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xfa1af9bf),\n  DNS_SEEDS: [\n    'dnsseed.testnet.z.cash',\n  ]\n};\n\nfor (var key in TESTNET) {\n  if (!_.isObject(TESTNET[key])) {\n    networkMaps[TESTNET[key]] = testnet;\n  }\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xaae83f5f),\n  DNS_SEEDS: []\n};\n\nfor (var key in REGTEST) {\n  if (!_.isObject(REGTEST[key])) {\n    networkMaps[REGTEST[key]] = testnet;\n  }\n}\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT;\n    } else {\n      return TESTNET.PORT;\n    }\n  }\n});\n\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.NETWORK_MAGIC;\n    } else {\n      return TESTNET.NETWORK_MAGIC;\n    }\n  }\n});\n\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS;\n    } else {\n      return TESTNET.DNS_SEEDS;\n    }\n  }\n});\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/networks.js\n// module id = 153\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n//  var prefix = buffer[0]*256 + buffer[1];\n//  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n//  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n    var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash');\n    var scripthashNetwork = Networks.get(buffer[0], 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 1 + 20) {\n    throw new TypeError('Address buffers must be exactly 21 bytes.=' + buffer.length + '=buffer=' + buffer + '=type=' + type);\n  }\n// debugger;\n  var networkObj = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network');\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(1);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = Buffer.from([this.network[this.type]]);\n  return Buffer.concat([version, this.hashBuffer]);\n};\n//Address.prototype.toBuffer = function() {\n//  var version = new Buffer(2);\n//  version.writeUInt16BE(this.network[this.type], 0);\n//  var buf = Buffer.concat([version, this.hashBuffer]);\n//  return buf;\n//};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/address.js\n// module id = 154\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/output.js\n// module id = 155\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x3c,\n  privatekey: 0x80,\n  scripthash: 0x7a,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: 0x5241564e,\n  port: 8767,\n  dnsSeeds: [\n   'seed-raven.ravencoin.org',\n   'seed-raven.bitactivate.com'\n  ]\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/networks.js\n// module id = 156\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n//  var prefix = buffer[0]*256 + buffer[1];\n//  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n//  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n    var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash');\n    var scripthashNetwork = Networks.get(buffer[0], 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 1 + 20) {\n    throw new TypeError('Address buffers must be exactly 21 bytes.=' + buffer.length + '=buffer=' + buffer + '=type=' + type);\n  }\n// debugger;\n  var networkObj = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network');\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(1);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = Buffer.from([this.network[this.type]]);\n  return Buffer.concat([version, this.hashBuffer]);\n};\n//Address.prototype.toBuffer = function() {\n//  var version = new Buffer(2);\n//  version.writeUInt16BE(this.network[this.type], 0);\n//  var buf = Buffer.concat([version, this.hashBuffer]);\n//  return buf;\n//};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/address.js\n// module id = 157\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/output.js\n// module id = 158\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x3d, // 61 (60-61 R) \n  privatekey: 0xbd, // 189 \n  scripthash: 0x56, // 86 (b or c)\n//  privatekey: 0x56, // 126 (s or t)\n//  scripthash: 0xbd, // 189\n//  scripthash: 89, // 189\n//  pubkeyhash: 0x1c,\n//  privatekey: 0x80,\n//  scripthash: 0x1cbd,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  zaddr: 0x169a,\n  zkey: 0xab36,\n  networkMagic: 0xf1ede28f,\n  port: 8770,\n  dnsSeeds: [\n\t'107.191.36.192',\n\t'45.77.109.253',\n\t'dnsseed.safecoin.org',\n\t'dnsseed.ipv6admin.com',\n\t'dnsseed.fair.exchange'\n  ]\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\naddNetwork({\n  name: 'testnet',\n  alias: 'regtest',\n  pubkeyhash: 0x1d,\n  privatekey: 0xef,\n  scripthash: 0x1c,\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  zaddr: 0x16b6,\n  zkey: 0xac08,\n});\n\n/**\n * @instance\n * @member Networks#testnet\n */\nvar testnet = get('testnet');\n\n// Add configurable values for testnet/regtest\n\nvar TESTNET = {\n  PORT: 18233,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xfa1af9bf),\n  DNS_SEEDS: [\n    'dnsseed.testnet.z.cash',\n  ]\n};\n\nfor (var key in TESTNET) {\n  if (!_.isObject(TESTNET[key])) {\n    networkMaps[TESTNET[key]] = testnet;\n  }\n}\n\nvar REGTEST = {\n  PORT: 18444,\n  NETWORK_MAGIC: BufferUtil.integerAsBuffer(0xaae83f5f),\n  DNS_SEEDS: []\n};\n\nfor (var key in REGTEST) {\n  if (!_.isObject(REGTEST[key])) {\n    networkMaps[REGTEST[key]] = testnet;\n  }\n}\n\nObject.defineProperty(testnet, 'port', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.PORT;\n    } else {\n      return TESTNET.PORT;\n    }\n  }\n});\n\nObject.defineProperty(testnet, 'networkMagic', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.NETWORK_MAGIC;\n    } else {\n      return TESTNET.NETWORK_MAGIC;\n    }\n  }\n});\n\nObject.defineProperty(testnet, 'dnsSeeds', {\n  enumerable: true,\n  configurable: false,\n  get: function() {\n    if (this.regtestEnabled) {\n      return REGTEST.DNS_SEEDS;\n    } else {\n      return TESTNET.DNS_SEEDS;\n    }\n  }\n});\n\n/**\n * @function\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/networks.js\n// module id = 159\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n//  var prefix = buffer[0]*256 + buffer[1];\n//  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n//  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n    var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash');\n    var scripthashNetwork = Networks.get(buffer[0], 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 1 + 20) {\n    throw new TypeError('Address buffers must be exactly 21 bytes.=' + buffer.length + '=buffer=' + buffer + '=type=' + type);\n  }\n// debugger;\n  var networkObj = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network');\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(1);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = Buffer.from([this.network[this.type]]);\n  return Buffer.concat([version, this.hashBuffer]);\n};\n//Address.prototype.toBuffer = function() {\n//  var version = new Buffer(2);\n//  version.writeUInt16BE(this.network[this.type], 0);\n//  var buf = Buffer.concat([version, this.hashBuffer]);\n//  return buf;\n//};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/address.js\n// module id = 160\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/output.js\n// module id = 161\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x1cb8,\n  privatekey: 0x80,\n  scripthash: 0x1cbd,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: 0x24e92764,\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/networks.js\n// module id = 162\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n  var prefix = buffer[0]*256 + buffer[1];\n  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 2 + 20) {\n    throw new TypeError('Address buffers must be exactly 22 bytes.');\n  }\n\n  network = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (!bufferVersion.network || (network && network !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(2);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = new Buffer(2);\n  version.writeUInt16BE(this.network[this.type], 0);\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/address.js\n// module id = 163\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/output.js\n// module id = 164\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  return networkMaps[arg];\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.zaddr - The Zcash payment address prefix\n * @param {Number} data.zkey - The Zcash spending key prefix\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey,\n    zaddr: data.zaddr,\n    zkey: data.zkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      networkMaps[value] = network;\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    if (networkMaps[key] === network) {\n      delete networkMaps[key];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x1cb8,\n  privatekey: 0x80,\n  scripthash: 0x1cbd,\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: 0x24e92764,\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/networks.js\n// module id = 165\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore = require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar JSUtil = BaseBitcore.util.js;\nvar BN = BaseBitcore.crypto.BN;\nvar convertBits = BaseBitcore.util.convertBits;\nvar errors = BaseBitcore.errors;\n\n// var $ = require('./util/preconditions');\n// var errors = require('./errors');\n// var Base58Check = require('./encoding/base58check');\nvar Networks = require('./networks');\n// var Hash = require('./crypto/hash');\n// var JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is either\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string)\n * or `Address.PayToScriptHash` (the string `'scripthash'`). The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash` and `isPayToScriptHash`\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (type !== Address.PayToPublicKeyHash && type !== Address.PayToScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\" or \"scripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 20) {\n    return Address._transformHash(data);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length === 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20) {\n    throw new TypeError('Address hashbuffers must be exactly 20 bytes.');\n  }\n  info.hashBuffer = hash;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash' or 'scripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? new Buffer(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n  var prefix = buffer[0]*256 + buffer[1];\n  var pubkeyhashNetwork = Networks.get(prefix, 'pubkeyhash');\n  var scripthashNetwork = Networks.get(prefix, 'scripthash');\n\n  if (pubkeyhashNetwork) {\n    version.network = pubkeyhashNetwork;\n    version.type = Address.PayToPublicKeyHash;\n  } else if (scripthashNetwork) {\n    version.network = scripthashNetwork;\n    version.type = Address.PayToScriptHash;\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (buffer.length !== 2 + 20) {\n    throw new TypeError('Address buffers must be exactly 22 bytes.');\n  }\n\n  network = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (!bufferVersion.network || (network && network !== bufferVersion.network)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  info.hashBuffer = buffer.slice(2);\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  info.type = Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  return Address.payingTo(Script.buildMultisigOut(publicKeys, threshold), network);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash' or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n  data = data.trim();\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network) {\n  var info = Address._transformPublicKey(data);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToScriptHash);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n\n  return Address.fromScriptHash(Hash.sha256ripemd160(script.toBuffer()), network);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = new Buffer(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  var version = new Buffer(2);\n  version.writeUInt16BE(this.network[this.type], 0);\n  var buf = Buffer.concat([version, this.hashBuffer]);\n  return buf;\n};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/address.js\n// module id = 166\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar BN = BaseBitcore.crypto.BN;\nvar bufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n// var BN = require('../crypto/bn');\nvar buffer = require('buffer');\n// var bufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\n// var $ = require('../util/preconditions');\n// var errors = require('../errors');\n\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/output.js\n// module id = 167\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { BwcProvider } from '../../providers/bwc/bwc';\nimport { ConfigProvider } from '../../providers/config/config';\n\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FeeProvider {\n  private CACHE_TIME_TS: number = 60;\n  private cache: {\n    updateTs: number;\n    coin: string;\n    data?: any;\n  } = {\n    updateTs: 0,\n    coin: ''\n  };\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private bwcProvider: BwcProvider,\n    private translate: TranslateService\n  ) {\n    this.logger.info('FeeProvider initialized.');\n  }\n\n  public getFeeOpts() {\n    const feeOpts = {\n      urgent: this.translate.instant('Urgent'),\n      priority: this.translate.instant('Priority'),\n      normal: this.translate.instant('Normal'),\n      economy: this.translate.instant('Economy'),\n      superEconomy: this.translate.instant('Super Economy'),\n      custom: this.translate.instant('Custom')\n    };\n    return feeOpts;\n  }\n\n  public getCurrentFeeLevel(): string {\n    return this.configProvider.get().wallet.settings.feeLevel || 'normal';\n  }\n\n  public getFeeRate(\n    coin: string,\n    network: string,\n    feeLevel: string\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (feeLevel == 'custom') return resolve();\n      network = network || 'livenet';\n      this.getFeeLevels(coin)\n        .then(response => {\n          let feeLevelRate;\n\n          if (response.fromCache) {\n            feeLevelRate = _.find(response.levels[network], o => {\n              return o.level == feeLevel;\n            });\n          } else {\n            feeLevelRate = _.find(response.levels[network], o => {\n              return o.level == feeLevel;\n            });\n          }\n          if (!feeLevelRate || !feeLevelRate.feePerKb) {\n            let msg =\n              this.translate.instant('Could not get dynamic fee for level:') +\n              ' ' +\n              feeLevel;\n            return reject(msg);\n          }\n\n          let feeRate = feeLevelRate.feePerKb;\n          if (!response.fromCache)\n            this.logger.debug(\n              'Dynamic fee: ' +\n                feeLevel +\n                '/' +\n                network +\n                ' ' +\n                (feeLevelRate.feePerKb / 1000).toFixed() +\n                ' SAT/B'\n            );\n          return resolve(feeRate);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public getCurrentFeeRate(coin: string, network: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getFeeRate(coin, network, this.getCurrentFeeLevel())\n        .then((data: number) => {\n          return resolve(data);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public getFeeLevels(coin: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      coin = coin || 'safe';\n\n      if (\n        this.cache.coin == coin &&\n        this.cache.updateTs > Date.now() - this.CACHE_TIME_TS * 1000\n      ) {\n        return resolve({ levels: this.cache.data, fromCache: true });\n      }\n\n      let walletClient = this.bwcProvider.getClient(null, {});\n\n      walletClient.getFeeLevels(\n        coin,\n        'livenet',\n        (errLivenet, levelsLivenet) => {\n          if (errLivenet ) {\n            if (errLivenet.message == '{\"message\":\"Too many request\"}') return resolve({ levels: this.cache.data });\n            return reject(this.translate.instant('Could not get dynamic fee'));\n          } else {\n              this.cache.updateTs = Date.now();\n              this.cache.coin = coin;\n              this.cache.data = {\n                livenet: levelsLivenet\n              };\n              return resolve({ levels: this.cache.data });\n          }\n//          this.cache.data = {\n//            livenet: levelsLivenet\n//          };\n/*\n          walletClient.getFeeLevels(\n            'btc',\n            'testnet',\n            (errTestnet, levelsTestnet) => {\n              if (errTestnet) {\n                return reject(\n                  this.translate.instant('Could not get dynamic fee')\n                );\n              }\n              this.cache.updateTs = Date.now();\n              this.cache.coin = coin;\n              this.cache.data = {\n                livenet: levelsLivenet,\n                testnet: levelsTestnet\n              };\n              return resolve({ levels: this.cache.data });\n            }\n          );*/\n        }\n      );\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/fee/fee.ts","import {\n  ChangeDetectorRef,\n  Component,\n  HostListener,\n  NgZone\n} from '@angular/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\n\n// Providers\nimport { Config, ConfigProvider } from '../../../providers/config/config';\nimport { FilterProvider } from '../../../providers/filter/filter';\nimport { Logger } from '../../../providers/logger/logger';\nimport { NodeWebkitProvider } from '../../../providers/node-webkit/node-webkit';\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { RateProvider } from '../../../providers/rate/rate';\nimport { TxFormatProvider } from '../../../providers/tx-format/tx-format';\n\n// Pages\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { Coin } from '../../../providers/wallet/wallet';\n// import { BuyAmazonPage } from '../../integrations/amazon/buy-amazon/buy-amazon';\n// import { BitPayCardTopUpPage } from '../../integrations/bitpay-card/bitpay-card-topup/bitpay-card-topup';\n// import { BuyCoinbasePage } from '../../integrations/coinbase/buy-coinbase/buy-coinbase';\n// import { SellCoinbasePage } from '../../integrations/coinbase/sell-coinbase/sell-coinbase';\n// import { BuyGlideraPage } from '../../integrations/glidera/buy-glidera/buy-glidera';\n// import { SellGlideraPage } from '../../integrations/glidera/sell-glidera/sell-glidera';\n// import { BuyMercadoLibrePage } from '../../integrations/mercado-libre/buy-mercado-libre/buy-mercado-libre';\n// import { ShapeshiftConfirmPage } from '../../integrations/shapeshift/shapeshift-confirm/shapeshift-confirm';\nimport { CustomAmountPage } from '../../receive/custom-amount/custom-amount';\nimport { WalletTabsChild } from '../../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../../wallet-tabs/wallet-tabs.provider';\nimport { ConfirmPage } from '../confirm/confirm';\n\n@Component({\n  selector: 'page-amount',\n  templateUrl: 'amount.html'\n})\nexport class AmountPage extends WalletTabsChild {\n  private LENGTH_EXPRESSION_LIMIT: number;\n  private availableUnits;\n  public unit: string;\n  private reNr: RegExp;\n  private reOp: RegExp;\n  private nextView;\n  private fixedUnit: boolean;\n  public fiatCode: string;\n  private altUnitIndex: number;\n  private unitIndex: number;\n  private unitToSatoshi: number;\n  private satToUnit: number;\n  private unitDecimals: number;\n  private zone;\n  private description: string;\n\n  public disableHardwareKeyboard: boolean;\n  public onlyIntegers: boolean;\n  public alternativeUnit: string;\n  public globalResult: string;\n  public alternativeAmount;\n  public expression;\n  public amount;\n\n  public shiftMax: number;\n  public shiftMin: number;\n  public showSendMax: boolean;\n  public allowSend: boolean;\n  public recipientType: string;\n  public toAddress: string;\n  public network: string;\n  public name: string;\n  public email: string;\n  public color: string;\n  public useSendMax: boolean;\n  public config: Config;\n  public toWalletId: string;\n  private _id: string;\n  public requestingAmount: boolean;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private filterProvider: FilterProvider,\n    private logger: Logger,\n    navCtrl: NavController,\n    private navParams: NavParams,\n    private nodeWebkitProvider: NodeWebkitProvider,\n    private platformProvider: PlatformProvider,\n    profileProvider: ProfileProvider,\n    private rateProvider: RateProvider,\n    private txFormatProvider: TxFormatProvider,\n    private changeDetectorRef: ChangeDetectorRef,\n    walletTabsProvider: WalletTabsProvider,\n    private events: Events\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n    this.zone = new NgZone({ enableLongStackTrace: false });\n    this.config = this.configProvider.get();\n    this.recipientType = this.navParams.data.recipientType;\n    this.toAddress = this.navParams.data.toAddress;\n    this.network = this.navParams.data.network;\n    this.name = this.navParams.data.name;\n    this.email = this.navParams.data.email;\n    this.color = this.navParams.data.color;\n    this.fixedUnit = this.navParams.data.fixedUnit;\n    this.description = this.navParams.data.description;\n    this.onlyIntegers = this.navParams.data.onlyIntegers\n      ? this.navParams.data.onlyIntegers\n      : false;\n\n    this.showSendMax = false;\n    this.useSendMax = false;\n    this.allowSend = false;\n\n    this.availableUnits = [];\n    this.expression = '';\n\n    this.LENGTH_EXPRESSION_LIMIT = 19;\n    this.amount = 0;\n    this.altUnitIndex = 0;\n    this.unitIndex = 0;\n\n    this.reNr = /^[1234567890\\.]$/;\n    this.reOp = /^[\\*\\+\\-\\/]$/;\n\n    this.requestingAmount =\n    this.navParams.get('nextPage') === 'CustomAmountPage';\n    this.nextView = this.getNextView();\n\n    this.unitToSatoshi = this.config.wallet.settings.unitToSatoshi;\n    this.satToUnit = 1 / this.unitToSatoshi;\n    this.unitDecimals = this.config.wallet.settings.unitDecimals;\n\n    // BitPay Card ID or Wallet ID\n    this._id = this.navParams.data.id;\n\n    // Use only with ShapeShift\n    this.toWalletId = this.navParams.data.toWalletId;\n    this.shiftMax = this.navParams.data.shiftMax;\n    this.shiftMin = this.navParams.data.shiftMin;\n  }\n\n  ionViewDidLoad() {\n    this.setAvailableUnits();\n    this.updateUnitUI();\n  }\n\n  ionViewWillEnter() {\n    this.disableHardwareKeyboard = false;\n    this.expression = '';\n    this.useSendMax = false;\n    this.processAmount();\n    this.events.subscribe('Wallet/disableHardwareKeyboard', () => {\n      this._disableHardwareKeyboard();\n    });\n  }\n\n  ionViewWillLeave() {\n    this._disableHardwareKeyboard();\n  }\n\n  private _disableHardwareKeyboard() {\n    this.disableHardwareKeyboard = true;\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.disableHardwareKeyboard) return;\n    if (!event.key) return;\n    if (event.which === 8) {\n      event.preventDefault();\n      this.removeDigit();\n    }\n\n    if (event.key.match(this.reNr)) {\n      this.pushDigit(event.key, true);\n    } else if (event.key.match(this.reOp)) {\n      this.pushOperator(event.key);\n    } else if (event.keyCode === 86) {\n      if (event.ctrlKey || event.metaKey) this.processClipboard();\n    } else if (event.keyCode === 13) this.finish();\n  }\n\n  private setAvailableUnits(): void {\n    this.availableUnits = [];\n\n    const parentWalletCoin = this.wallet && this.wallet.coin;\n\n    if (parentWalletCoin === 'btc' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Bitcoin',\n        id: 'btc',\n        shortName: 'BTC'\n      });\n    }\n\n    if (parentWalletCoin === 'safe' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Safecoin',\n        id: 'safe',\n        shortName: 'SAFE'\n      });\n    }\n\n    if (parentWalletCoin === 'btcz' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Bitcoinz',\n        id: 'btcz',\n        shortName: 'BTCZ'\n      });\n    }\n\n    if (parentWalletCoin === 'zcl' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Zclassic',\n        id: 'zcl',\n        shortName: 'ZCL'\n      });\n    }\n\n    if (parentWalletCoin === 'anon' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Anonymous',\n        id: 'anon',\n        shortName: 'ANON'\n      });\n    }\n\n    if (parentWalletCoin === 'zel' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Zelcash',\n        id: 'zel',\n        shortName: 'ZEL'\n      });\n    }\n\n    if (parentWalletCoin === 'rvn' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Ravencoin',\n        id: 'rvn',\n        shortName: 'RVN'\n      });\n    }\n\n    if (parentWalletCoin === 'ltc' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Litecoin',\n        id: 'ltc',\n        shortName: 'LTC'\n      });\n    }\n\n    if (parentWalletCoin === 'bch' || !parentWalletCoin) {\n      this.availableUnits.push({\n        name: 'Bitcoin Cash',\n        id: 'bch',\n        shortName: 'BCH'\n      });\n    }\n\n    this.unitIndex = 0;\n\n    if (this.navParams.data.coin) {\n      let coins = this.navParams.data.coin.split(',');\n      let newAvailableUnits = [];\n\n      _.each(coins, (c: string) => {\n        let coin = _.find(this.availableUnits, {\n          id: c\n        });\n        if (!coin) {\n          this.logger.warn(\n            'Could not find desired coin:' + this.navParams.data.coin\n          );\n        } else {\n          newAvailableUnits.push(coin);\n        }\n      });\n\n      if (newAvailableUnits.length > 0) {\n        this.availableUnits = newAvailableUnits;\n      }\n    }\n\n    //  currency have preference\n    let fiatName;\n    if (this.navParams.data.currency) {\n      this.fiatCode = this.navParams.data.currency;\n      this.altUnitIndex = this.unitIndex;\n      this.unitIndex = this.availableUnits.length;\n    } else {\n      this.fiatCode = this.config.wallet.settings.alternativeIsoCode || 'USD';\n      fiatName = this.config.wallet.settings.alternativeName || this.fiatCode;\n      this.altUnitIndex = this.availableUnits.length;\n    }\n\n    this.availableUnits.push({\n      name: fiatName || this.fiatCode,\n      // TODO\n      id: this.fiatCode,\n      shortName: this.fiatCode,\n      isFiat: true\n    });\n\n    if (this.navParams.data.fixedUnit) {\n      this.fixedUnit = true;\n    }\n  }\n\n  private paste(value: string): void {\n    this.zone.run(() => {\n      this.expression = value;\n      this.processAmount();\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  private getNextView() {\n    let nextPage;\n    switch (this.navParams.data.nextPage) {\n      case 'CustomAmountPage':\n        nextPage = CustomAmountPage;\n        break;\n      default:\n        this.showSendMax = true;\n        nextPage = ConfirmPage;\n    }\n/*    switch (this.navParams.data.nextPage) {\n      case 'BitPayCardTopUpPage':\n        this.showSendMax = true;\n        nextPage = BitPayCardTopUpPage;\n        break;\n      case 'BuyAmazonPage':\n        nextPage = BuyAmazonPage;\n        break;\n      case 'BuyGlideraPage':\n        nextPage = BuyGlideraPage;\n        break;\n      case 'SellGlideraPage':\n        nextPage = SellGlideraPage;\n        break;\n      case 'BuyCoinbasePage':\n        nextPage = BuyCoinbasePage;\n        break;\n      case 'SellCoinbasePage':\n        nextPage = SellCoinbasePage;\n        break;\n      case 'CustomAmountPage':\n        nextPage = CustomAmountPage;\n        break;\n      case 'BuyMercadoLibrePage':\n        nextPage = BuyMercadoLibrePage;\n        break;\n      case 'ShapeshiftConfirmPage':\n        this.showSendMax = true;\n        nextPage = ShapeshiftConfirmPage;\n        break; \n      default:\n        this.showSendMax = true;\n        nextPage = ConfirmPage;\n    }          */\n    return nextPage;\n  }\n\n  public processClipboard(): void {\n    if (!this.platformProvider.isNW) return;\n\n    let value = this.nodeWebkitProvider.readFromClipboard();\n\n    if (value && this.evaluate(value) > 0) this.paste(this.evaluate(value));\n  }\n\n  public sendMax(): void {\n    this.useSendMax = true;\n    if (!this.wallet) {\n      return this.finish();\n    }\n    const maxAmount = this.txFormatProvider.satToUnit(\n      this.wallet.status.availableBalanceSat\n    );\n    this.zone.run(() => {\n      this.expression = this.availableUnits[this.unitIndex].isFiat\n        ? this.toFiat(maxAmount, this.wallet.coin).toFixed(2)\n        : maxAmount;\n      this.processAmount();\n      this.changeDetectorRef.detectChanges();\n      this.finish();\n    });\n  }\n\n  public isSendMaxButtonShown() {\n    return !this.expression && !this.requestingAmount && this.showSendMax;\n  }\n\n  public pushDigit(digit: string, isHardwareKeyboard?: boolean): void {\n    this.useSendMax = false;\n    if (digit === 'delete') {\n      return this.removeDigit();\n    }\n    if (this.isSendMaxButtonShown() && digit === '0' && !isHardwareKeyboard) {\n      return this.sendMax();\n    }\n    if (\n      this.expression &&\n      this.expression.length >= this.LENGTH_EXPRESSION_LIMIT\n    )\n      return;\n    this.zone.run(() => {\n      this.expression = (this.expression + digit).replace('..', '.');\n      this.processAmount();\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  public removeDigit(): void {\n    this.zone.run(() => {\n      this.expression = this.expression.slice(0, -1);\n      this.processAmount();\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  public pushOperator(operator: string): void {\n    if (!this.expression || this.expression.length == 0) return;\n    this.zone.run(() => {\n      this.expression = this._pushOperator(this.expression, operator);\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  private _pushOperator(val: string, operator: string) {\n    if (!this.isOperator(_.last(val))) {\n      return val + operator;\n    } else {\n      return val.slice(0, -1) + operator;\n    }\n  }\n\n  private isOperator(val: string): boolean {\n    const regex = /[\\/\\-\\+\\x\\*]/;\n    return regex.test(val);\n  }\n\n  private isExpression(val: string): boolean {\n    const regex = /^\\.?\\d+(\\.?\\d+)?([\\/\\-\\+\\*x]\\d?\\.?\\d+)+$/;\n    return regex.test(val);\n  }\n\n  private processAmount(): void {\n    let formatedValue = this.format(this.expression);\n    let result = this.evaluate(formatedValue);\n    this.allowSend = this.onlyIntegers\n      ? _.isNumber(result) && +result > 0 && Number.isInteger(+result)\n      : _.isNumber(result) && +result > 0;\n\n    if (_.isNumber(result)) {\n      this.globalResult = this.isExpression(this.expression)\n        ? '= ' + this.processResult(result)\n        : '';\n\n      if (this.availableUnits[this.unitIndex].isFiat) {\n        let a = this.fromFiat(result);\n        if (a) {\n          this.alternativeAmount = this.txFormatProvider.formatAmount(\n            a * this.unitToSatoshi,\n            true\n          );\n        } else {\n          this.alternativeAmount = result ? 'N/A' : null;\n          this.allowSend = false;\n        }\n      } else {\n        this.alternativeAmount = this.filterProvider.formatFiatAmount(\n          this.toFiat(result)\n        );\n      }\n    }\n  }\n\n  private processResult(val): number {\n    if (this.availableUnits[this.unitIndex].isFiat)\n      return this.filterProvider.formatFiatAmount(val);\n    else\n      return this.txFormatProvider.formatAmount(\n        val.toFixed(this.unitDecimals) * this.unitToSatoshi,\n        true\n      );\n  }\n\n  private fromFiat(val, coin?: string): number {\n    coin = coin || this.availableUnits[this.altUnitIndex].id;\n    return parseFloat(\n      (\n        this.rateProvider.fromFiat(val, this.fiatCode, coin) * this.satToUnit\n      ).toFixed(this.unitDecimals)\n    );\n  }\n\n  private toFiat(val: number, coin?: Coin): number {\n    if (!this.rateProvider.getRate(this.fiatCode)) return undefined;\n\n    return parseFloat(\n      this.rateProvider\n        .toFiat(\n          val * this.unitToSatoshi,\n          this.fiatCode,\n          coin || this.availableUnits[this.unitIndex].id\n        )\n        .toFixed(2)\n    );\n  }\n\n  private format(val: string): string {\n    if (!val) return undefined;\n\n    let result = val.toString();\n\n    if (this.isOperator(_.last(val))) result = result.slice(0, -1);\n\n    return result.replace('x', '*');\n  }\n\n  private evaluate(val: string) {\n    let result;\n    try {\n      result = eval(val);\n    } catch (e) {\n      return 0;\n    }\n    if (!_.isFinite(result)) return 0;\n    return result;\n  }\n\n  public finish(): void {\n    let unit = this.availableUnits[this.unitIndex];\n    let _amount = this.evaluate(this.format(this.expression));\n    let coin = unit.id;\n    let data;\n\n    if (unit.isFiat) {\n      coin = this.availableUnits[this.altUnitIndex].id;\n    }\n\n    if (this.navParams.data.nextPage) {\n      data = {\n        id: this._id,\n        amount: this.useSendMax ? null : _amount,\n        currency: unit.id.toUpperCase(),\n        coin,\n        useSendMax: this.useSendMax,\n        toWalletId: this.toWalletId\n      };\n    } else {\n      let amount = _amount;\n      amount = unit.isFiat\n        ? (this.fromFiat(amount) * this.unitToSatoshi).toFixed(0)\n        : (amount * this.unitToSatoshi).toFixed(0);\n      data = {\n        recipientType: this.recipientType,\n        amount,\n        toAddress: this.toAddress,\n        name: this.name,\n        email: this.email,\n        color: this.color,\n        coin,\n        useSendMax: this.useSendMax,\n        description: this.description\n      };\n\n      if (unit.isFiat) {\n        data.fiatAmount = _amount;\n        data.fiatCode = this.fiatCode;\n      }\n    }\n    this.useSendMax = null;\n    this.navCtrl.push(this.nextView, data);\n  }\n\n  private updateUnitUI(): void {\n    this.unit = this.availableUnits[this.unitIndex].shortName;\n    this.alternativeUnit = this.availableUnits[this.altUnitIndex].shortName;\n    this.processAmount();\n    this.logger.debug(\n      'Update unit coin @amount unit:' +\n        this.unit +\n        ' alternativeUnit:' +\n        this.alternativeUnit\n    );\n  }\n\n  public changeUnit(): void {\n    if (this.fixedUnit) return;\n\n    this.unitIndex++;\n    if (this.unitIndex >= this.availableUnits.length) this.unitIndex = 0;\n\n    if (this.availableUnits[this.unitIndex].isFiat) {\n      // Always return to BTC... TODO?\n      this.altUnitIndex = 0;\n    } else {\n      this.altUnitIndex = _.findIndex(this.availableUnits, {\n        isFiat: true\n      });\n    }\n\n    this.zone.run(() => {\n      this.updateUnitUI();\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/send/amount/amount.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from '../../providers/logger/logger';\n\nimport { ConfigProvider } from '../config/config';\n\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\n\n@Injectable()\nexport class LanguageProvider {\n  private languages = [\n    {\n      name: 'English',\n      isoCode: 'en'\n    },\n    {\n      name: 'Español',\n      isoCode: 'es'\n    },\n    {\n      name: 'Français',\n      isoCode: 'fr'\n    },\n    {\n      name: 'Italiano',\n      isoCode: 'it'\n    },\n    {\n      name: 'Nederlands',\n      isoCode: 'nl'\n    },\n    {\n      name: 'Polski',\n      isoCode: 'pl'\n    },\n    {\n      name: 'Deutsch',\n      isoCode: 'de'\n    },\n    {\n      name: '日本語',\n      isoCode: 'ja',\n      useIdeograms: true\n    },\n    {\n      name: '中文（简体）',\n      isoCode: 'zh',\n      useIdeograms: true\n    },\n    {\n      name: 'Pусский',\n      isoCode: 'ru'\n    },\n    {\n      name: 'Português',\n      isoCode: 'pt'\n    }\n  ];\n  private current: string;\n\n  constructor(\n    private logger: Logger,\n    private translate: TranslateService,\n    private configProvider: ConfigProvider\n  ) {\n    this.logger.info('LanguageProvider initialized.');\n    this.translate.onLangChange.subscribe(event => {\n      this.logger.info('Setting new default language to: ' + event.lang);\n    });\n  }\n\n  public load() {\n    let lang = this.configProvider.get().wallet.settings.defaultLanguage;\n    if (!_.isEmpty(lang)) this.current = lang;\n    else {\n      // Get from browser\n      const browserLang = this.translate.getBrowserLang();\n      this.current = this.getName(browserLang)\n        ? browserLang\n        : this.getDefault();\n    }\n    this.logger.info('Default language: ' + this.current);\n    this.translate.setDefaultLang(this.current);\n    moment.locale(this.current);\n  }\n\n  public set(lang: string): void {\n    this.current = lang;\n    this.translate.use(lang);\n    moment.locale(lang);\n    this.configProvider.set({\n      wallet: { settings: { defaultLanguage: lang } }\n    });\n  }\n\n  public getName(lang: string): string {\n    return _.result(\n      _.find(this.languages, {\n        isoCode: lang\n      }),\n      'name'\n    );\n  }\n\n  private getDefault(): string {\n    return this.languages[0]['isoCode'];\n  }\n\n  public getCurrent() {\n    return this.current;\n  }\n\n  public getAvailables() {\n    return this.languages;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/language/language.ts","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { ConfigProvider } from '../config/config';\nimport { ProfileProvider } from '../profile/profile';\nimport { WalletProvider } from '../wallet/wallet';\n\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class EmailNotificationsProvider {\n  constructor(\n    private configProvider: ConfigProvider,\n    private profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private logger: Logger\n  ) {\n    this.logger.info('EmailNotificationsProvider initialized');\n  }\n\n  public updateEmail(opts) {\n    opts = opts || {};\n    if (!opts.email) return;\n\n    this.configProvider.set({\n      emailFor: null, // Backward compatibility\n      emailNotifications: {\n        enabled: opts.enabled,\n        email: opts.enabled ? opts.email : null\n      }\n    });\n\n    setTimeout(() => {\n      let wallets = this.profileProvider.getWallets();\n      this.walletProvider.updateRemotePreferences(wallets);\n    }, 1000);\n  }\n\n  public getEmailIfEnabled(config?) {\n    config = config ? config : this.configProvider.get();\n\n    if (config.emailNotifications) {\n      if (!config.emailNotifications.enabled) return;\n\n      if (config.emailNotifications.email)\n        return config.emailNotifications.email;\n    }\n\n    if (_.isEmpty(config.emailFor)) return;\n\n    // Backward compatibility\n    let emails = _.values(config.emailFor);\n    for (var i = 0; i < emails.length; i++) {\n      if (emails[i] !== null && typeof emails[i] !== 'undefined') {\n        return emails[i];\n      }\n    }\n  }\n\n  public init() {\n    let config = this.configProvider.get();\n\n    if (config.emailNotifications && config.emailNotifications.enabled) {\n      // If email already set\n      if (config.emailNotifications.email) return;\n\n      var currentEmail = this.getEmailIfEnabled(config);\n\n      this.updateEmail({\n        enabled: currentEmail ? true : false,\n        email: currentEmail\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/email-notifications/email-notifications.ts","import { Component, ViewChild } from '@angular/core';\nimport { HomePage } from '../home/home';\nimport { ScanPage } from '../scan/scan';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n  @ViewChild('tabs')\n  tabs;\n\n  homeRoot = HomePage;\n  scanRoot = ScanPage;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/input.js\n// module id = 215\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/signature.js\n// module id = 216\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/input.js\n// module id = 217\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/signature.js\n// module id = 218\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/input.js\n// module id = 221\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/signature.js\n// module id = 222\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/input.js\n// module id = 223\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/signature.js\n// module id = 224\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/input.js\n// module id = 225\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/signature.js\n// module id = 226\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/input.js\n// module id = 227\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/signature.js\n// module id = 228\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../../util/preconditions');\n// var errors = require('../../errors');\n// var BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\n// var BufferUtil = require('../../util/buffer');\n// var JSUtil = require('../../util/js');\nvar Script = require('../../script');\n// var Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = new buffer.Buffer(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = new buffer.Buffer(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = new buffer.Buffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== 4294967295;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\nmodule.exports = Input;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/input.js\n// module id = 229\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar errors = BaseBitcore.errors;\nvar Signature = BaseBitcore.crypto.Signature;\n\n// var $ = require('../util/preconditions');\nvar inherits = require('inherits');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n// var errors = require('../errors');\n// var Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : new Buffer(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/signature.js\n// module id = 230\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { ActionSheetProvider } from '../action-sheet/action-sheet';\nimport { AppProvider } from '../app/app';\nimport { BwcProvider } from '../bwc/bwc';\nimport { PayproProvider } from '../paypro/paypro';\nimport { Coin } from '../wallet/wallet';\n\nexport interface RedirParams {\n  activePage?: any;\n  amount?: string;\n  coin?: Coin;\n  fromHomeCard?: boolean;\n}\n\n@Injectable()\nexport class IncomingDataProvider {\n  constructor(\n    private actionSheetProvider: ActionSheetProvider,\n    private events: Events,\n    private bwcProvider: BwcProvider,\n    private payproProvider: PayproProvider,\n    private logger: Logger,\n    private appProvider: AppProvider,\n    private translate: TranslateService\n  ) {\n    this.logger.info('IncomingDataProvider initialized.');\n  }\n\n  public showMenu(data): void {\n    const dataMenu = this.actionSheetProvider.createIncomingDataMenu({ data });\n    dataMenu.present();\n    dataMenu.onDidDismiss(data => this.finishIncomingData(data));\n  }\n\n  public finishIncomingData(data: any): void {\n    let redirTo = null;\n    let value = null;\n    if (data) {\n      redirTo = data.redirTo;\n      value = data.value;\n    }\n    if (redirTo === 'AmountPage') {\n      let coin = data.coin ? data.coin : 'safe';\n      this.events.publish('finishIncomingDataMenuEvent', {\n        redirTo,\n        value,\n        coin\n      });\n    } else {\n      this.events.publish('finishIncomingDataMenuEvent', { redirTo, value });\n    }\n  }\n\n  private isValidPayProNonBackwardsCompatible(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!/^bitcoin(cash)?:\\?r=[\\w+]/.exec(data);\n  }\n\n  private isValidBitcoinUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcore().URI.isValid(data);\n  }\n\n  private isValidBitcoinCashUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreCash().URI.isValid(data);\n  }\n\n  private isValidSafecoinUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreSafe().URI.isValid(data);\n  }\n  private isValidBitcoinzUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreBtcz().URI.isValid(data);\n  }\n  private isValidZclassicUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreZcl().URI.isValid(data);\n  }\n  private isValidAnonymousUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreAnon().URI.isValid(data);\n  }\n  private isValidZelcashUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreZel().URI.isValid(data);\n  }\n  private isValidRavencoinUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreRvn().URI.isValid(data);\n  }\n  private isValidLitecoinUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider.getBitcoreLtc().URI.isValid(data);\n  }\n\n  public isValidBitcoinCashUriWithLegacyAddress(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!this.bwcProvider\n      .getBitcore()\n      .URI.isValid(data.replace(/^bitcoincash:/, 'bitcoin:'));\n  }\n\n  private isValidPlainUrl(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!/^https?:\\/\\//.test(data);\n  }\n\n  private isValidBitcoinAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcore().Address.isValid(data, 'livenet') ||\n      this.bwcProvider.getBitcore().Address.isValid(data, 'testnet')\n    );\n  }\n\n  public isValidBitcoinCashLegacyAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcore().Address.isValid(data, 'livenet') ||\n      this.bwcProvider.getBitcore().Address.isValid(data, 'testnet')\n    );\n  }\n\n  private isValidBitcoinCashAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreCash().Address.isValid(data, 'livenet') ||\n      this.bwcProvider.getBitcoreCash().Address.isValid(data, 'testnet')\n    );\n  }\n \n  private isValidSafecoinAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreSafe().Address.isValid(data, 'livenet')\n    );\n  }\n  private isValidBitcoinzAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreBtcz().Address.isValid(data, 'livenet')\n    );\n  }\n  private isValidZclassicAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreZcl().Address.isValid(data, 'livenet')\n    );\n  }\n  private isValidAnonymousAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreAnon().Address.isValid(data, 'livenet')\n    );\n  }\n  private isValidZelcashAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreZel().Address.isValid(data, 'livenet')\n    );\n  }\n  private isValidRavencoinAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreRvn().Address.isValid(data, 'livenet')\n    );\n  }\n  private isValidLitecoinAddress(data: string): boolean {\n    return !!(\n      this.bwcProvider.getBitcoreLtc().Address.isValid(data, 'livenet')\n    );\n  }\n\n  private isValidGlideraUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!(\n      data && data.indexOf(this.appProvider.info.name + '://glidera') === 0\n    );\n  }\n\n  private isValidCoinbaseUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!(\n      data && data.indexOf(this.appProvider.info.name + '://coinbase') === 0\n    );\n  }\n\n  private isValidBitPayCardUri(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!(data && data.indexOf('bitpay://bitpay.com?secret=') === 0);\n  }\n\n  private isValidJoinCode(data: string): boolean {\n    data = this.sanitizeUri(data);\n    return !!(data && data.match(/^copay:[0-9A-HJ-NP-Za-km-z]{70,80}$/));\n  }\n\n  private isValidJoinLegacyCode(data: string): boolean {\n    return !!(data && data.match(/^[0-9A-HJ-NP-Za-km-z]{70,80}$/));\n  }\n\n  private isValidPrivateKey(data: string): boolean {\n    return !!(\n      data &&\n      (data.substring(0, 2) == '6P' || this.checkPrivateKey(data))\n    );\n  }\n\n  private isValidImportPrivateKey(data: string): boolean {\n    return !!(\n      data &&\n      (data.substring(0, 2) == '1|' ||\n        data.substring(0, 2) == '2|' ||\n        data.substring(0, 2) == '3|')\n    );\n  }\n\n  private handlePrivateKey(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: private key');\n    this.showMenu({\n      data,\n      type: 'privateKey',\n      fromHomeCard: redirParams ? redirParams.fromHomeCard : false\n    });\n  }\n\n  private handlePayProNonBackwardsCompatible(data: string): void {\n    this.logger.debug(\n      'Incoming-data: Payment Protocol with non-backwards-compatible request'\n    );\n    let coin = data.indexOf('bitcoincash') === 0 \n               ? Coin.BCH \n                : data.indexOf('bitcoinz') === 0\n                 ? Coin.BTCZ \n                  : data.indexOf('safecoin') === 0\n                   ? Coin.SAFE \n                    : data.indexOf('zclassic') === 0\n                     ? Coin.ZCL \n                    : data.indexOf('anonymous') === 0\n                     ? Coin.ANON \n                    : data.indexOf('zelcash') === 0\n                     ? Coin.ZEL \n                      : data.indexOf('ravencoin') === 0\n                       ? Coin.RVN \n                        : data.indexOf('litecoin') === 0\n                         ? Coin.LTC \n                          : Coin.BTC;\n    debugger;\n    if ((coin == Coin.BTC) || (coin == Coin.BCH)) { \n      data = decodeURIComponent(data.replace(/bitcoin(cash)?:\\?r=/, ''));\n      this.goToPayPro(data, coin);\n    }\n  }\n\n  private handleBitcoinUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Bitcoin URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.BTC;\n    let parsed = this.bwcProvider.getBitcore().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n\n  private handleSafecoinUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Safecoin URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.SAFE;\n    let parsed = this.bwcProvider.getBitcoreSafe().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n  private handleBitcoinzUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Safecoin URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.BTCZ;\n    let parsed = this.bwcProvider.getBitcoreBtcz().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n  private handleZclassicUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Zclassic URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.ZCL;\n    let parsed = this.bwcProvider.getBitcoreZcl().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n  private handleAnonymousUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Anonymous URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.ANON;\n    let parsed = this.bwcProvider.getBitcoreAnon().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n  private handleZelcashUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Zelcash URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.ZEL;\n    let parsed = this.bwcProvider.getBitcoreZel().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n  private handleRavencoinUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Ravencoin URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.RVN;\n    let parsed = this.bwcProvider.getBitcoreRvn().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n  private handleLitecoinUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Safecoin URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.LTC;\n    let parsed = this.bwcProvider.getBitcoreLtc().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n\n  private handleBitcoinCashUri(data: string, redirParams?: RedirParams): void {\n    this.logger.debug('Incoming-data: Bitcoin Cash URI');\n    let amountFromRedirParams =\n      redirParams && redirParams.amount ? redirParams.amount : '';\n    const coin = Coin.BCH;\n    let parsed = this.bwcProvider.getBitcoreCash().URI(data);\n    let address = parsed.address ? parsed.address.toString() : '';\n\n    // keep address in original format\n    if (parsed.address && data.indexOf(address) < 0) {\n      address = parsed.address.toCashAddress();\n    }\n\n    let message = parsed.message;\n    let amount = parsed.amount || amountFromRedirParams;\n\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n\n  private handleBitcoinCashUriLegacyAddress(data: string): void {\n    this.logger.debug('Incoming-data: Bitcoin Cash URI with legacy address');\n    const coin = Coin.BCH;\n    let parsed = this.bwcProvider\n      .getBitcore()\n      .URI(data.replace(/^bitcoincash:/, 'bitcoin:'));\n\n    let oldAddr = parsed.address ? parsed.address.toString() : '';\n    if (!oldAddr)\n      this.logger.error('Could not parse Bitcoin Cash legacy address');\n\n    let a = this.bwcProvider\n      .getBitcore()\n      .Address(oldAddr)\n      .toObject();\n    let address = this.bwcProvider\n      .getBitcoreCash()\n      .Address.fromObject(a)\n      .toString();\n    let message = parsed.message;\n    let amount = parsed.amount ? parsed.amount : '';\n\n    // Translate address\n    this.logger.warn('Legacy Bitcoin Address transalated to: ' + address);\n    if (parsed.r) this.goToPayPro(data, coin);\n    else this.goSend(address, amount, message, coin);\n  }\n\n  private handlePlainUrl(data: string): void {\n    this.logger.debug('Incoming-data: Plain URL');\n    data = this.sanitizeUri(data);\n    this.showMenu({\n      data,\n      type: 'url'\n    });\n  }\n\n  private handlePlainBitcoinAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Bitcoin plain address');\n    const coin = Coin.BTC;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'bitcoinAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainSafecoinAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Safecoin plain address');\n    const coin = Coin.SAFE;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'safecoinAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainBitcoinzAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: BitcoinZ plain address');\n    const coin = Coin.BTCZ;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'bitcoinzAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainZclassicAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Zclassic plain address');\n    const coin = Coin.ZCL;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'zclassicAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainAnonymousAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Anonymous plain address');\n    const coin = Coin.ANON;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'anonymousAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainZelcashAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Zelcash plain address');\n    const coin = Coin.ZEL;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'zelcashAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainRavencoinAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Ravencoin plain address');\n    const coin = Coin.RVN;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'ravencoinAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n  private handlePlainLitecoinAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Litecoin plain address');\n    const coin = Coin.LTC;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'litecoinAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n\n  private handlePlainBitcoinCashAddress(\n    data: string,\n    redirParams?: RedirParams\n  ): void {\n    this.logger.debug('Incoming-data: Bitcoin Cash plain address');\n    const coin = Coin.BCH;\n    if (redirParams && redirParams.activePage === 'ScanPage') {\n      this.showMenu({\n        data,\n        type: 'bitcoinAddress',\n        coin\n      });\n    } else if (redirParams && redirParams.amount) {\n      this.goSend(data, redirParams.amount, '', coin);\n    } else {\n      this.goToAmountPage(data, coin);\n    }\n  }\n\n  private goToImportByPrivateKey(data: string): void {\n    this.logger.debug('Incoming-data (redirect): QR code export feature');\n\n    let stateParams = { code: data, fromScan: true };\n    let nextView = {\n      name: 'ImportWalletPage',\n      params: stateParams\n    };\n    this.events.publish('IncomingDataRedir', nextView);\n  }\n\n  private goToJoinWallet(data: string): void {\n    this.logger.debug('Incoming-data (redirect): Code to join to a wallet');\n    if (this.isValidJoinCode(data)) {\n      let stateParams = { url: data, fromScan: true };\n      let nextView = {\n        name: 'JoinWalletPage',\n        params: stateParams\n      };\n      this.events.publish('IncomingDataRedir', nextView);\n    } else if (this.isValidJoinLegacyCode(data)) {\n      let stateParams = { url: data, fromScan: true };\n      let nextView = {\n        name: 'JoinWalletPage',\n        params: stateParams\n      };\n      this.events.publish('IncomingDataRedir', nextView);\n    } else {\n      this.logger.error('Incoming-data: Invalid code to join to a wallet');\n    }\n  }\n\n  private goToBitPayCard(data: string): void {\n    this.logger.debug('Incoming-data (redirect): BitPay Card URL');\n\n    // Disable BitPay Card\n    if (!this.appProvider.info._enabledExtensions.debitcard) {\n      this.logger.warn('BitPay Card has been disabled for this build');\n      return;\n    }\n\n    let secret = this.getParameterByName('secret', data);\n    let email = this.getParameterByName('email', data);\n    let otp = this.getParameterByName('otp', data);\n    let reason = this.getParameterByName('r', data);\n    switch (reason) {\n      default:\n      case '0':\n        /* For BitPay card binding */\n        let stateParams = { secret, email, otp };\n        let nextView = {\n          name: 'BitPayCardIntroPage',\n          params: stateParams\n        };\n        this.events.publish('IncomingDataRedir', nextView);\n        break;\n    }\n  }\n\n  private goToCoinbase(data: string): void {\n    this.logger.debug('Incoming-data (redirect): Coinbase URL');\n\n    let code = this.getParameterByName('code', data);\n    let stateParams = { code };\n    let nextView = {\n      name: 'CoinbasePage',\n      params: stateParams\n    };\n    this.events.publish('IncomingDataRedir', nextView);\n  }\n\n  private goToGlidera(data: string): void {\n    this.logger.debug('Incoming-data (redirect): Glidera URL');\n\n    let code = this.getParameterByName('code', data);\n    let stateParams = { code };\n    let nextView = {\n      name: 'GlideraPage',\n      params: stateParams\n    };\n    this.events.publish('IncomingDataRedir', nextView);\n  }\n\n  public redir(data: string, redirParams?: RedirParams): boolean {\n    // Payment Protocol with non-backwards-compatible request\n    if (this.isValidPayProNonBackwardsCompatible(data)) {\n      this.handlePayProNonBackwardsCompatible(data);\n      return true;\n\n      // Bitcoin  URI\n    } else if (this.isValidBitcoinUri(data)) {\n      this.handleBitcoinUri(data, redirParams);\n      return true;\n\n      // Safecoin  URI\n    } else if (this.isValidSafecoinUri(data)) {\n      this.handleSafecoinUri(data, redirParams);\n      return true;\n\n      // Bitcoinz  URI\n    } else if (this.isValidBitcoinzUri(data)) {\n      this.handleBitcoinzUri(data, redirParams);\n      return true;\n\n      // Zclassic URI\n    } else if (this.isValidZclassicUri(data)) {\n      this.handleZclassicUri(data, redirParams);\n      return true;\n\n      // Anonymous URI\n    } else if (this.isValidAnonymousUri(data)) {\n      this.handleAnonymousUri(data, redirParams);\n      return true;\n\n      // Zelcash URI\n    } else if (this.isValidZelcashUri(data)) {\n      this.handleZelcashUri(data, redirParams);\n      return true;\n\n      // Ravencoin URI\n    } else if (this.isValidRavencoinUri(data)) {\n      this.handleRavencoinUri(data, redirParams);\n      return true;\n\n      // Litecoin  URI\n    } else if (this.isValidLitecoinUri(data)) {\n      this.handleLitecoinUri(data, redirParams);\n      return true;\n\n      // Bitcoin Cash URI\n    } else if (this.isValidBitcoinCashUri(data)) {\n      this.handleBitcoinCashUri(data, redirParams);\n      return true;\n\n      // Bitcoin Cash URI using Bitcoin Core legacy address\n    } else if (this.isValidBitcoinCashUriWithLegacyAddress(data)) {\n      this.handleBitcoinCashUriLegacyAddress(data);\n      return true;\n\n      // Plain URL\n    } else if (this.isValidPlainUrl(data)) {\n      this.handlePlainUrl(data);\n      return true;\n\n      // Plain Address (Bitcoin)\n    } else if (this.isValidBitcoinAddress(data)) {\n      this.handlePlainBitcoinAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Safecoin)\n    } else if (this.isValidSafecoinAddress(data)) {\n      this.handlePlainSafecoinAddress(data, redirParams);\n      return true;\n\n      // Plain Address (BitcoinZ)\n    } else if (this.isValidBitcoinzAddress(data)) {\n      this.handlePlainBitcoinzAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Zclassic)\n    } else if (this.isValidZclassicAddress(data)) {\n      this.handlePlainZclassicAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Anonymous)\n    } else if (this.isValidAnonymousAddress(data)) {\n      this.handlePlainAnonymousAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Zelcash)\n    } else if (this.isValidZelcashAddress(data)) {\n      this.handlePlainZelcashAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Ravencoin)\n    } else if (this.isValidRavencoinAddress(data)) {\n      this.handlePlainRavencoinAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Litecoin)\n    } else if (this.isValidLitecoinAddress(data)) {\n      this.handlePlainLitecoinAddress(data, redirParams);\n      return true;\n\n      // Plain Address (Bitcoin Cash)\n    } else if (this.isValidBitcoinCashAddress(data)) {\n      this.handlePlainBitcoinCashAddress(data, redirParams);\n      return true;\n\n      // Glidera\n    } else if (this.isValidGlideraUri(data)) {\n      this.goToGlidera(data);\n      return true;\n\n      // Coinbase\n    } else if (this.isValidCoinbaseUri(data)) {\n      this.goToCoinbase(data);\n      return true;\n\n      // BitPayCard Authentication\n    } else if (this.isValidBitPayCardUri(data)) {\n      this.goToBitPayCard(data);\n      return true;\n\n      // Join\n    } else if (this.isValidJoinCode(data) || this.isValidJoinLegacyCode(data)) {\n      this.goToJoinWallet(data);\n      return true;\n\n      // Check Private Key\n    } else if (this.isValidPrivateKey(data)) {\n      this.handlePrivateKey(data, redirParams);\n      return true;\n\n      // Import Private Key\n    } else if (this.isValidImportPrivateKey(data)) {\n      this.goToImportByPrivateKey(data);\n      return true;\n\n      // Anything else\n    } else {\n      if (redirParams && redirParams.activePage === 'ScanPage') {\n        this.logger.debug('Incoming-data: Plain text');\n        this.showMenu({\n          data,\n          type: 'text'\n        });\n        return true;\n      } else {\n        this.logger.warn('Incoming-data: Unknown information');\n        return false;\n      }\n    }\n  }\n\n  public parseData(data: string): any {\n    if (!data) return;\n    if (this.isValidPayProNonBackwardsCompatible(data)) {\n      return {\n        data,\n        type: 'PayPro',\n        title: this.translate.instant('Payment URL')\n      };\n\n      // Bitcoin  URI\n    } else if (this.isValidBitcoinUri(data)) {\n      return {\n        data,\n        type: 'BitcoinUri',\n        title: this.translate.instant('Bitcoin URI')\n      };\n\n      // Safecoin  URI\n    } else if (this.isValidSafecoinUri(data)) {\n      return {\n        data,\n        type: 'SafecoinUri',\n        title: this.translate.instant('Safecoin URI')\n      };\n\n      // BitcoinZ  URI\n    } else if (this.isValidBitcoinzUri(data)) {\n      return {\n        data,\n        type: 'BitcoinzUri',\n        title: this.translate.instant('Bitcoinz URI')\n      };\n\n      // Litecoin  URI\n    } else if (this.isValidLitecoinUri(data)) {\n      return {\n        data,\n        type: 'LitecoinUri',\n        title: this.translate.instant('Litecoin URI')\n      };\n\n      // Bitcoin Cash URI\n    } else if (this.isValidBitcoinCashUri(data)) {\n      return {\n        data,\n        type: 'BitcoinCashUri',\n        title: this.translate.instant('Bitcoin Cash URI')\n      };\n\n      // Bitcoin Cash URI using Bitcoin Core legacy address\n    } else if (this.isValidBitcoinCashUriWithLegacyAddress(data)) {\n      return {\n        data,\n        type: 'BitcoinCashUri',\n        title: this.translate.instant('Bitcoin Cash URI')\n      };\n\n      // Plain URL\n    } else if (this.isValidPlainUrl(data)) {\n      return {\n        data,\n        type: 'PlainUrl',\n        title: this.translate.instant('Plain URL')\n      };\n\n      // Plain Address (Bitcoin)\n    } else if (this.isValidBitcoinAddress(data)) {\n      return {\n        data,\n        type: 'BitcoinAddress',\n        title: this.translate.instant('Bitcoin Address')\n      };\n\n      // Plain Address (Safecoin)\n    } else if (this.isValidSafecoinAddress(data)) {\n      return {\n        data,\n        type: 'SafecoinAddress',\n        title: this.translate.instant('Safecoin Address')\n      };\n\n      // Plain Address (Bitcoinz)\n    } else if (this.isValidBitcoinzAddress(data)) {\n      return {\n        data,\n        type: 'BitcoinzAddress',\n        title: this.translate.instant('Bitcoinz Address')\n      };\n\n      // Plain Address (Zclassic)\n    } else if (this.isValidZclassicAddress(data)) {\n      return {\n        data,\n        type: 'ZclassicAddress',\n        title: this.translate.instant('Zclassic Address')\n      };\n\n      // Plain Address (Anonymous)\n    } else if (this.isValidAnonymousAddress(data)) {\n      return {\n        data,\n        type: 'AnonymousAddress',\n        title: this.translate.instant('Anonymous Address')\n      };\n\n      // Plain Address (Zelcash)\n    } else if (this.isValidZelcashAddress(data)) {\n      return {\n        data,\n        type: 'ZelcashAddress',\n        title: this.translate.instant('Zelcash Address')\n      };\n\n      // Plain Address (Ravencoin)\n    } else if (this.isValidRavencoinAddress(data)) {\n      return {\n        data,\n        type: 'RavencoinAddress',\n        title: this.translate.instant('Ravencoin Address')\n      };\n\n      // Plain Address (Litecoin)\n    } else if (this.isValidLitecoinAddress(data)) {\n      return {\n        data,\n        type: 'LitecoinAddress',\n        title: this.translate.instant('Litecoin Address')\n      };\n\n      // Plain Address (Bitcoin Cash)\n    } else if (this.isValidBitcoinCashAddress(data)) {\n      return {\n        data,\n        type: 'BitcoinCashAddress',\n        title: this.translate.instant('Bitcoin Cash Address')\n      };\n\n      // Glidera\n    } else if (this.isValidGlideraUri(data)) {\n      return {\n        data,\n        type: 'Glidera',\n        title: 'Glidera URI'\n      };\n\n      // Coinbase\n    } else if (this.isValidCoinbaseUri(data)) {\n      return {\n        data,\n        type: 'Coinbase',\n        title: 'Coinbase URI'\n      };\n\n      // BitPayCard Authentication\n    } else if (this.isValidBitPayCardUri(data)) {\n      return {\n        data,\n        type: 'BitPayCard',\n        title: this.translate.instant('BitPay Card URI')\n      };\n\n      // Join\n    } else if (this.isValidJoinCode(data) || this.isValidJoinLegacyCode(data)) {\n      return {\n        data,\n        type: 'JoinWallet',\n        title: this.translate.instant('Invitation Code')\n      };\n\n      // Check Private Key\n    } else if (this.isValidPrivateKey(data)) {\n      return {\n        data,\n        type: 'PrivateKey',\n        title: this.translate.instant('Private Key')\n      };\n\n      // Import Private Key\n    } else if (this.isValidImportPrivateKey(data)) {\n      return {\n        data,\n        type: 'ImportPrivateKey',\n        title: this.translate.instant('Import Words')\n      };\n\n      // Anything else\n    } else {\n      return;\n    }\n  }\n\n  private sanitizeUri(data): string {\n    // Fixes when a region uses comma to separate decimals\n    let regex = /[\\?\\&]amount=(\\d+([\\,\\.]\\d+)?)/i;\n    let match = regex.exec(data);\n    if (!match || match.length === 0) {\n      return data;\n    }\n    let value = match[0].replace(',', '.');\n    let newUri = data.replace(regex, value);\n\n    // mobile devices, uris like copay://glidera\n    newUri.replace('://', ':');\n\n    return newUri;\n  }\n\n  private getParameterByName(name: string, url: string): string {\n    if (!url) return undefined;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  private checkPrivateKey(privateKey: string): boolean {\n    // Check if it is a Transaction id to prevent errors\n    let isTxId: boolean = this.checkTxId(privateKey);\n    if (isTxId) return false;\n//    debugger;\n    try {\n      this.bwcProvider.getBitcore().PrivateKey(privateKey, 'livenet');\n    } catch (err) {\n      try {\n        this.bwcProvider.getBitcoreSafe().PrivateKey(privateKey, 'livenet');\n      } catch (err) {\n        try {\n          this.bwcProvider.getBitcoreBtcz().PrivateKey(privateKey, 'livenet'); // BTCZ=ZCL=ZEL\n        } catch (err) {\n          try {\n            this.bwcProvider.getBitcoreAnon().PrivateKey(privateKey, 'livenet');\n          } catch (err) {\n          try {\n            this.bwcProvider.getBitcoreLtc().PrivateKey(privateKey, 'livenet');\n          } catch (err) {\n            try {\n              this.bwcProvider.getBitcoreRvn().PrivateKey(privateKey, 'livenet');\n            } catch (err) {\n              return false;\n            }\n            }\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  private checkTxId(data: string): boolean {\n    let IsTxIdregex = new RegExp(/[a-fA-F0-9]{64}/);\n    return !!IsTxIdregex.exec(data);\n  }\n\n  private goSend(\n    addr: string,\n    amount: string,\n    message: string,\n    coin: Coin\n  ): void {\n    if (amount) {\n      let stateParams = {\n        amount,\n        toAddress: addr,\n        description: message,\n        coin\n      };\n      let nextView = {\n        name: 'ConfirmPage',\n        params: stateParams\n      };\n      this.events.publish('IncomingDataRedir', nextView);\n    } else {\n      let stateParams = {\n        toAddress: addr,\n        description: message,\n        coin\n      };\n      let nextView = {\n        name: 'AmountPage',\n        params: stateParams\n      };\n      this.events.publish('IncomingDataRedir', nextView);\n    }\n  }\n\n  private goToAmountPage(toAddress: string, coin: Coin): void {\n    let stateParams = {\n      toAddress,\n      coin\n    };\n    let nextView = {\n      name: 'AmountPage',\n      params: stateParams\n    };\n    this.events.publish('IncomingDataRedir', nextView);\n  }\n\n  private goToPayPro(url: string, coin: Coin): void {\n    this.payproProvider\n      .getPayProDetails(url, coin)\n      .then(details => {\n        this.handlePayPro(details, coin);\n      })\n      .catch(err => {\n        this.logger.error(err);\n      });\n  }\n\n  private handlePayPro(payProDetails, coin?: Coin): void {\n    if (!payProDetails) {\n      this.logger.error('No wallets available');\n      return;\n    }\n\n    const stateParams = {\n      amount: payProDetails.amount,\n      toAddress: payProDetails.toAddress,\n      description: payProDetails.memo,\n      paypro: payProDetails,\n      coin,\n      requiredFeeRate: payProDetails.requiredFeeRate\n        ? Math.ceil(payProDetails.requiredFeeRate * 1024)\n        : undefined\n    };\n    const nextView = {\n      name: 'ConfirmPage',\n      params: stateParams\n    };\n    this.events.publish('IncomingDataRedir', nextView);\n  }\n\n  public getPayProDetails(data: string): Promise<any> {\n    let coin: string = data.indexOf('bitcoincash') === 0\n               ? Coin.BCH \n                : data.indexOf('bitcoinz') === 0\n                 ? Coin.BTCZ \n                  : data.indexOf('safecoin') === 0\n                   ? Coin.SAFE \n                    : data.indexOf('zclassic') === 0\n                     ? Coin.ZCL \n                    : data.indexOf('anonymous') === 0\n                     ? Coin.ANON \n                    : data.indexOf('zelcash') === 0\n                     ? Coin.ZEL \n                      : data.indexOf('ravencoin') === 0\n                       ? Coin.RVN \n                        : data.indexOf('litecoin') === 0\n                         ? Coin.LTC \n                          : Coin.BTC;\n    debugger;\n    if ((coin == Coin.BTC) || (coin == Coin.BCH)) { \n        data = decodeURIComponent(data.replace(/bitcoin(cash)?:\\?r=/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else if (coin == Coin.SAFE){\n        data = decodeURIComponent(data.replace(/safecoin/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else if (coin == Coin.BTCZ){\n        data = decodeURIComponent(data.replace(/bitcoinz/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else if (coin == Coin.ZCL){\n        data = decodeURIComponent(data.replace(/zclassic/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else if (coin == Coin.ANON){\n        data = decodeURIComponent(data.replace(/anonymous/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else if (coin == Coin.ZEL){\n        data = decodeURIComponent(data.replace(/zelcash/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else if (coin == Coin.RVN){\n        data = decodeURIComponent(data.replace(/ravencoin/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    } else {\n        data = decodeURIComponent(data.replace(/litecoin/, ''));\n        let disableLoader = true;\n        return this.payproProvider.getPayProDetails(data, coin, disableLoader);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/incoming-data/incoming-data.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\nimport { TabsPage } from '../../tabs/tabs';\n\nimport { EmailNotificationsProvider } from '../../../providers/email-notifications/email-notifications';\nimport { ExternalLinkProvider } from '../../../providers/external-link/external-link';\nimport { PersistenceProvider } from '../../../providers/persistence/persistence';\n\n@Component({\n  selector: 'page-disclaimer',\n  templateUrl: 'disclaimer.html'\n})\nexport class DisclaimerPage {\n  public accepted;\n  public terms;\n  public hasEmail: boolean;\n\n  constructor(\n    public navCtrl: NavController,\n    private logger: Logger,\n    private emailProvider: EmailNotificationsProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private persistenceProvider: PersistenceProvider,\n    private translate: TranslateService\n  ) {\n    this.hasEmail = this.emailProvider.getEmailIfEnabled() ? true : false;\n    this.accepted = {\n      first: false,\n      second: false,\n      third: this.hasEmail ? false : true\n    };\n    this.terms = {\n      accepted: false\n    };\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad DisclaimerPage');\n  }\n\n  selectTerms() {\n    this.terms.accepted = !this.terms.accepted;\n  }\n\n  openDisclaimer() {\n    let url = 'https://safecoin.org/copay_about';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('View Wallet Terms of Use');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  openPrivacyPolicy() {\n    let url = 'https://safecoin.org/copay_privacy';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('View Privacy Policy');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  confirm() {\n  //  this.persistenceProvider.setEmailLawCompliance('accepted');\n    this.persistenceProvider.setDisclaimerAccepted();\n    this.navCtrl.setRoot(TabsPage);\n    this.navCtrl.popToRoot({ animate: false });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/onboarding/disclaimer/disclaimer.ts","import { Component, VERSION, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ZXingScannerComponent } from '@zxing/ngx-scanner';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { IncomingDataProvider } from '../../providers/incoming-data/incoming-data';\nimport { PlatformProvider } from '../../providers/platform/platform';\nimport { ScanProvider } from '../../providers/scan/scan';\n\n// pages\nimport { PaperWalletPage } from '../paper-wallet/paper-wallet';\nimport { AmountPage } from '../send/amount/amount';\nimport { AddressbookAddPage } from '../settings/addressbook/add/add';\n\nimport env from '../../environments';\nimport { WalletTabsProvider } from '../wallet-tabs/wallet-tabs.provider';\n\n@Component({\n  selector: 'page-scan',\n  templateUrl: 'scan.html',\n  providers: [ScanProvider]\n})\nexport class ScanPage {\n  ngVersion = VERSION.full;\n\n  @ViewChild('scanner')\n  scanner: ZXingScannerComponent;\n\n  hasCameras = false;\n  hasPermission: boolean;\n  qrResultString: string;\n\n  availableDevices: MediaDeviceInfo[];\n  selectedDevice: MediaDeviceInfo;\n\n  public browserScanEnabled: boolean;\n  private scannerIsAvailable: boolean;\n  private scannerHasPermission: boolean;\n  private scannerIsDenied: boolean;\n  private scannerIsRestricted: boolean;\n  public canEnableLight: boolean;\n  public canChangeCamera: boolean;\n  public lightActive: boolean;\n  public cameraToggleActive: boolean;\n  public scannerStates;\n  public canOpenSettings: boolean;\n  public currentState: string;\n  public tabBarElement;\n  public isCordova: boolean;\n  public isCameraSelected: boolean;\n  public fromAddressbook: boolean;\n  public fromImport: boolean;\n  public fromJoin: boolean;\n  public fromSend: boolean;\n\n  constructor(\n    private navCtrl: NavController,\n    private scanProvider: ScanProvider,\n    private platform: PlatformProvider,\n    private incomingDataProvider: IncomingDataProvider,\n    private events: Events,\n    private externalLinkProvider: ExternalLinkProvider,\n    private logger: Logger,\n    public translate: TranslateService,\n    private navParams: NavParams,\n    private walletTabsProvider: WalletTabsProvider\n  ) {\n    this.isCameraSelected = false;\n    this.browserScanEnabled = false;\n    this.canEnableLight = true;\n    this.canChangeCamera = true;\n    this.scannerStates = {\n      unauthorized: 'unauthorized',\n      denied: 'denied',\n      unavailable: 'unavailable',\n      loading: 'loading',\n      visible: 'visible'\n    };\n    this.scannerIsAvailable = true;\n    this.scannerHasPermission = false;\n    this.scannerIsDenied = false;\n    this.scannerIsRestricted = false;\n    this.canOpenSettings = false;\n    this.isCordova = this.platform.isCordova;\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad ScanPage');\n  }\n\n  ionViewWillLeave() {\n    this.events.unsubscribe('finishIncomingDataMenuEvent');\n    this.events.unsubscribe('scannerServiceInitialized');\n    if (!this.isCordova) {\n      this.scanner.resetScan();\n    } else {\n      this.cameraToggleActive = false;\n      this.lightActive = false;\n      this.scanProvider.frontCameraEnabled = false;\n      this.scanProvider.deactivate();\n    }\n  }\n\n  ionViewWillEnter() {\n    this.fromAddressbook = this.navParams.data.fromAddressbook;\n    this.fromImport = this.navParams.data.fromImport;\n    this.fromJoin = this.navParams.data.fromJoin;\n    this.fromSend =\n      this.walletTabsProvider.getFromPage() &&\n      this.walletTabsProvider.getFromPage().fromSend;\n\n    if (!env.activateScanner) {\n      // test scanner visibility in E2E mode\n      this.selectedDevice = true as any;\n      this.hasPermission = true;\n      return;\n    }\n\n    this.events.subscribe('finishIncomingDataMenuEvent', data => {\n      if (!this.isCordova) {\n        this.scanner.resetScan();\n      }\n      switch (data.redirTo) {\n        case 'AmountPage':\n          this.sendPaymentToAddress(data.value, data.coin);\n          break;\n        case 'AddressBookPage':\n          this.addToAddressBook(data.value);\n          break;\n        case 'OpenExternalLink':\n          this.goToUrl(data.value);\n          break;\n        case 'PaperWalletPage':\n          this.scanPaperWallet(data.value);\n          break;\n        default:\n          if (this.isCordova) {\n            this.activate();\n          } else if (this.isCameraSelected) {\n            this.scanner.startScan(this.selectedDevice);\n          }\n      }\n    });\n\n    if (!this.isCordova) {\n      if (!this.isCameraSelected) {\n        this.loadCamera();\n      } else {\n        this.scanner.startScan(this.selectedDevice);\n      }\n    } else {\n      // try initializing and refreshing status any time the view is entered\n      if (this.scannerHasPermission) {\n        this.activate();\n      } else {\n        if (!this.scanProvider.isInitialized()) {\n          this.scanProvider.gentleInitialize().then(() => {\n            this.authorize();\n          });\n        } else {\n          this.authorize();\n        }\n      }\n      this.events.subscribe('scannerServiceInitialized', () => {\n        this.logger.debug(\n          'Scanner initialization finished, reinitializing scan view...'\n        );\n        this._refreshScanView();\n      });\n    }\n  }\n\n  public loadCamera() {\n    this.scanner.camerasFound.subscribe((devices: MediaDeviceInfo[]) => {\n      this.hasCameras = true;\n      this.availableDevices = devices;\n      this.onDeviceSelectChange();\n    });\n\n    this.scanner.camerasNotFound.subscribe(() => {\n      this.logger.error(\n        'An error has occurred when trying to enumerate your video-stream-enabled devices.'\n      );\n    });\n    this.scanner.askForPermission().then((answer: boolean) => {\n      this.hasPermission = answer;\n    });\n  }\n\n  private goToUrl(url: string): void {\n    this.externalLinkProvider.open(url);\n  }\n\n  private sendPaymentToAddress(bitcoinAddress: string, coin: string): void {\n    this.navCtrl.push(AmountPage, { toAddress: bitcoinAddress, coin });\n  }\n\n  private addToAddressBook(bitcoinAddress: string): void {\n    this.navCtrl.push(AddressbookAddPage, { addressbookEntry: bitcoinAddress });\n  }\n\n  private scanPaperWallet(privateKey: string) {\n    this.navCtrl.push(PaperWalletPage, { privateKey });\n  }\n\n  private updateCapabilities(): void {\n    let capabilities = this.scanProvider.getCapabilities();\n    this.scannerIsAvailable = capabilities.isAvailable;\n    this.scannerHasPermission = capabilities.hasPermission;\n    this.scannerIsDenied = capabilities.isDenied;\n    this.scannerIsRestricted = capabilities.isRestricted;\n    this.canEnableLight = capabilities.canEnableLight;\n    this.canChangeCamera = capabilities.canChangeCamera;\n    this.canOpenSettings = capabilities.canOpenSettings;\n  }\n\n  private handleCapabilities(): void {\n    // always update the view\n    if (!this.scanProvider.isInitialized()) {\n      this.currentState = this.scannerStates.loading;\n    } else if (!this.scannerIsAvailable) {\n      this.currentState = this.scannerStates.unavailable;\n    } else if (this.scannerIsDenied) {\n      this.currentState = this.scannerStates.denied;\n    } else if (this.scannerIsRestricted) {\n      this.currentState = this.scannerStates.denied;\n    } else if (!this.scannerHasPermission) {\n      this.currentState = this.scannerStates.unauthorized;\n    }\n    this.logger.debug('Scan view state set to: ' + this.currentState);\n  }\n\n  private _refreshScanView(): void {\n    this.updateCapabilities();\n    this.handleCapabilities();\n    if (this.scannerHasPermission) {\n      this.activate();\n    }\n  }\n\n  public activate(): void {\n    this.scanProvider.activate().then(() => {\n      this.updateCapabilities();\n      this.handleCapabilities();\n      this.logger.debug('Scanner activated, setting to visible...');\n      this.currentState = this.scannerStates.visible;\n\n      // resume preview if paused\n      this.scanProvider.resumePreview();\n\n      this.scanProvider.scan().then((contents: string) => {\n        this.scanProvider.pausePreview();\n        this.handleSuccessfulScan(contents);\n      });\n    });\n  }\n\n  private handleSuccessfulScan(contents: string): void {\n    this.logger.debug('Scan returned: \"' + contents + '\"');\n    if (this.fromAddressbook) {\n      this.events.publish('update:address', { value: contents });\n      this.navCtrl.pop();\n    } else if (this.fromImport) {\n      this.events.publish('update:words', { value: contents });\n      this.navCtrl.pop();\n    } else if (this.fromJoin) {\n      this.events.publish('update:invitationCode', { value: contents });\n      this.navCtrl.pop();\n    } else if (this.fromSend) {\n      this.events.publish('update:address', { value: contents });\n      this.close();\n    } else {\n      const redirParms = { activePage: 'ScanPage' };\n      this.incomingDataProvider.redir(contents, redirParms);\n    }\n  }\n\n  public authorize(): void {\n    this.scanProvider.initialize().then(() => {\n      this._refreshScanView();\n    });\n  }\n\n  public attemptToReactivate(): void {\n    this.scanProvider.reinitialize();\n  }\n\n  public openSettings(): void {\n    this.scanProvider.openSettings();\n  }\n\n  public toggleLight(): void {\n    this.scanProvider\n      .toggleLight()\n      .then(resp => {\n        this.lightActive = resp;\n      })\n      .catch(error => {\n        this.logger.warn('scanner error: ' + error);\n      });\n  }\n\n  public toggleCamera(): void {\n    this.scanProvider\n      .toggleCamera()\n      .then(resp => {\n        this.cameraToggleActive = resp;\n        this.lightActive = false;\n      })\n      .catch(error => {\n        this.logger.warn('scanner error: ' + error);\n      });\n  }\n\n  handleQrCodeResult(resultString: string) {\n    this.scanner.resetScan();\n    setTimeout(() => {\n      this.handleSuccessfulScan(resultString);\n    }, 0);\n  }\n\n  onDeviceSelectChange() {\n    if (!this.isCameraSelected) {\n      for (const device of this.availableDevices) {\n        if (device.kind == 'videoinput') {\n          this.selectedDevice = this.scanner.getDeviceById(device.deviceId);\n          this.isCameraSelected = true;\n          break;\n        }\n      }\n    }\n  }\n\n  public close() {\n    this.walletTabsProvider.getTabNav()\n      ? this.events.publish('ExitScan')\n      : this.navCtrl.parent.select(0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/scan/scan.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavParams, ViewController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-finish',\n  templateUrl: 'finish.html'\n})\nexport class FinishModalPage {\n  public finishText: string;\n  public finishComment: string;\n  public cssClass: string; // success, warning, danger\n\n  constructor(\n    private viewCtrl: ViewController,\n    private navParams: NavParams,\n    private translate: TranslateService\n  ) {\n    this.finishText =\n      this.navParams.data.finishText || this.navParams.data.finishText == ''\n        ? this.navParams.data.finishText\n        : this.translate.instant('Payment Sent');\n    this.finishComment = this.navParams.data.finishComment\n      ? this.navParams.data.finishComment\n      : '';\n    this.cssClass = this.navParams.data.cssClass\n      ? this.navParams.data.cssClass\n      : 'success';\n  }\n\n  public close(): void {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/finish/finish.ts","import { Component } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n  Validators\n} from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  AlertController,\n  Events,\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport { isEqual } from 'lodash';\n\n// providers\nimport { AddressBookProvider } from '../../../../providers/address-book/address-book';\nimport { AddressProvider } from '../../../../providers/address/address';\nimport { BwcProvider } from '../../../../providers/bwc/bwc';\nimport { Logger } from '../../../../providers/logger/logger';\n\n// validators\nimport { AddressValidator } from '../../../../validators/address';\nimport { ScanPage } from '../../../scan/scan';\n\n@Component({\n  selector: 'page-addressbook-add',\n  templateUrl: 'add.html'\n})\nexport class AddressbookAddPage {\n  private addressBookAdd: FormGroup;\n\n  public submitAttempt: boolean = false;\n  public isCordova: boolean;\n  private last_addr: string = '';\n  private plug: string = ''; \n  private COINS_LIST: string[] = [\n    'Safecoin (SAFE)',\n    'BitcoinZ (BTCZ)',\n    'Zelcash (ZEL)',\n    'Anonymous (ANON)',\n    'Zclassic (ZCL)',\n    'Ravencoin (RVN)',\n    'Litecoin (LTC)',\n    'Bitcoin (BTC)',\n    'Bitcoin Cash (BCH)'\n  ];\n  public coinslist: string[];\n  public okText: string;\n  public cancelText: string;\n//  private selectedcoin: string;\n//  private CoinsList: string[];\n  private bitcore;\n  private bitcoreCash;\n  private bitcoreSafe;\n  private bitcoreBtcz;\n  private bitcoreLtc;\n  private bitcoreZel;\n  private bitcoreZcl;\n  private bitcoreAnon;\n  private bitcoreRvn;\n \n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private events: Events,\n    private alertCtrl: AlertController,\n    private ab: AddressBookProvider,\n    private addressProvider: AddressProvider,\n    private formBuilder: FormBuilder,\n    private translate: TranslateService,\n    private bwcProvider: BwcProvider,\n    private logger: Logger\n  ) {                                                                                                                                                \t\t\t\t\n      this.bitcore = this.bwcProvider.getBitcore();\n      this.bitcoreCash = this.bwcProvider.getBitcoreCash();\n      this.bitcoreSafe = this.bwcProvider.getBitcoreSafe();\n      this.bitcoreBtcz = this.bwcProvider.getBitcoreBtcz();\n      this.bitcoreZel = this.bwcProvider.getBitcoreZel();\n      this.bitcoreZcl = this.bwcProvider.getBitcoreZcl();\n      this.bitcoreAnon = this.bwcProvider.getBitcoreAnon();\n      this.bitcoreRvn = this.bwcProvider.getBitcoreRvn();\n      this.bitcoreLtc = this.bwcProvider.getBitcoreLtc();\n      this.coinslist = this.COINS_LIST;\n      this.okText = this.translate.instant('Ok');\n      this.cancelText = this.translate.instant('Cancel');\n      this.addressBookAdd = this.formBuilder.group({\n      name: [\n        '',\n        Validators.compose([Validators.minLength(1), Validators.required])\n      ],\n      email: ['', this.emailOrEmpty],\n      address: [\n        '',\n        Validators.compose([\n          Validators.required,\n          new AddressValidator(this.addressProvider).isValid\n        ])\n      ],\n      note: [''],\n      network: [''],\n      coin: ['', Validators.required]\n/*      coin: [\n        null,\n        Validators.compose([\n          Validators.required,\n          new AddressValidator(this.addressProvider).getCoin\n        ])\n      ]*/\n    });\n    if (this.plug) this.plug = ' ';\n    this.addressBookAdd.controls['coin'].setValue('');\n    this.coinSet('defaultlist');\n    if (this.navParams.data.addressbookEntry) {\n      this.addressBookAdd.controls['address'].setValue(\n        this.navParams.data.addressbookEntry\n      );\n    }\n    this.events.subscribe('update:address', data => {\n      let address = data.value.replace(/^bitcoin(cash)?:|safecoin:|bitcoinz:|zelcash:|zclassic:|anonymous:|revencoin:|litecoin:/, '');\n      this.addressBookAdd.controls['address'].setValue(address);\n    });\n  }\n  ngOnInit() {\n     this.addressBookAdd.get('name').setValidators([Validators.required]);\n    }\n\n  private setCoins(address: string): void {\n    let CoinsList:string[] = new Array();\n//    if (this.coinslist != this.last_coins ) {\n      let tmp_i: number = -1;\n      try {\n        new this.bitcoreSafe.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[0];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreBtcz.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[1];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreZel.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[2];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreAnon.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[3];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreZcl.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[4];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreRvn.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[5];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreLtc.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[6];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcore.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[7];\n      } catch (e) { this.plug = ' ';}\n      try {\n        new this.bitcoreCash.Address(address);\n        tmp_i++; CoinsList[tmp_i] = this.COINS_LIST[8];\n      } catch (e) { this.plug = ' ';}\n     if (tmp_i >= 0 && !(isEqual(this.coinslist, CoinsList))) {\n       this.coinslist = new Array(tmp_i + 1); \n       for (var iii = 0; iii <= tmp_i; iii++) {\n         this.coinslist[iii] = CoinsList[iii];\n       }\n       this.addressBookAdd.controls['coin'].setValue(this.coinslist[0]);\n//       this.last_coin = this.addressBookAdd.controls['coin'].value;\n     }\n//     if (this.last_coin != this.addressBookAdd.controls['coin'].value) this.last_coin = this.addressBookAdd.controls['coin'].value;\n//   }\n}\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad AddressbookAddPage');\n  }\n\n  ngOnDestroy() {\n    this.events.unsubscribe('update:address');\n  }\n\n  private emailOrEmpty(control: AbstractControl): ValidationErrors | null {\n    return control.value === '' ? null : Validators.email(control);\n  }\n\n  private coinSet(address: string): boolean {\n  if (address && address == 'defaultlist' && this.last_addr != '') {\n    this.last_addr = '';\n    this.coinslist = this.COINS_LIST;\n    this.addressBookAdd.controls['coin'].setValue('');\n  } else if (address && address == '' && this.last_addr != '') {\n    this.last_addr = '';\n    this.coinslist = this.COINS_LIST;\n    this.addressBookAdd.controls['coin'].setValue('');\n  } else if (address && address != 'defaultlist' && address != 'set' && address != '' && \n             address != this.last_addr && this.addressBookAdd.controls.address.status == 'VALID') {\n\n\n\n\n    this.setCoins(address);\n    this.last_addr = address;\n    this.addressBookAdd.controls['coin'].setValue(this.addressBookAdd.controls['coin'].value);\n  } else if (address && address != 'defaultlist' && address != 'set' && \n             this.addressBookAdd.controls.address.status == 'VALID'){\n    this.last_addr = address;\n  } else if (address == 'set'){\n    this.addressBookAdd.controls['coin'].setValue(this.addressBookAdd.controls['coin'].value);\n  }\n    return true;\n  }\n\n  public save(): void {\n\n  this.submitAttempt = true;\n    if (this.addressBookAdd.valid) {\n      this.ab\n        .add(this.addressBookAdd.value)\n        .then(() => {\n          this.navCtrl.pop();\n          this.submitAttempt = false;\n        })\n        .catch(err => {\n          let opts = {\n            title: err,\n            buttons: [\n              {\n                text: 'OK',\n                handler: () => {\n                  this.navCtrl.pop();\n                }\n              }\n            ]\n          };\n          this.alertCtrl.create(opts).present();\n          this.submitAttempt = false;\n        });\n    } else {\n      let opts = {\n        title: 'Error',\n        message: 'Could not save the contact',\n        buttons: [\n          {\n            text: 'OK',\n            handler: () => {\n              this.navCtrl.pop();\n            }\n          }\n        ]\n      };\n      this.alertCtrl.create(opts).present();\n      this.submitAttempt = false;\n    }\n  }\n\n  public openScanner(): void {\n    this.navCtrl.push(ScanPage, { fromAddressbook: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/addressbook/add/add.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TimeProvider {\n  constructor() {}\n\n  public withinSameMonth(time1: number, time2: number): boolean {\n    if (!time1 || !time2) return false;\n    let date1 = new Date(time1);\n    let date2 = new Date(time2);\n    return this.getMonthYear(date1) === this.getMonthYear(date2);\n  }\n\n  public withinPastDay(time): boolean {\n    let now = new Date();\n    let date = new Date(time);\n    return now.getTime() - date.getTime() < 1000 * 60 * 60 * 24;\n  }\n\n  public isDateInCurrentMonth(date: Date): boolean {\n    let now = new Date();\n    return this.getMonthYear(now) === this.getMonthYear(date);\n  }\n\n  public getMonthYear(date: Date): string {\n    return `${date.getMonth()}-${date.getFullYear()}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/time/time.ts","import { Component } from '@angular/core';\nimport { AlertController, NavController, NavParams } from 'ionic-angular';\n\n// pages\nimport { BackupGamePage } from '../backup-game/backup-game';\n\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\n\n@Component({\n  selector: 'page-backup-warning',\n  templateUrl: 'backup-warning.html'\n})\nexport class BackupWarningPage {\n  public currentIndex: number;\n  private walletId: string;\n  private fromOnboarding: boolean;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public alertCtrl: AlertController,\n    public actionSheetProvider: ActionSheetProvider\n  ) {\n    this.walletId = this.navParams.get('walletId');\n    this.fromOnboarding = this.navParams.get('fromOnboarding');\n  }\n\n  public openWarningModal(): void {\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'backup-warning'\n    );\n    infoSheet.present();\n    infoSheet.onDidDismiss(option => {\n      if (option) {\n        this.navCtrl.push(BackupGamePage, {\n          walletId: this.walletId,\n          fromOnboarding: this.fromOnboarding\n        });\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/backup/backup-warning/backup-warning.ts","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/privatekey.js\n// module id = 286\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/privatekey.js\n// module id = 287\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/privatekey.js\n// module id = 289\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/privatekey.js\n// module id = 290\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/privatekey.js\n// module id = 291\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/privatekey.js\n// module id = 292\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\n\nvar BaseBitcore =require('bitcore-lib'); \nvar Point = BaseBitcore.crypto.Point;\nvar Random = BaseBitcore.crypto.Random;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\n\n//var Base58Check = require('./encoding/base58check');\n//var JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar PublicKey = require('./publickey');\n// var BN = require('./crypto/bn');\n// var Point = require('./crypto/point');\n// var Random = require('./crypto/random');\n// var $ = require('./util/preconditions');\n\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n// debugger;\n    info = PrivateKey._transformBuffer(data, network);\n// info = Address._transformBuffer(data, network);\n\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(new Buffer(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         new Buffer([0x01])]);\n  } else {\n    buf = Buffer.concat([new Buffer([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/privatekey.js\n// module id = 293\n// module chunks = 0","import { DecimalPipe } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class FilterProvider {\n  public formats;\n\n  constructor(private decimalPipe: DecimalPipe, private logger: Logger) {\n    this.logger.info('FilterProvider initialized');\n    this.formats = {\n      CURRENCY_SYM: '$',\n      DECIMAL_SEP: '.',\n      GROUP_SEP: ','\n    };\n  }\n\n  formatFiatAmount(amount: number) {\n    let value;\n    let sep;\n    let group;\n    let intValue;\n    let floatValue;\n    let finalValue;\n\n    value = this.decimalPipe.transform(amount);\n    if (!value) return 0;\n    sep = value.indexOf(this.formats.DECIMAL_SEP);\n    group = value.indexOf(this.formats.GROUP_SEP);\n\n    if (amount >= 0) {\n      if (group > 0) {\n        if (sep < 0) {\n          return value;\n        }\n        intValue = value.substring(0, sep);\n        floatValue = parseFloat(value.substring(sep));\n        floatValue = floatValue.toFixed(2);\n        floatValue = floatValue.toString().substring(1);\n        finalValue = intValue + floatValue;\n        return finalValue;\n      } else {\n        value = parseFloat(value);\n        return value.toFixed(2);\n      }\n    }\n    return 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/filter/filter.ts","import { ViewChild } from '@angular/core';\nimport { ActionSheetComponent } from './action-sheet';\n\nexport type dismissFunction = (data?: any) => void;\nexport class ActionSheetParent {\n  public params: any;\n  public componentRef: any;\n  public sheetType: string;\n  public dismissFunction: dismissFunction;\n\n  @ViewChild(ActionSheetComponent)\n  actionSheet: ActionSheetComponent;\n\n  public async present(): Promise<void> {\n    return this.actionSheet.present(this.componentRef);\n  }\n\n  public async dismiss(data?: any): Promise<void> {\n    await this.actionSheet.dismiss(data);\n  }\n\n  public onDidDismiss(func: dismissFunction) {\n    this.dismissFunction = func;\n    this.actionSheet.dismissFunction = func;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/action-sheet/action-sheet-parent.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { App, Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Pages\nimport { DisclaimerPage } from '../../onboarding/disclaimer/disclaimer';\nimport { ScanPage } from '../../scan/scan';\nimport { TabsPage } from '../../tabs/tabs';\n\n// Providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { BwcProvider } from '../../../providers/bwc/bwc';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { DerivationPathHelperProvider } from '../../../providers/derivation-path-helper/derivation-path-helper';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { PushNotificationsProvider } from '../../../providers/push-notifications/push-notifications';\nimport {\n  WalletOptions,\n  WalletProvider\n} from '../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-import-wallet',\n  templateUrl: 'import-wallet.html'\n})\nexport class ImportWalletPage {\n  private derivationPathByDefault: string;\n  private derivationPathForTestnet: string;\n  private derivationPathForLtc: string;\n  private derivationPathForZcl: string;\n  private derivationPathForRvn: string;\n  private derivationPathForSafe: string;\n  private importForm: FormGroup;\n  private reader: FileReader;\n  private defaults;\n  private errors;\n\n  public prettyFileName: string;\n  public importErr: boolean;\n  public fromOnboarding: boolean;\n  public formFile;\n  public showAdvOpts: boolean;\n  public selectedTab: string;\n  public isCordova: boolean;\n  public isSafari: boolean;\n  public isIOS: boolean;\n  public file: File;\n  public code;\n  public okText: string;\n  public cancelText: string;\n  public coins: string[];\n\n  constructor(\n    private app: App,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private form: FormBuilder,\n    private bwcProvider: BwcProvider,\n    private derivationPathHelperProvider: DerivationPathHelperProvider,\n    private walletProvider: WalletProvider,\n    private configProvider: ConfigProvider,\n    private popupProvider: PopupProvider,\n    private platformProvider: PlatformProvider,\n    private logger: Logger,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private profileProvider: ProfileProvider,\n    private translate: TranslateService,\n    private events: Events,\n    private pushNotificationsProvider: PushNotificationsProvider,\n    private actionSheetProvider: ActionSheetProvider\n  ) {\n    this.okText = this.translate.instant('Ok');\n    this.cancelText = this.translate.instant('Cancel');\n    this.coins = ['safe', 'btcz', 'zel', 'zcl', 'anon', 'rvn', 'ltc', 'btc', 'bch' ];\n    this.reader = new FileReader();\n    this.defaults = this.configProvider.getDefaults();\n    this.errors = bwcProvider.getErrors();\n\n    this.isCordova = this.platformProvider.isCordova;\n    this.isSafari = this.platformProvider.isSafari;\n    this.isIOS = this.platformProvider.isIOS;\n    this.importErr = false;\n    this.fromOnboarding = this.navParams.data.fromOnboarding;\n    this.code = this.navParams.data.code;\n    this.selectedTab = 'words';\n    this.derivationPathByDefault = this.derivationPathHelperProvider.default;\n    this.derivationPathForTestnet = this.derivationPathHelperProvider.defaultTestnet;\n    this.derivationPathForLtc = this.derivationPathHelperProvider.defaultLtc;\n    this.derivationPathForZcl = this.derivationPathHelperProvider.defaultZcl;\n    this.derivationPathForRvn = this.derivationPathHelperProvider.defaultRvn;\n    this.derivationPathForSafe = this.derivationPathHelperProvider.defaultSafe;\n    this.showAdvOpts = false;\n    this.formFile = null;\n\n    this.importForm = this.form.group({\n      words: [null, Validators.required],\n      backupText: [null],\n      passphrase: [null],\n      file: [null],\n      filePassword: [null],\n      derivationPath: [this.derivationPathByDefault, Validators.required],\n      testnetEnabled: [false],\n      bwsURL: [this.defaults.bws.url],\n      coin: [null, Validators.required]\n    });\n    this.importForm.controls['coin'].setValue(this.coins[0]);\n    this.importForm.controls['derivationPath'].setValue(this.derivationPathForSafe);\n    this.events.subscribe('update:words', data => {\n      this.processWalletInfo(data.value);\n    });\n  }\n\n  ionViewWillEnter() {\n    if (this.code) {\n      this.processWalletInfo(this.code);\n    }\n  }\n\n  ngOnDestroy() {\n    this.events.unsubscribe('update:words');\n  }\n\n  selectTab(tab: string) {\n    this.selectedTab = tab;\n\n    switch (tab) {\n      case 'words':\n        this.file = null;\n        this.formFile = null;\n        this.importForm.get('words').setValidators([Validators.required]);\n        this.importForm.get('coin').setValidators([Validators.required]);\n        this.importForm.get('filePassword').clearValidators();\n        if (this.isCordova || this.isSafari)\n          this.importForm.get('backupText').clearValidators();\n        else this.importForm.get('file').clearValidators();\n        break;\n      case 'file':\n        if (this.isCordova || this.isSafari)\n          this.importForm\n            .get('backupText')\n            .setValidators([Validators.required]);\n        else this.importForm.get('file').setValidators([Validators.required]);\n        this.importForm\n          .get('filePassword')\n          .setValidators([Validators.required]);\n        this.importForm.get('words').clearValidators();\n        this.importForm.get('coin').clearValidators();\n        break;\n\n      default:\n        this.importForm.get('words').clearValidators();\n        this.importForm.get('file').clearValidators();\n        this.importForm.get('filePassword').clearValidators();\n        break;\n    }\n    this.importForm.get('words').updateValueAndValidity();\n    this.importForm.get('file').updateValueAndValidity();\n    this.importForm.get('filePassword').updateValueAndValidity();\n    this.importForm.get('backupText').updateValueAndValidity();\n    this.importForm.get('coin').updateValueAndValidity();\n  }\n\n  normalizeMnemonic(words: string) {\n    if (!words || !words.indexOf) return words;\n    var isJA = words.indexOf('\\u3000') > -1;\n    var wordList = words.split(/[\\u3000\\s]+/);\n\n    return wordList.join(isJA ? '\\u3000' : ' ');\n  }\n\n  private processWalletInfo(code: string): void {\n    if (!code) return;\n\n    this.importErr = false;\n    let parsedCode = code.split('|');\n\n    let info = {\n      type: parsedCode[0],\n      data: parsedCode[1],\n      network: parsedCode[2],\n      derivationPath: parsedCode[3],\n      hasPassphrase: parsedCode[4] == 'true' ? true : false,\n      coin: parsedCode[5]\n    };\n    if (!info.data) {\n      const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n        'default-error',\n        {\n          msg: this.translate.instant('Invalid data'),\n          title: this.translate.instant('Error')\n        }\n      );\n      errorInfoSheet.present();\n    }\n    if (info.type == '1' && info.hasPassphrase) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant(\n        'Password required. Make sure to enter your password in advanced options'\n      );\n      this.popupProvider.ionicAlert(title, subtitle);\n    }\n\n    let isTestnet = info.network == 'testnet' ? true : false;\n    this.importForm.controls['testnetEnabled'].setValue(isTestnet);\n    this.importForm.controls['derivationPath'].setValue(info.derivationPath);\n    this.importForm.controls['words'].setValue(info.data);\n    this.importForm.controls['coin'].setValue(info.coin);\n  }\n\n  public setDerivationPath(): void {\n//  debugger;\n    let path = this.importForm.value.testnetEnabled\n      ? this.derivationPathForTestnet\n       : this.importForm.value.coin == 'ltc'\n        ? this.derivationPathForLtc\n         : this.importForm.value.coin == 'zcl'\n          ? this.derivationPathForZcl\n           : this.importForm.value.coin == 'rvn'\n            ? this.derivationPathForRvn\n             : this.importForm.value.coin == 'safe'\n              ? this.derivationPathForSafe\n               : this.derivationPathByDefault;\n    this.importForm.controls['derivationPath'].setValue(path);\n  }\n\n  private importBlob(str: string, opts): void {\n    let str2: string;\n    let err = null;\n    try {\n      str2 = this.bwcProvider\n        .getSJCL()\n        .decrypt(this.importForm.value.filePassword, str);\n    } catch (e) {\n      err = this.translate.instant(\n        'Could not decrypt file, check your password'\n      );\n      this.logger.error('Import: could not decrypt file', e);\n    }\n\n    if (err) {\n      let title = this.translate.instant('Error');\n      this.popupProvider.ionicAlert(title, err);\n      return;\n    }\n\n    this.onGoingProcessProvider.set('importingWallet');\n    opts.compressed = null;\n    opts.password = null;\n\n    setTimeout(() => {\n      this.profileProvider\n        .importWallet(str2, opts)\n        .then(wallet => {\n          this.onGoingProcessProvider.clear();\n          this.finish(wallet);\n        })\n        .catch(err => {\n          this.onGoingProcessProvider.clear();\n          let title = this.translate.instant('Error');\n          this.popupProvider.ionicAlert(title, err);\n          return;\n        });\n    }, 100);\n  }\n\n  private finish(wallet): void {\n    this.walletProvider\n      .updateRemotePreferences(wallet)\n      .then(() => {\n        this.profileProvider.setBackupFlag(wallet.credentials.walletId);\n        this.events.publish('status:updated');\n        this.pushNotificationsProvider.updateSubscription(wallet);\n        if (this.fromOnboarding) {\n          this.profileProvider.setOnboardingCompleted();\n          this.navCtrl.push(DisclaimerPage);\n        } else {\n          this.app\n            .getRootNavs()[0]\n            .setRoot(TabsPage)\n            .then(() => {\n              this.events.publish('OpenWallet', wallet);\n            });\n        }\n      })\n      .catch(err => {\n        this.logger.error('Import: could not updateRemotePreferences', err);\n      });\n  }\n\n  private importExtendedPrivateKey(xPrivKey, opts) {\n    this.onGoingProcessProvider.set('importingWallet');\n    setTimeout(() => {\n      this.profileProvider\n        .importExtendedPrivateKey(xPrivKey, opts)\n        .then(wallet => {\n          this.onGoingProcessProvider.clear();\n          this.finish(wallet);\n        })\n        .catch(err => {\n          if (err instanceof this.errors.NOT_AUTHORIZED) {\n            this.importErr = true;\n          } else {\n            let title = this.translate.instant('Error');\n            this.popupProvider.ionicAlert(title, err);\n          }\n          this.onGoingProcessProvider.clear();\n          return;\n        });\n    }, 100);\n  }\n\n  private importMnemonic(words: string, opts): void {\n    this.onGoingProcessProvider.set('importingWallet');\n    setTimeout(() => {\n      this.profileProvider\n        .importMnemonic(words, opts)\n        .then(wallet => {\n          this.onGoingProcessProvider.clear();\n          this.finish(wallet);\n        })\n        .catch(err => {\n          if (err instanceof this.errors.NOT_AUTHORIZED) {\n            this.importErr = true;\n          } else {\n            let title = this.translate.instant('Error');\n            this.popupProvider.ionicAlert(title, err);\n          }\n          this.onGoingProcessProvider.clear();\n          return;\n        });\n    }, 100);\n  }\n\n  import() {\n    if (this.selectedTab === 'file') {\n      this.importFromFile();\n    } else {\n      this.importFromMnemonic();\n    }\n  }\n\n  public importFromFile(): void {\n    if (!this.importForm.valid) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant('There is an error in the form');\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    }\n\n    let backupFile = this.file;\n    let backupText = this.importForm.value.backupText;\n\n    if (!backupFile && !backupText) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant('Please, select your backup file');\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    }\n\n    if (backupFile) {\n      this.reader.readAsBinaryString(backupFile);\n    } else {\n      let opts: Partial<WalletOptions> = {};\n      opts.bwsurl = this.importForm.value.bwsURL;\n      opts.coin = this.importForm.value.coin;\n      this.importBlob(backupText, opts);\n    }\n  }\n\n  public importFromMnemonic(): void {\n    if (!this.importForm.valid) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant('There is an error in the form');\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    }\n\n    let opts: Partial<WalletOptions> = {};\n\n    if (this.importForm.value.bwsURL)\n      opts.bwsurl = this.importForm.value.bwsURL;\n\n    let pathData = this.derivationPathHelperProvider.parse(\n      this.importForm.value.derivationPath\n    );\n\n    if (!pathData) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant('Invalid derivation path');\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    }\n\n    opts.account = pathData.account;\n    opts.networkName = pathData.networkName;\n    opts.derivationStrategy = pathData.derivationStrategy;\n    opts.coin = this.importForm.value.coin;\n\n    let words: string = this.importForm.value.words || null;\n\n    if (!words) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant('Please enter the recovery phrase');\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    } else if (words.indexOf('xprv') == 0 || words.indexOf('tprv') == 0) {\n      return this.importExtendedPrivateKey(words, opts);\n    } else {\n      let wordList = words.split(/[\\u3000\\s]+/);\n\n      if (wordList.length % 3 != 0) {\n        let title = this.translate.instant('Error');\n        let subtitle = this.translate.instant(\n          'Wrong number of recovery words:'\n        );\n        this.popupProvider.ionicAlert(title, subtitle + ' ' + wordList.length);\n        return;\n      }\n    }\n\n    opts.passphrase = this.importForm.value.passphrase || null;\n    this.importMnemonic(words, opts);\n  }\n\n  public toggleShowAdvOpts(): void {\n    this.showAdvOpts = !this.showAdvOpts;\n  }\n\n  public fileChangeEvent($event) {\n    this.file = $event.target\n      ? $event.target.files[0]\n      : $event.srcElement.files[0];\n    this.formFile = $event.target.value;\n    // Most browsers return `C:\\fakepath\\FILENAME`\n    this.prettyFileName = this.formFile.split('\\\\').pop();\n    this.getFile();\n  }\n\n  private getFile() {\n    // If we use onloadend, we need to check the readyState.\n    this.reader.onloadend = () => {\n      if (this.reader.readyState === 2) {\n        // DONE === 2\n        let opts: Partial<WalletOptions> = {};\n        opts.bwsurl = this.importForm.value.bwsURL;\n        opts.coin = this.importForm.value.coin;\n        this.importBlob(this.reader.result, opts);\n      }\n    };\n  }\n\n  public openScanner(): void {\n    this.navCtrl.push(ScanPage, { fromImport: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add/import-wallet/import-wallet.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DerivationPathHelperProvider {\n  public default: string;\n  public defaultTestnet: string;\n  public defaultBtc: string;\n  public defaultBch: string;\n  public defaultBtcz: string;\n  public defaultLtc: string;\n  public defaultZel: string;\n  public defaultZcl: string;\n  public defaultAnon: string;\n  public defaultRvn: string;\n  public defaultSafe: string;\n\n  public constructor() {\n    this.default = \"m/44'/0'/0'\";\n    this.defaultTestnet = \"m/44'/1'/0'\";\n    this.defaultBtc = \"m/44'/0'/0'\";\n    this.defaultBch = \"m/44'/0'/0'\";\n    this.defaultBtcz = \"m/44'/0'/0'\";\n    this.defaultZel = \"m/44'/0'/0'\";\n    this.defaultLtc = \"m/44'/2'/0'\";\n    this.defaultZcl = \"m/44'/147'/0'\";\n    this.defaultAnon = \"m/44'/0'/0'\";\n    this.defaultRvn = \"m/44'/175'/0'\";\n    this.defaultSafe = \"m/44'/19165'/0'\";\n  }\n\n  parse(str: string) {\n    var arr = str.split('/');\n    var ret = {\n      derivationStrategy: '',\n      networkName: '',\n      coin: '',\n      account: 0\n    };\n\n    if (arr[0] != 'm') return false;\n\n    switch (arr[1]) {\n      case \"44'\":\n        ret.derivationStrategy = 'BIP44';\n        break;\n      case \"45'\":\n        return {\n          derivationStrategy: 'BIP45',\n          networkName: 'livenet',\n          account: 0\n        };\n      case \"48'\":\n        ret.derivationStrategy = 'BIP48';\n        break;\n      default:\n        return false;\n    }\n\n    switch (arr[2]) {\n      case \"0'\":\n        ret.networkName = 'livenet';\n        break;\n      case \"1'\":\n        ret.networkName = 'testnet';\n        break;\n      case \"2'\":\n        ret.networkName = 'livenet';\n        ret.coin = 'ltc';\n        break;\n      case \"147'\":\n        ret.networkName = 'livenet';\n        ret.coin = 'zcl';\n        break;\n      case \"175'\":\n        ret.networkName = 'livenet';\n        ret.coin = 'rvn';\n        break;\n      case \"19165'\":\n        ret.networkName = 'livenet';\n        ret.coin = 'safe';\n        break;\n      default:\n        return false;\n    }\n\n    var match = arr[3].match(/(\\d+)'/);\n    if (!match) return false;\n    ret.account = +match[1];\n\n    return ret;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/derivation-path-helper/derivation-path-helper.ts","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class NodeWebkitProvider {\n  constructor(private logger: Logger) {\n    this.logger.info('NodeWebkitProvider initialized.');\n  }\n\n  public readFromClipboard() {\n    let gui = (window as any).require('nw.gui');\n    let clipboard = gui.Clipboard.get();\n    return clipboard.get();\n  }\n\n  public writeToClipboard(text) {\n    let gui = (window as any).require('nw.gui');\n    let clipboard = gui.Clipboard.get();\n    return clipboard.set(text);\n  }\n\n  public clearClipboard() {\n    let gui = (window as any).require('nw.gui');\n    let clip = gui.Clipboard.get();\n    clip.clear();\n  }\n\n  public openExternalLink(url) {\n    let gui = (window as any).require('nw.gui');\n    return gui.Shell.openExternal(url);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/node-webkit/node-webkit.ts","import { Component, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalController, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\n\n// pages\nimport { FinishModalPage } from '../finish/finish';\n\n// providers\nimport { ActionSheetProvider } from '../../providers/action-sheet/action-sheet';\nimport { BwcErrorProvider } from '../../providers/bwc-error/bwc-error';\nimport { BwcProvider } from '../../providers/bwc/bwc';\nimport { FeeProvider } from '../../providers/fee/fee';\nimport { Logger } from '../../providers/logger/logger';\nimport { OnGoingProcessProvider } from '../../providers/on-going-process/on-going-process';\nimport { PlatformProvider } from '../../providers/platform/platform';\nimport { PopupProvider } from '../../providers/popup/popup';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { WalletOptions, WalletProvider } from '../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-paper-wallet',\n  templateUrl: 'paper-wallet.html'\n})\nexport class PaperWalletPage {\n  @ViewChild('slideButton')\n  slideButton;\n\n  public wallet;\n  public walletName: string;\n  public M: number;\n  public N: number;\n  public totalBalanceStr: string;\n  public network: string;\n  public wallets;\n  // All coins for which we have a usable wallet to sweep to\n  public coins: string[];\n  public scannedKey: string;\n  public isPkEncrypted: boolean;\n  public passphrase: string;\n  public balances = [];\n  public noMatchingWallet: boolean;\n  public balanceHidden: boolean;\n  public error: boolean;\n  public isOpenSelector: boolean;\n  private bitcore;\n  private bitcoreSafe;\n  private bitcoreBtcz;\n  private bitcoreZcl;\n  private bitcoreAnon;\n  private bitcoreZel;\n  private bitcoreRvn;\n  private bitcoreLtc;\n\n  // Platform info\n  public isCordova: boolean;\n\n  constructor(\n    private actionSheetProvider: ActionSheetProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private bwcProvider: BwcProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private popupProvider: PopupProvider,\n    private logger: Logger,\n    private walletProvider: WalletProvider,\n    private feeProvider: FeeProvider,\n    private profileProvider: ProfileProvider,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private platformProvider: PlatformProvider,\n    private bwcErrorProvider: BwcErrorProvider\n  ) {\n    this.bitcore = this.bwcProvider.getBitcore();\n    this.bitcoreSafe = this.bwcProvider.getBitcoreSafe();\n    this.bitcoreBtcz = this.bwcProvider.getBitcoreBtcz();\n    this.bitcoreZcl = this.bwcProvider.getBitcoreZcl();\n    this.bitcoreAnon = this.bwcProvider.getBitcoreAnon();\n    this.bitcoreZel = this.bwcProvider.getBitcoreZel();\n    this.bitcoreRvn = this.bwcProvider.getBitcoreRvn();\n    this.bitcoreLtc = this.bwcProvider.getBitcoreLtc();\n    this.isCordova = this.platformProvider.isCordova;\n    this.isOpenSelector = false;\n    this.scannedKey = this.navParams.data.privateKey;\n    this.isPkEncrypted = this.scannedKey\n      ? this.scannedKey.substring(0, 2) == '6P'\n      : null;\n    this.error = false;\n    this.wallets = this.profileProvider.getWallets({\n      onlyComplete: true,\n      network: 'livenet'\n    });\n\n    this.wallets = _.filter(_.clone(this.wallets), wallet => {\n      return !wallet.needsBackup;\n    });\n\n    this.coins = _.uniq(\n      _.map(this.wallets, (wallet: Partial<WalletOptions>) => wallet.coin)\n    );\n  }\n\n  ionViewWillLeave() {\n    this.navCtrl.swipeBackEnabled = true;\n  }\n\n  ionViewWillEnter() {\n    this.navCtrl.swipeBackEnabled = false;\n  }\n\n  ionViewDidEnter() {\n    if (!this.wallets || !this.wallets.length) {\n      this.noMatchingWallet = true;\n      return;\n    }\n\n    this.wallet = this.wallets[0];\n    if (!this.wallet) return;\n    if (!this.isPkEncrypted) this.scanFunds();\n    else {\n      let message = this.translate.instant(\n        'Private key encrypted. Enter password'\n      );\n      let opts = {\n        type: 'password',\n        enableBackdropDismiss: false\n      };\n      this.popupProvider.ionicPrompt(null, message, opts).then(res => {\n        this.passphrase = res;\n        setTimeout(() => {\n          this.scanFunds();\n        }, 200);\n      });\n    }\n  }\n\n  private getPrivateKey(\n    scannedKey: string,\n    privateKeyIsEncrypted: boolean,\n    passphrase: string,\n    cb: (err, scannedKey) => any\n  ) {\n    if (!privateKeyIsEncrypted) {\n      return cb(null, scannedKey);\n    }\n    this.wallet.decryptBIP38PrivateKey(scannedKey, passphrase, null, cb);\n  }\n\n  private getBalance(\n    privateKey: string,\n    coin: string,\n    cb: (err, balance: number) => any\n  ): void {\n    this.wallet.getBalanceFromPrivateKey(privateKey, coin, cb);\n  }\n\n  private checkPrivateKey(privateKey: string, coin: string): boolean {\n    if ((coin == 'btc') || (coin == 'bch')) {\n      try {new this.bitcore.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'safe') {\n      try {new this.bitcoreSafe.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'btcz') {\n      try {new this.bitcoreBtcz.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'zcl') {\n      try {new this.bitcoreZcl.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'anon') {\n      try {new this.bitcoreAnon.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'zel') {\n      try {new this.bitcoreZel.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'rvn') {\n      try {new this.bitcoreRvn.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else if (coin == 'ltc') {\n      try {new this.bitcoreLtc.PrivateKey(privateKey, 'livenet');}\n      catch (err) {return false;}\n    } else {\n      debugger;\n      return false;\n    }\n    return true;\n  }\n\n  private _scanFunds(coin: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getPrivateKey(\n        this.scannedKey,\n        this.isPkEncrypted,\n        this.passphrase,\n        (err, privateKey: string) => {\n          if (err) return reject(err);\n          debugger;\n          if (!this.checkPrivateKey(privateKey, coin))\n            return reject(new Error('Invalid private key'));\n\n          this.getBalance(privateKey, coin, (err, balance: number) => {\n            if (err) return reject(err);\n            return resolve({ privateKey, coin, balance });\n          });\n        }\n      );\n    });\n  }\n\n  public scanFunds(): void {\n    this.onGoingProcessProvider.set('scanning');\n\n    let scans = _.map(this.coins, (coin: string) => this._scanFunds(coin));\n\n    Promise.all(scans)\n      .then(data => {\n        this.onGoingProcessProvider.clear();\n\n        _.each(data, d => {\n          this.balances.push(d);\n        });\n\n        let available = {};\n        this.balances = _.filter(_.clone(this.balances), b => {\n          let nonzero: boolean = b.balance > 0;\n          available[b.coin] = nonzero;\n          return nonzero;\n        });\n\n        this.wallets = _.filter(_.clone(this.wallets), w => available[w.coin]);\n\n        if (this.wallets[0]) this.wallet = this.wallets[0];\n\n        if (this.balances.length == 0) {\n          this.popupProvider\n            .ionicAlert('Error', this.translate.instant('No funds found'))\n            .then(() => {\n              this.navCtrl.pop();\n            });\n        }\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.error(err);\n        this.popupProvider\n          .ionicAlert(\n            this.translate.instant('Error scanning funds:'),\n            this.bwcErrorProvider.msg(err)\n          )\n          .then(() => {\n            this.navCtrl.pop();\n          });\n      });\n  }\n\n  private _sweepWallet(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let balanceToSweep = _.filter(this.balances, b => {\n        return b.coin === this.wallet.coin;\n      })[0];\n\n      this.walletProvider\n        .getAddress(this.wallet, true)\n        .then((destinationAddress: string) => {\n          let opts: {\n            coin?: any;\n            fee?: any;\n          } = {};\n          opts.coin = balanceToSweep.coin;\n          this.wallet.buildTxFromPrivateKey(\n            balanceToSweep.privateKey,\n            destinationAddress,\n            opts,\n            (err, testTx) => {\n              if (err) return reject(err);\n              let rawTxLength = testTx.serialize().length;\n              this.feeProvider\n                .getCurrentFeeRate(balanceToSweep.coin, 'livenet')\n                .then((feePerKb: number) => {\n                  opts.fee = Math.round((feePerKb * rawTxLength) / 2000);\n                  this.wallet.buildTxFromPrivateKey(\n                    balanceToSweep.privateKey,\n                    destinationAddress,\n                    opts,\n                    (err, tx) => {\n                      if (err) return reject(err);\n                      this.wallet.broadcastRawTx(\n                        {\n                          rawTx: tx.serialize(),\n                          network: 'livenet',\n                          coin: balanceToSweep.coin\n                        },\n                        (err, txid) => {\n                          if (err) return reject(err);\n                          return resolve({ destinationAddress, txid });\n                        }\n                      );\n                    }\n                  );\n                });\n            }\n          );\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public sweepWallet(): void {\n    this.onGoingProcessProvider.set('sweepingWallet');\n    this._sweepWallet()\n      .then(data => {\n        this.onGoingProcessProvider.clear();\n        this.logger.debug(\n          'Success sweep. Destination address:' +\n            data.destinationAddress +\n            ' - transaction id: ' +\n            data.txid\n        );\n        this.openFinishModal();\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.error(err);\n        this.popupProvider.ionicAlert(\n          this.translate.instant('Error sweeping wallet:'),\n          this.bwcErrorProvider.msg(err)\n        );\n      });\n  }\n\n  private onWalletSelect(wallet): void {\n    this.wallet = wallet;\n  }\n\n  public showWallets(): void {\n    this.isOpenSelector = true;\n    let id = this.wallet ? this.wallet.credentials.walletId : null;\n    const params = {\n      wallets: this.wallets,\n      selectedWalletId: id,\n      title: 'Transfer to'\n    };\n    const walletSelector = this.actionSheetProvider.createWalletSelector(\n      params\n    );\n    walletSelector.present();\n    walletSelector.onDidDismiss(wallet => {\n      if (!_.isEmpty(wallet)) this.onWalletSelect(wallet);\n      this.isOpenSelector = false;\n    });\n  }\n\n  private openFinishModal(): void {\n    let finishComment = this.translate.instant(\n      'Check the transaction on your wallet details'\n    );\n    let finishText = this.translate.instant('Sweep Completed');\n    let modal = this.modalCtrl.create(\n      FinishModalPage,\n      { finishText, finishComment },\n      { showBackdrop: true, enableBackdropDismiss: false }\n    );\n    modal.present();\n    modal.onDidDismiss(() => {\n      this.navCtrl.pop();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/paper-wallet/paper-wallet.ts","import { Injectable } from '@angular/core';\n\n// Providers\nimport { BwcProvider } from '../../providers/bwc/bwc';\n\n@Injectable()\nexport class AddressProvider {\n  private bitcore;\n  private bitcoreCash;\n  private bitcoreSafe;\n  private bitcoreBtcz;\n  private bitcoreZcl;\n  private bitcoreAnon;\n  private bitcoreZel;\n  private bitcoreRvn;\n  private bitcoreLtc;\n  private Bitcore;\n\n  constructor(private bwcProvider: BwcProvider) {\n    this.bitcore = this.bwcProvider.getBitcore();\n    this.bitcoreCash = this.bwcProvider.getBitcoreCash();\n    this.bitcoreSafe = this.bwcProvider.getBitcoreSafe();\n    this.bitcoreBtcz = this.bwcProvider.getBitcoreBtcz();\n    this.bitcoreZcl = this.bwcProvider.getBitcoreZcl();\n    this.bitcoreAnon = this.bwcProvider.getBitcoreAnon();\n    this.bitcoreZel = this.bwcProvider.getBitcoreZel();\n    this.bitcoreRvn = this.bwcProvider.getBitcoreRvn();\n    this.bitcoreLtc = this.bwcProvider.getBitcoreLtc();\n    this.Bitcore = {\n      btc: {\n        lib: this.bitcore,\n        translateTo: 'bch'\n      },\n      bch: {\n        lib: this.bitcoreCash,\n        translateTo: 'btc'\n      },\n      btcz: {\n        lib: this.bitcoreBtcz,\n        translateTo: 'btcz'\n      },\n      zcl: {\n        lib: this.bitcoreZcl,\n        translateTo: 'zcl'\n      },\n      anon: {\n        lib: this.bitcoreAnon,\n        translateTo: 'anon'\n      },\n      zel: {\n        lib: this.bitcoreZel,\n        translateTo: 'zel'\n      },\n      rvn: {\n        lib: this.bitcoreRvn,\n        translateTo: 'rvn'\n      },\n      ltc: {\n        lib: this.bitcoreLtc,\n        translateTo: 'ltc'\n      },\n      safe: {\n        lib: this.bitcoreSafe,\n        translateTo: 'safe'\n      }\n    };\n  }\n\n  public getCoin(address: string) {\n  debugger;\n    try {\n      new this.Bitcore['btc'].lib.Address(address);\n      return 'btc';\n    } catch (e) {\n      try {\n        new this.Bitcore['bch'].lib.Address(address);\n        return 'bch';\n      } catch (e) {\n        try {\n          new this.Bitcore['safe'].lib.Address(address);\n          return 'safe';\n        } catch (e) {\n          try {\n            new this.Bitcore['btcz'].lib.Address(address);\n            return 'btcz';\n          } catch (e) {\n            try {\n              new this.Bitcore['rvn'].lib.Address(address);\n              return 'rvn';\n            } catch (e) {\n              try {\n                new this.Bitcore['zcl'].lib.Address(address);\n                return 'zcl';\n              } catch (e) {\n                try {\n                  new this.Bitcore['ltc'].lib.Address(address);\n                  return 'ltc';\n                } catch (e) {\n                  return null;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  private translateAddress(address: string) {\n  debugger;\n  var origCoin = this.getCoin(address);\n    if (!origCoin) return undefined;\n\n    var origAddress = new this.Bitcore[origCoin].lib.Address(address);\n    var origObj = origAddress.toObject();\n\n    var resultCoin = this.Bitcore[origCoin].translateTo;\n    var resultAddress = this.Bitcore[resultCoin].lib.Address.fromObject(\n      origObj\n    );\n    return {\n      origCoin,\n      origAddress: address,\n      resultCoin,\n      resultAddress: resultAddress.toString()\n    };\n  }\n\n  public validateAddress(address: string, coiN: string) {\n    if (coiN == 'Safecoin (SAFE)') coiN = 'safe';\n    if (coiN == 'Litecoin (LTC)') coiN = 'ltc';\n    if (coiN == 'Bitcoin (BTC)') coiN = 'btc';\n    if (coiN == 'Bitcoin Cash (BCH)') coiN = 'bch';\n    if (coiN == 'BitcoinZ (BTCZ)') coiN = 'btcz';\n    if (coiN == 'Zelcash (ZEL)') coiN = 'zel';\n    if (coiN == 'Zclassic (ZCL)') coiN = 'zcl';\n    if (coiN == 'ANONymous (ANON)') coiN = 'anon';\n    if (coiN == 'Ravencoin (RVN)') coiN = 'rvn';\n    if (coiN == 'btc' || coiN == 'bch' ||  coiN == 'ltc' || coiN == 'safe') {\n      let Address = this.bitcore.Address;\n      let AddressCash = this.bitcoreCash.Address;\n      let isLivenet = Address.isValid(address, 'livenet');\n      let isTestnet = Address.isValid(address, 'testnet');\n      let AddressSafe = this.bitcoreSafe.Address;\n      let AddressLtc = this.bitcoreLtc.Address;\n      let isLivenetCash = AddressCash.isValid(address, 'livenet');\n      let isTestnetCash = AddressCash.isValid(address, 'testnet');\n      let isLivenetSafe = AddressSafe.isValid(address, 'livenet');\n      let isLivenetLtc = AddressLtc.isValid(address, 'livenet');\n// debugger;\n      return {\n        address,\n        isValid: isLivenet || isTestnet || isLivenetCash || isTestnetCash || isLivenetSafe || isLivenetLtc,\n        network: isTestnet || isTestnetCash ? 'testnet' : 'livenet',\n        coin: coiN,\n        translation: (coiN == 'btc' || coiN == 'bch') ? this.translateAddress(address) : {}\n      };\n    } else if (coiN == 'btcz') {\n      let AddressBtcz = this.bitcoreBtcz.Address;\n      let isLivenetBtcz = AddressBtcz.isValid(address, 'livenet');\n      return {\n        address,\n        isValid: isLivenetBtcz,\n        network: 'livenet',\n        coin: coiN,\n        translation: {}\n      };\n    } else if (coiN == 'zel') {\n      let AddressZel = this.bitcoreZel.Address;\n      let isLivenetZel = AddressZel.isValid(address, 'livenet');\n      return {\n        address,\n        isValid: isLivenetZel,\n        network: 'livenet',\n        coin: coiN,\n        translation: {}\n      };\n    } else if (coiN == 'zcl' ) {\n      let AddressZcl = this.bitcoreZcl.Address;\n      let isLivenetZcl = AddressZcl.isValid(address, 'livenet');\n      return {\n        address,\n        isValid: isLivenetZcl,\n        network: 'livenet',\n        coin: coiN,\n        translation: {}\n      };\n    } else if (coiN == 'anon' ) {\n      let AddressAnon = this.bitcoreAnon.Address;\n      let isLivenetAnon = AddressAnon.isValid(address, 'livenet');\n      return {\n        address,\n        isValid: isLivenetAnon,\n        network: 'livenet',\n        coin: coiN,\n        translation: {}\n      };\n    } else {\n      let AddressRvn = this.bitcoreRvn.Address;\n      let isLivenetRvn = AddressRvn.isValid(address, 'livenet');\n      return {\n        address,\n        isValid: isLivenetRvn,\n        network: 'livenet',\n        coin: coiN,\n        translation: {}\n      };\n    }\n  }\n\n  public checkCoinAndNetwork(\n    coin: string,\n    network: string,\n    address: string\n  ): boolean {\n    let addressData;\n    if (this.isValid(address)) {\n      let extractedAddress = this.extractAddress(address);\n      addressData = this.validateAddress(extractedAddress, coin);\n      return addressData.coin == coin\n        ? addressData.network == network\n          ? true\n          : false\n        : false;\n    } else {\n      return false;\n    }\n  }\n\n  public extractAddress(address: string): string {\n    let extractedAddress = address\n      .replace(/^(bitcoincash:|bitcoin:|safecoin:|bitcoinz:|zclassic:|anonymous:|zelcash:|ravencoin:|litecoin:)/, '')\n      .replace(/\\?.*/, '');\n    return extractedAddress || address;\n  }\n\n  public isValid(address: string): boolean {\n    let URI = this.bitcore.URI;\n    let Address = this.bitcore.Address;\n    let URICash = this.bitcoreCash.URI;\n    let AddressCash = this.bitcoreCash.Address;\n    let URISafe = this.bitcoreSafe.URI;\n    let AddressSafe = this.bitcoreSafe.Address;\n    let URIBtcz = this.bitcoreBtcz.URI;\n    let AddressBtcz = this.bitcoreBtcz.Address;\n    let URIZcl = this.bitcoreZcl.URI;\n    let AddressZcl = this.bitcoreZcl.Address;\n    let URIAnon = this.bitcoreAnon.URI;\n    let AddressAnon = this.bitcoreAnon.Address;\n    let URIZel = this.bitcoreZel.URI;\n    let AddressZel = this.bitcoreZel.Address;\n    let URIRvn = this.bitcoreRvn.URI;\n    let AddressRvn = this.bitcoreRvn.Address;\n    let URILtc = this.bitcoreLtc.URI;\n    let AddressLtc = this.bitcoreLtc.Address;\n\n    // Bip21 uri\n    let uri, isAddressValidLivenet, isAddressValidTestnet;\n    if (/^bitcoin:/.test(address)) {\n      let isUriValid = URI.isValid(address);\n      if (isUriValid) {\n        uri = new URI(address);\n        isAddressValidLivenet = Address.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n        isAddressValidTestnet = Address.isValid(\n          uri.address.toString(),\n          'testnet'\n        );\n      }\n      if (isUriValid && (isAddressValidLivenet || isAddressValidTestnet)) {\n        return true;\n      }\n    } else if (/^bitcoincash:/.test(address)) {\n      let isUriValid = URICash.isValid(address);\n      if (isUriValid) {\n        uri = new URICash(address);\n        isAddressValidLivenet = AddressCash.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n        isAddressValidTestnet = AddressCash.isValid(\n          uri.address.toString(),\n          'testnet'\n        );\n      }\n      if (isUriValid && (isAddressValidLivenet || isAddressValidTestnet)) {\n        return true;\n      }\n    } else if (/^safecoin:/.test(address)) {\n      let isUriValid = URISafe.isValid(address);\n      if (isUriValid) {\n        uri = new URISafe(address);\n        isAddressValidLivenet = AddressSafe.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    } else if (/^bitcoinz:/.test(address)) {\n      let isUriValid = URIBtcz.isValid(address);\n      if (isUriValid) {\n        uri = new URIBtcz(address);\n        isAddressValidLivenet = AddressBtcz.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    } else if (/^zclassic:/.test(address)) {\n      let isUriValid = URIZcl.isValid(address);\n      if (isUriValid) {\n        uri = new URIZcl(address);\n        isAddressValidLivenet = AddressZcl.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    } else if (/^anonymous:/.test(address)) {\n      let isUriValid = URIAnon.isValid(address);\n      if (isUriValid) {\n        uri = new URIAnon(address);\n        isAddressValidLivenet = AddressAnon.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    } else if (/^zelcash:/.test(address)) {\n      let isUriValid = URIZel.isValid(address);\n      if (isUriValid) {\n        uri = new URIZel(address);\n        isAddressValidLivenet = AddressZel.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    } else if (/^ravencoin:/.test(address)) {\n      let isUriValid = URIRvn.isValid(address);\n      if (isUriValid) {\n        uri = new URIRvn(address);\n        isAddressValidLivenet = AddressRvn.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    } else if (/^litecoin:/.test(address)) {\n      let isUriValid = URILtc.isValid(address);\n      if (isUriValid) {\n        uri = new URILtc(address);\n        isAddressValidLivenet = AddressLtc.isValid(\n          uri.address.toString(),\n          'livenet'\n        );\n      }\n      if (isUriValid && isAddressValidLivenet /* || isAddressValidTestnet) */) {\n        return true;\n      }\n    }\n\n    // Regular Address: try Bitcoin and Bitcoin Cash\n    let regularAddressLivenet = Address.isValid(address, 'livenet');\n    let regularAddressTestnet = Address.isValid(address, 'testnet');\n    let regularAddressCashLivenet = AddressCash.isValid(address, 'livenet');\n    let regularAddressCashTestnet = AddressCash.isValid(address, 'testnet');\n    let regularAddressSafeLivenet = AddressSafe.isValid(address, 'livenet');\n    let regularAddressBtczLivenet = AddressBtcz.isValid(address, 'livenet');\n    let regularAddressZelLivenet = AddressZel.isValid(address, 'livenet');\n    let regularAddressZclLivenet = AddressZcl.isValid(address, 'livenet');\n    let regularAddressAnonLivenet = AddressAnon.isValid(address, 'livenet');\n    let regularAddressRvnLivenet = AddressRvn.isValid(address, 'livenet');\n    let regularAddressLtcLivenet = AddressLtc.isValid(address, 'livenet');\n    if (\n      regularAddressLivenet ||\n      regularAddressTestnet ||\n      regularAddressSafeLivenet ||\n      regularAddressBtczLivenet ||\n      regularAddressZelLivenet ||\n      regularAddressZclLivenet ||\n      regularAddressAnonLivenet ||\n      regularAddressRvnLivenet ||\n      regularAddressLtcLivenet ||\n      regularAddressCashLivenet ||\n      regularAddressCashTestnet\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/address/address.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Logger } from '../../providers/logger/logger';\n\n// Providers\nimport { AddressBookProvider } from '../../providers/address-book/address-book';\nimport { ConfigProvider } from '../../providers/config/config';\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { OnGoingProcessProvider } from '../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../providers/popup/popup';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { TxConfirmNotificationProvider } from '../../providers/tx-confirm-notification/tx-confirm-notification';\nimport { TxFormatProvider } from '../../providers/tx-format/tx-format';\nimport { WalletProvider } from '../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-tx-details',\n  templateUrl: 'tx-details.html'\n})\nexport class TxDetailsPage {\n  private txId: string;\n  private config;\n  private blockexplorerUrl: string;\n\n  public wallet;\n  public btx;\n  public actionList;\n  public isShared: boolean;\n  public title: string;\n  public txNotification;\n  public color: string;\n  public copayerId: string;\n  public txsUnsubscribedForNotifications: boolean;\n  public contactName: string;\n  public txMemo: string;\n\n  constructor(\n    private addressBookProvider: AddressBookProvider,\n    private configProvider: ConfigProvider,\n    private events: Events,\n    private externalLinkProvider: ExternalLinkProvider,\n    private logger: Logger,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private onGoingProcess: OnGoingProcessProvider,\n    private popupProvider: PopupProvider,\n    private profileProvider: ProfileProvider,\n    private txConfirmNotificationProvider: TxConfirmNotificationProvider,\n    private txFormatProvider: TxFormatProvider,\n    private walletProvider: WalletProvider,\n    private translate: TranslateService\n  ) {}\n\n  ionViewDidLoad() {\n    this.config = this.configProvider.get();\n\n    this.txId = this.navParams.data.txid;\n    this.title = this.translate.instant('Transaction');\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.color = this.wallet.color;\n    this.copayerId = this.wallet.credentials.copayerId;\n    this.isShared = this.wallet.credentials.n > 1;\n    this.txsUnsubscribedForNotifications = this.config.confirmedTxsNotifications\n      ? !this.config.confirmedTxsNotifications.enabled\n      : true;\n\n    let defaults = this.configProvider.getDefaults();\n    this.blockexplorerUrl =\n      this.wallet.coin === 'bch'\n       ? defaults.blockExplorerUrl.bch\n        : this.wallet.coin === 'safe' \n         ? defaults.blockExplorerUrl.safe\n          : this.wallet.coin === 'btcz' \n           ? defaults.blockExplorerUrl.btcz\n            : this.wallet.coin === 'zcl' \n             ? defaults.blockExplorerUrl.zcl\n            : this.wallet.coin === 'anon' \n             ? defaults.blockExplorerUrl.anon\n            : this.wallet.coin === 'zel' \n             ? defaults.blockExplorerUrl.zel\n              : this.wallet.coin === 'rvn' \n               ? defaults.blockExplorerUrl.rvn\n                : this.wallet.coin === 'ltc' \n                 ? defaults.blockExplorerUrl.ltc\n                  : defaults.blockExplorerUrl.btc;\n\n    this.txConfirmNotificationProvider.checkIfEnabled(this.txId).then(res => {\n      this.txNotification = {\n        value: res\n      };\n    });\n\n    this.updateTx();\n  }\n\n  ionViewWillEnter() {\n    this.events.subscribe('bwsEvent', (_, type: string, n) => {\n      if (type == 'NewBlock' && n && n.data && n.data.network == 'livenet')\n        this.updateTxDebounced({ hideLoading: true });\n    });\n  }\n\n  ionViewWillLeave() {\n    this.events.unsubscribe('bwsEvent');\n  }\n\n  public readMore(): void {\n    let url =\n      'https://support.bitpay.com/hc/en-us/articles/115004497783-What-does-the-BitPay-wallet-s-warning-amount-too-low-to-spend-mean-';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('Read more in our support page');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  private updateMemo(): void {\n    this.walletProvider\n      .getTxNote(this.wallet, this.btx.txid)\n      .then(note => {\n        if (!note || note.body == '') return;\n        this.btx.note = note;\n      })\n      .catch(err => {\n        this.logger.warn('Could not fetch transaction note: ' + err);\n        return;\n      });\n  }\n\n  private initActionList(): void {\n    this.actionList = [];\n    if (\n      (this.btx.action != 'sent' && this.btx.action != 'moved') ||\n      !this.isShared\n    )\n      return;\n\n    let actionDescriptions = {\n      created: this.translate.instant('Proposal Created'),\n      accept: this.translate.instant('Accepted'),\n      reject: this.translate.instant('Rejected'),\n      broadcasted: this.translate.instant('Broadcasted')\n    };\n\n    this.actionList.push({\n      type: 'created',\n      time: this.btx.createdOn,\n      description: actionDescriptions.created,\n      by: this.btx.creatorName\n    });\n\n    _.each(this.btx.actions, action => {\n      this.actionList.push({\n        type: action.type,\n        time: action.createdOn,\n        description: actionDescriptions[action.type],\n        by: action.copayerName\n      });\n    });\n\n    this.actionList.push({\n      type: 'broadcasted',\n      time: this.btx.time,\n      description: actionDescriptions.broadcasted\n    });\n\n    setTimeout(() => {\n      this.actionList.reverse();\n    }, 10);\n  }\n\n  private updateTxDebounced = _.debounce(this.updateTx, 1000);\n\n  private updateTx(opts?): void {\n    opts = opts ? opts : {};\n    if (!opts.hideLoading) this.onGoingProcess.set('loadingTxInfo');\n    this.walletProvider\n      .getTx(this.wallet, this.txId)\n      .then(tx => {\n        if (!opts.hideLoading) this.onGoingProcess.clear();\n\n        this.btx = this.txFormatProvider.processTx(\n          this.wallet.coin,\n          tx,\n          this.walletProvider.useLegacyAddress()\n        );\n        this.btx.feeFiatStr = this.txFormatProvider.formatAlternativeStr(\n          this.wallet.coin,\n          tx.fees\n        );\n        this.btx.feeRateStr =\n          ((this.btx.fees / (this.btx.amount + this.btx.fees)) * 100).toFixed(\n            2\n          ) + '%';\n\n        if (!this.btx.note) {\n          this.txMemo = this.btx.message;\n        }\n        if (this.btx.note && this.btx.note.body) {\n          this.txMemo = this.btx.note.body;\n        }\n\n        if (this.btx.action != 'invalid') {\n          if (this.btx.action == 'sent')\n            this.title = this.translate.instant('Sent Funds');\n          if (this.btx.action == 'received')\n            this.title = this.translate.instant('Received Funds');\n          if (this.btx.action == 'moved')\n            this.title = this.translate.instant('Moved Funds');\n        }\n\n        this.updateMemo();\n        this.initActionList();\n        this.contact();\n\n        this.walletProvider\n          .getLowAmount(this.wallet)\n          .then((amount: number) => {\n            this.btx.lowAmount = tx.amount < amount;\n          })\n          .catch(err => {\n            this.logger.warn('Error getting low amounts: ' + err);\n            return;\n          });\n      })\n      .catch(err => {\n        if (!opts.hideLoading) this.onGoingProcess.clear();\n        this.logger.warn('Error getting transaction: ' + err);\n        this.navCtrl.pop();\n        return this.popupProvider.ionicAlert(\n          'Error',\n          this.translate.instant('Transaction not available at this time')\n        );\n      });\n  }\n\n  public async saveMemoInfo(memo: string): Promise<void> {\n    this.btx.note = {\n      body: memo\n    };\n    this.logger.debug('Saving memo');\n\n    let args = {\n      txid: this.btx.txid,\n      body: memo\n    };\n\n    await this.walletProvider\n      .editTxNote(this.wallet, args)\n      .catch((err: any) => {\n        this.logger.debug('Could not save tx comment ' + err);\n      });\n\n    this.logger.info('Tx Note edited');\n  }\n\n  public viewOnBlockchain(): void {\n    let btx = this.btx;\n    let https = 'https://';\n    if (this.btx.amountUnitStr == 'ZCL') https = 'http://';\n    let url =\n      https +\n      (this.getShortNetworkName() == 'test' ? 'test-' : '') +\n      this.blockexplorerUrl +\n      '/tx/' +\n      btx.txid;\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('View Transaction on Insight');\n    let okText = this.translate.instant('Open Insight');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public getShortNetworkName(): string {\n    let n: string = this.wallet.credentials.network;\n    return n.substring(0, 4);\n  }\n\n  public txConfirmNotificationChange(): void {\n    if (this.txNotification.value) {\n      this.txConfirmNotificationProvider.subscribe(this.wallet, {\n        txid: this.txId\n      });\n    } else {\n      this.txConfirmNotificationProvider.unsubscribe(this.wallet, this.txId);\n    }\n  }\n\n  private contact(): void {\n    let addr = this.btx.addressTo;\n    this.addressBookProvider\n      .get(addr)\n      .then(ab => {\n        if (ab) {\n          let name = _.isObject(ab) ? ab.name : ab;\n          this.contactName = name;\n        }\n      })\n      .catch(err => {\n        this.logger.warn(err);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tx-details/tx-details.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Events,\n  ModalController,\n  NavParams,\n  ViewController\n} from 'ionic-angular';\nimport { DecimalPipe } from '../../../node_modules/@angular/common';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { AddressBookProvider } from '../../providers/address-book/address-book';\nimport { BwcErrorProvider } from '../../providers/bwc-error/bwc-error';\nimport { ConfigProvider } from '../../providers/config/config';\nimport { FeeProvider } from '../../providers/fee/fee';\nimport { OnGoingProcessProvider } from '../../providers/on-going-process/on-going-process';\nimport { PlatformProvider } from '../../providers/platform/platform';\nimport { PopupProvider } from '../../providers/popup/popup';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { TxFormatProvider } from '../../providers/tx-format/tx-format';\nimport { WalletProvider } from '../../providers/wallet/wallet';\n\n// pages\nimport { FinishModalPage } from '../finish/finish';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-txp-details',\n  templateUrl: 'txp-details.html'\n})\nexport class TxpDetailsPage {\n  public wallet;\n  public tx;\n  public copayers;\n  public copayerId: string;\n  public isShared: boolean;\n  public canSign: boolean;\n  public color: string;\n  public buttonText: string;\n  public successText: string;\n  public actionList;\n  public paymentExpired: boolean;\n  public expires: string;\n  public currentSpendUnconfirmed: boolean;\n  public loading: boolean;\n  public contactName: string;\n  public showMultiplesOutputs: boolean;\n  public amount: string;\n\n  private isGlidera: boolean;\n  private GLIDERA_LOCK_TIME: number;\n  private countDown;\n  private isCordova: boolean;\n\n  constructor(\n    private navParams: NavParams,\n    private platformProvider: PlatformProvider,\n    private feeProvider: FeeProvider,\n    private events: Events,\n    private logger: Logger,\n    private popupProvider: PopupProvider,\n    private bwcError: BwcErrorProvider,\n    private walletProvider: WalletProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private viewCtrl: ViewController,\n    private configProvider: ConfigProvider,\n    private profileProvider: ProfileProvider,\n    private txFormatProvider: TxFormatProvider,\n    private translate: TranslateService,\n    private modalCtrl: ModalController,\n    private addressBookProvider: AddressBookProvider,\n    private decimalPipe: DecimalPipe\n  ) {\n    this.showMultiplesOutputs = false;\n    let config = this.configProvider.get().wallet;\n    this.tx = this.navParams.data.tx;\n    this.wallet = this.tx.wallet\n      ? this.tx.wallet\n      : this.profileProvider.getWallet(this.tx.walletId);\n    this.tx = this.txFormatProvider.processTx(\n      this.wallet.coin,\n      this.tx,\n      this.walletProvider.useLegacyAddress()\n    );\n    if (!this.tx.toAddress) this.tx.toAddress = this.tx.outputs[0].toAddress;\n    this.isGlidera = this.navParams.data.isGlidera;\n    this.GLIDERA_LOCK_TIME = 6 * 60 * 60;\n    this.currentSpendUnconfirmed = config.spendUnconfirmed;\n    this.loading = false;\n    this.isCordova = this.platformProvider.isCordova;\n    this.copayers = this.wallet.status.wallet.copayers;\n    this.copayerId = this.wallet.credentials.copayerId;\n    this.isShared = this.wallet.credentials.n > 1;\n    this.canSign = this.wallet.canSign() || this.wallet.isPrivKeyExternal();\n    this.color = this.wallet.color;\n    this.contact();\n\n    // To test multiple outputs...\n\n    // var txp = {\n    //   message: 'test multi-output',\n    //   fee: 1000,\n    //   createdOn: Math.floor(Date.now() / 1000),\n    //   outputs: [],\n    // };\n    // for (let i = 0; i < 15; i++) {\n\n    //   txp.outputs.push({\n    //     amountStr: \"600 BTC\",\n    //     toAddress: '2N8bhEwbKtMvR2jqMRcTCQqzHP6zXGToXcK',\n    //     message: 'output #' + (Number(i) + 1)\n    //   });\n    // };\n    // this.tx = _.merge(this.tx, txp);\n    // this.tx.hasMultiplesOutputs = true;\n  }\n\n  ionViewWillEnter() {\n    this.displayFeeValues();\n    this.initActionList();\n    this.checkPaypro();\n    this.applyButtonText();\n\n    this.amount = this.decimalPipe.transform(this.tx.amount / 1e8, '1.2-6');\n\n    // ToDo: use tx.customData instead of tx.message\n    if (this.tx.message === 'Glidera transaction' && this.isGlidera) {\n      this.tx.isGlidera = true;\n      if (this.tx.canBeRemoved) {\n        this.tx.canBeRemoved =\n          Date.now() / 1000 - (this.tx.ts || this.tx.createdOn) >\n          this.GLIDERA_LOCK_TIME;\n      }\n    }\n\n    this.events.subscribe('bwsEvent', (walletId: string, type: string) => {\n      _.each(\n        [\n          'TxProposalRejectedBy',\n          'TxProposalAcceptedBy',\n          'transactionProposalRemoved',\n          'TxProposalRemoved',\n          'NewOutgoingTx',\n          'UpdateTx'\n        ],\n        (eventName: string) => {\n          if (walletId == this.wallet.id && type == eventName) {\n            this.updateTxInfo(eventName);\n          }\n        }\n      );\n    });\n  }\n\n  ionViewWillLeave() {\n    this.events.unsubscribe('bwsEvent');\n  }\n\n  private displayFeeValues(): void {\n    this.tx.feeFiatStr = this.txFormatProvider.formatAlternativeStr(\n      this.wallet.coin,\n      this.tx.fee\n    );\n    this.tx.feeRateStr =\n      ((this.tx.fee / (this.tx.amount + this.tx.fee)) * 100).toFixed(2) + '%';\n    const feeOpts = this.feeProvider.getFeeOpts();\n    this.tx.feeLevelStr = feeOpts[this.tx.feeLevel];\n  }\n\n  private applyButtonText(): void {\n    var lastSigner =\n      _.filter(this.tx.actions, {\n        type: 'accept'\n      }).length ==\n      this.tx.requiredSignatures - 1;\n\n    if (lastSigner) {\n      this.buttonText = this.isCordova\n        ? this.translate.instant('Slide to send')\n        : this.translate.instant('Click to send');\n      this.successText = this.translate.instant('Payment Sent');\n    } else {\n      this.buttonText = this.isCordova\n        ? this.translate.instant('Slide to accept')\n        : this.translate.instant('Click to accept');\n      this.successText = this.translate.instant('Payment Accepted');\n    }\n  }\n\n  private initActionList(): void {\n    this.actionList = [];\n\n    if (!this.isShared) return;\n\n    var actionDescriptions = {\n      created: this.translate.instant('Proposal Created'),\n      accept: this.translate.instant('Accepted'),\n      reject: this.translate.instant('Rejected'),\n      broadcasted: this.translate.instant('Broadcasted')\n    };\n\n    this.actionList.push({\n      type: 'created',\n      time: this.tx.createdOn,\n      description: actionDescriptions['created'],\n      by: this.tx.creatorName\n    });\n\n    _.each(this.tx.actions, action => {\n      this.actionList.push({\n        type: action.type,\n        time: action.createdOn,\n        description: actionDescriptions[action.type],\n        by: action.copayerName\n      });\n    });\n\n    setTimeout(() => {\n      this.actionList.reverse();\n    }, 10);\n  }\n\n  private checkPaypro() {\n    if (this.tx.payProUrl) {\n      this.wallet.fetchPayPro(\n        {\n          payProUrl: this.tx.payProUrl\n        },\n        (err, paypro) => {\n          if (err) {\n            this.logger.error(err);\n            this.paymentExpired = true;\n            this.popupProvider.ionicAlert(\n              null,\n              this.translate.instant('Could not fetch the invoice')\n            );\n            return;\n          }\n          this.tx.paypro = paypro;\n          this.paymentTimeControl(this.tx.paypro.expires);\n        }\n      );\n    }\n  }\n\n  private paymentTimeControl(expirationTime) {\n    let setExpirationTime = (): void => {\n      let now = Math.floor(Date.now() / 1000);\n      if (now > expirationTime) {\n        this.paymentExpired = true;\n        if (this.countDown) clearInterval(this.countDown);\n        return;\n      }\n      let totalSecs = expirationTime - now;\n      let m = Math.floor(totalSecs / 60);\n      let s = totalSecs % 60;\n      this.expires = ('0' + m).slice(-2) + ':' + ('0' + s).slice(-2);\n    };\n\n    this.paymentExpired = false;\n    setExpirationTime();\n\n    this.countDown = setInterval(() => {\n      setExpirationTime();\n    }, 1000);\n  }\n\n  private setError(err, prefix: string): void {\n    this.loading = false;\n    this.popupProvider.ionicAlert(\n      this.translate.instant('Error'),\n      this.bwcError.msg(err, prefix)\n    );\n  }\n\n  public sign(): void {\n    this.loading = true;\n    this.walletProvider\n      .publishAndSign(this.wallet, this.tx)\n      .then(() => {\n        this.onGoingProcessProvider.clear();\n        this.openFinishModal();\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.setError(err, 'Could not send payment');\n      });\n  }\n\n  public reject(): void {\n    let title = this.translate.instant('Warning!');\n    let msg = this.translate.instant(\n      'Are you sure you want to reject this transaction?'\n    );\n    this.popupProvider\n      .ionicConfirm(title, msg, null, null)\n      .then((res: boolean) => {\n        if (!res) return;\n        this.loading = true;\n        this.onGoingProcessProvider.set('rejectTx');\n        this.walletProvider\n          .reject(this.wallet, this.tx)\n          .then(() => {\n            this.onGoingProcessProvider.clear();\n            this.close();\n          })\n          .catch(err => {\n            this.onGoingProcessProvider.clear();\n            this.setError(\n              err,\n              this.translate.instant('Could not reject payment')\n            );\n          });\n      });\n  }\n\n  public remove(): void {\n    let title = this.translate.instant('Warning!');\n    let msg = this.translate.instant(\n      'Are you sure you want to remove this transaction?'\n    );\n    this.popupProvider\n      .ionicConfirm(title, msg, null, null)\n      .then((res: boolean) => {\n        if (!res) return;\n        this.onGoingProcessProvider.set('removeTx');\n        this.walletProvider\n          .removeTx(this.wallet, this.tx)\n          .then(() => {\n            this.onGoingProcessProvider.clear();\n            this.close();\n          })\n          .catch(err => {\n            this.onGoingProcessProvider.clear();\n            if (err && !(err.message && err.message.match(/Unexpected/))) {\n              this.setError(\n                err,\n                this.translate.instant('Could not delete payment proposal')\n              );\n            }\n          });\n      });\n  }\n\n  public broadcast(): void {\n    this.loading = true;\n    this.onGoingProcessProvider.set('broadcastingTx');\n    this.walletProvider\n      .broadcastTx(this.wallet, this.tx)\n      .then(() => {\n        this.onGoingProcessProvider.clear();\n        this.openFinishModal();\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.setError(err, 'Could not broadcast payment');\n\n        this.logger.error(\n          'Could not broadcast: ',\n          this.tx.coin,\n          this.tx.network,\n          this.tx.raw\n        );\n      });\n  }\n\n  public getShortNetworkName(): string {\n    return this.wallet.credentials.networkName.substring(0, 4);\n  }\n\n  private updateTxInfo(eventName: string): void {\n    this.walletProvider\n      .getTxp(this.wallet, this.tx.id)\n      .then(tx => {\n        let action = _.find(tx.actions, {\n          copayerId: this.wallet.credentials.copayerId\n        });\n\n        this.tx = this.txFormatProvider.processTx(\n          this.wallet.coin,\n          tx,\n          this.walletProvider.useLegacyAddress()\n        );\n\n        if (!action && tx.status == 'pending') this.tx.pendingForUs = true;\n\n        this.updateCopayerList();\n        this.initActionList();\n      })\n      .catch(err => {\n        if (\n          err.message &&\n          err.message == 'Transaction proposal not found' &&\n          (eventName == 'transactionProposalRemoved' ||\n            eventName == 'TxProposalRemoved')\n        ) {\n          this.tx.removed = true;\n          this.tx.canBeRemoved = false;\n          this.tx.pendingForUs = false;\n        }\n      });\n  }\n\n  public updateCopayerList(): void {\n    _.map(this.copayers, (cp: any) => {\n      _.each(this.tx.actions, ac => {\n        if (cp.id == ac.copayerId) {\n          cp.action = ac.type;\n        }\n      });\n    });\n  }\n\n  public onConfirm(): void {\n    this.sign();\n  }\n\n  public close(): void {\n    this.loading = false;\n    this.viewCtrl.dismiss();\n  }\n\n  private openFinishModal() {\n    let modal = this.modalCtrl.create(\n      FinishModalPage,\n      { finishText: this.successText },\n      { showBackdrop: true, enableBackdropDismiss: false }\n    );\n    modal.present();\n    modal.onDidDismiss(() => {\n      this.close();\n    });\n  }\n\n  private contact(): void {\n    let addr = this.tx.toAddress;\n    this.addressBookProvider\n      .get(addr)\n      .then(ab => {\n        if (ab) {\n          let name = _.isObject(ab) ? ab.name : ab;\n          this.contactName = name;\n        }\n      })\n      .catch(err => {\n        this.logger.warn(err);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/txp-details/txp-details.ts","import { Component, ViewChild } from '@angular/core';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Vibration } from '@ionic-native/vibration';\nimport {\n  NavController,\n  NavParams,\n  Platform,\n  ViewController\n} from 'ionic-angular';\n\nimport { Animate } from '../../../directives/animate/animate';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { Logger } from '../../../providers/logger/logger';\nimport { PersistenceProvider } from '../../../providers/persistence/persistence';\n\n@Component({\n  selector: 'page-pin',\n  templateUrl: 'pin-modal.html'\n})\nexport class PinModalPage {\n  private ATTEMPT_LIMIT: number;\n  private ATTEMPT_LOCK_OUT_TIME: number;\n  private countDown;\n  public currentAttempts: number;\n  public currentPin: string;\n  public firstPinEntered: string;\n  public confirmingPin: boolean;\n  public action: string;\n  public disableButtons: boolean;\n  public expires: string;\n  public incorrect: boolean;\n  public unregister;\n\n  @ViewChild(Animate)\n  pinCode: Animate;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private platform: Platform,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private persistenceProvider: PersistenceProvider,\n    private statusBar: StatusBar,\n    private vibration: Vibration,\n    private viewCtrl: ViewController\n  ) {\n    this.ATTEMPT_LIMIT = 3;\n    this.ATTEMPT_LOCK_OUT_TIME = 5 * 60;\n    this.currentAttempts = 0;\n    this.currentPin = '';\n    this.firstPinEntered = '';\n    this.confirmingPin = false;\n    this.action = '';\n    this.disableButtons = false;\n    this.expires = '';\n    this.incorrect = false;\n\n    this.unregister = this.platform.registerBackButtonAction(() => {});\n\n    this.action = this.navParams.get('action');\n\n    if (this.action === 'checkPin' || this.action === 'lockSetUp') {\n      this.persistenceProvider.getLockStatus().then((isLocked: string) => {\n        if (!isLocked) return;\n        if (this.action === 'checkPin') {\n          this.showLockTimer();\n          this.setLockRelease();\n        }\n      });\n    }\n  }\n\n  ionViewWillEnter() {\n    if (this.platform.is('ios')) {\n      this.statusBar.styleDefault();\n    }\n  }\n\n  ionViewWillLeave() {\n    if (this.platform.is('ios')) {\n      this.statusBar.styleLightContent();\n    }\n  }\n\n  public close(cancelClicked?: boolean): void {\n    if (this.countDown) {\n      clearInterval(this.countDown);\n    }\n    this.unregister();\n    if (this.action === 'lockSetUp') this.viewCtrl.dismiss(cancelClicked);\n    else this.navCtrl.pop({ animate: true });\n  }\n\n  public newEntry(value: string): void {\n    if (this.disableButtons) return;\n    if (value === 'delete') {\n      return this.delete();\n    }\n    this.incorrect = false;\n    this.currentPin = this.currentPin + value;\n    if (!this.isComplete()) return;\n    if (this.action === 'checkPin' || this.action === 'lockSetUp') {\n      setTimeout(() => {\n        this.checkIfCorrect();\n      }, 100);\n    }\n    if (this.action === 'pinSetUp') {\n      setTimeout(() => {\n        if (!this.confirmingPin) {\n          this.confirmingPin = true;\n          this.firstPinEntered = this.currentPin;\n          this.currentPin = '';\n        } else if (this.firstPinEntered === this.currentPin) this.save();\n        else {\n          this.firstPinEntered = this.currentPin = '';\n          this.incorrect = true;\n          this.confirmingPin = false;\n          this.shakeCode();\n        }\n      }, 100);\n    }\n  }\n\n  private checkAttempts(): void {\n    this.currentAttempts += 1;\n    this.logger.info('Attempts to unlock:', this.currentAttempts);\n    this.incorrect = true;\n    if (\n      this.currentAttempts == this.ATTEMPT_LIMIT &&\n      this.action !== 'lockSetUp'\n    ) {\n      this.currentAttempts = 0;\n      this.persistenceProvider.setLockStatus('locked');\n      this.showLockTimer();\n      this.setLockRelease();\n    }\n  }\n\n  private showLockTimer() {\n    this.disableButtons = true;\n    let bannedUntil =\n      Math.floor(Date.now() / 1000) + this.ATTEMPT_LOCK_OUT_TIME;\n    this.countDown = setInterval(() => {\n      let now = Math.floor(Date.now() / 1000);\n      let totalSecs = bannedUntil - now;\n      let m = Math.floor(totalSecs / 60);\n      let s = totalSecs % 60;\n      this.expires = ('0' + m).slice(-2) + ':' + ('0' + s).slice(-2);\n    }, 1000);\n  }\n\n  private setLockRelease() {\n    setTimeout(() => {\n      clearInterval(this.countDown);\n      this.unlock();\n    }, this.ATTEMPT_LOCK_OUT_TIME * 1000);\n  }\n\n  private unlock() {\n    this.expires = this.disableButtons = null;\n    this.currentPin = this.firstPinEntered = '';\n    this.persistenceProvider.removeLockStatus();\n  }\n\n  public delete(): void {\n    if (this.disableButtons) return;\n    this.currentPin = this.currentPin.substring(0, this.currentPin.length - 1);\n  }\n\n  private isComplete(): boolean {\n    if (this.currentPin.length < 4) return false;\n    else return true;\n  }\n\n  public save(): void {\n    let lock = { method: 'pin', value: this.currentPin, bannedUntil: null };\n    this.configProvider.set({ lock });\n    this.close();\n  }\n\n  private checkIfCorrect(): void {\n    let config = this.configProvider.get();\n    let pinValue = config.lock && config.lock.value;\n    if (pinValue == this.currentPin) {\n      if (this.action === 'checkPin' || this.action === 'lockSetUp') {\n        this.close();\n      }\n    } else {\n      this.currentPin = '';\n      this.checkAttempts();\n      this.shakeCode();\n    }\n  }\n\n  public shakeCode() {\n    this.pinCode.animate('shake');\n    this.vibration.vibrate(100);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pin/pin-modal/pin-modal.ts","import { EnvironmentSchema } from './schema';\n\n/**\n * Environment: prod\n */\nconst env: EnvironmentSchema = {\n  name: 'production',\n  enableAnimations: true,\n  ratesAPI: {\n    btc: `https://api.coingecko.com/api/v3/coins/bitcoin`,\n    bch: `https://api.coingecko.com/api/v3/coins/bitcoin-cash`,\n    safe: `https://api.coingecko.com/api/v3/coins/safe-coin-2`,\n    btcz: `https://api.coingecko.com/api/v3/coins/bitcoinz`,\n    zcl: `https://api.coingecko.com/api/v3/coins/zclassic`,\n    anon: `https://api.coingecko.com/api/v3/coins/zclassic`,\n    zel: `https://api.coingecko.com/api/v3/coins/zelcash`,\n    rvn: `https://api.coingecko.com/api/v3/coins/ravencoin`,\n    ltc: `https://api.coingecko.com/api/v3/coins/litecoin`\n  },\n  activateScanner: true\n};\n\nexport default env;\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/index.ts","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/opcode.js\n// module id = 407\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n\nvar UNITS = {\n  'BTC'      : [1e8, 8],\n  'mBTC'     : [1e5, 5],\n  'uBTC'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTC}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTC/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTC(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTC);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btc = new Unit(1.3, Unit.bits).BTC;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to BTC\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.BTC;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in BTC\n *\n * @param {Number} amount - The amount in BTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromBTC = function(amount) {\n  return new Unit(amount, Unit.BTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in mBTC\n *\n * @param {Number} amount - The amount in mBTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mBTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTC/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.BTC * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in BTC\n *\n * @returns {Number} The value converted to BTC\n */\nUnit.prototype.toBTC = function() {\n  return this.to(Unit.BTC);\n};\n\n/**\n * Returns the value represented in mBTC\n *\n * @returns {Number} The value converted to mBTC\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mBTC);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTC/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTC,\n    code: Unit.BTC\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/unit.js\n// module id = 408\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/opcode.js\n// module id = 409\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n'use strict';\n\nvar UNITS = {\n  'BTCZ'      : [1e8, 8],\n  'mBTCZ'     : [1e5, 5],\n  'uBTCZ'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTCZ, mBTCZ, bits (also named uBTCZ) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTCZ}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTCZ/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTCZ(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTCZ);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btcz = new Unit(1.3, Unit.bits).BTCZ;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to BTCZ\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.BTCZ;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in BTCZ\n *\n * @param {Number} amount - The amount in BTCZ\n * @returns {Unit} A Unit instance\n */\nUnit.fromBTCZ = function(amount) {\n  return new Unit(amount, Unit.BTCZ);\n};\n\n/**\n * Returns a Unit instance created from an amount in mBTCZ\n *\n * @param {Number} amount - The amount in mBTCZ\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mBTCZ);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTCZ/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.BTCZ * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in BTCZ\n *\n * @returns {Number} The value converted to BTCZ\n */\nUnit.prototype.toBTCZ = function() {\n  return this.to(Unit.BTCZ);\n};\n\n/**\n * Returns the value represented in mBTCZ\n *\n * @returns {Number} The value converted to mBTCZ\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mBTCZ);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTCZ/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTCZ,\n    code: Unit.BTCZ\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/unit.js\n// module id = 410\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/opcode.js\n// module id = 413\n// module chunks = 0","'use strict';\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n\nvar UNITS = {\n  'BTC'      : [1e8, 8],\n  'mBTC'     : [1e5, 5],\n  'uBTC'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTC}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTC/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTC(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTC);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btc = new Unit(1.3, Unit.bits).BTC;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to BTC\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.BTC;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in BTC\n *\n * @param {Number} amount - The amount in BTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromBTC = function(amount) {\n  return new Unit(amount, Unit.BTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in mBTC\n *\n * @param {Number} amount - The amount in mBTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mBTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTC/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.BTC * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in BTC\n *\n * @returns {Number} The value converted to BTC\n */\nUnit.prototype.toBTC = function() {\n  return this.to(Unit.BTC);\n};\n\n/**\n * Returns the value represented in mBTC\n *\n * @returns {Number} The value converted to mBTC\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mBTC);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTC/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTC,\n    code: Unit.BTC\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/unit.js\n// module id = 414\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/opcode.js\n// module id = 415\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n\nvar UNITS = {\n  'RVN'      : [1e8, 8],\n  'mRVN'     : [1e5, 5],\n  'uRVN'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * RVN, mRVN, bits (also named uRVN) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromRVN}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding RVN/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromRVN(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mRVN);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var RVN = new Unit(1.3, Unit.bits).RVN;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to RVN\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.RVN;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in RVN\n *\n * @param {Number} amount - The amount in RVN\n * @returns {Unit} A Unit instance\n */\nUnit.fromRVN = function(amount) {\n  return new Unit(amount, Unit.RVN);\n};\n\n/**\n * Returns a Unit instance created from an amount in mRVN\n *\n * @param {Number} amount - The amount in mRVN\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mRVN);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate RVN/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.RVN * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in RVN\n *\n * @returns {Number} The value converted to RVN\n */\nUnit.prototype.toRVN = function() {\n  return this.to(Unit.RVN);\n};\n\n/**\n * Returns the value represented in mRVN\n *\n * @returns {Number} The value converted to mRVN\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mRVN);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between RVN/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.RVN,\n    code: Unit.RVN\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/unit.js\n// module id = 416\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/opcode.js\n// module id = 417\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n\nvar UNITS = {\n  'SAFE'      : [1e8, 8],\n  'mSAFE'     : [1e5, 5],\n  'uSAFE'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * SAFE, mSAFE, bits (also named uSAFE) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromSAFE}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding SAFE/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromSAFE(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mSAFE);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var safe = new Unit(1.3, Unit.bits).SAFE;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to SAFE\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.SAFE;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in SAFE\n *\n * @param {Number} amount - The amount in SAFE\n * @returns {Unit} A Unit instance\n */\nUnit.fromSAFE = function(amount) {\n  return new Unit(amount, Unit.SAFE);\n};\n\n/**\n * Returns a Unit instance created from an amount in mSAFE\n *\n * @param {Number} amount - The amount in mSAFE\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mSAFE);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate SAFE/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.SAFE * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in SAFE\n *\n * @returns {Number} The value converted to SAFE\n */\nUnit.prototype.toSAFE = function() {\n  return this.to(Unit.SAFE);\n};\n\n/**\n * Returns the value represented in mSAFE\n *\n * @returns {Number} The value converted to mSAFE\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mSAFE);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between SAFE/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.SAFE,\n    code: Unit.SAFE\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/unit.js\n// module id = 418\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/opcode.js\n// module id = 419\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n'use strict';\n\nvar UNITS = {\n  'BTC'      : [1e8, 8],\n  'mBTC'     : [1e5, 5],\n  'uBTC'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTC}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTC/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTC(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTC);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btc = new Unit(1.3, Unit.bits).BTC;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to BTC\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.BTC;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in BTC\n *\n * @param {Number} amount - The amount in BTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromBTC = function(amount) {\n  return new Unit(amount, Unit.BTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in mBTC\n *\n * @param {Number} amount - The amount in mBTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mBTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTC/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.BTC * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in BTC\n *\n * @returns {Number} The value converted to BTC\n */\nUnit.prototype.toBTC = function() {\n  return this.to(Unit.BTC);\n};\n\n/**\n * Returns the value represented in mBTC\n *\n * @returns {Number} The value converted to mBTC\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mBTC);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTC/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTC,\n    code: Unit.BTC\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/unit.js\n// module id = 420\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n// var $ = require('./util/preconditions');\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\nvar BaseBitcore =require('bitcore-lib'); \nvar JSUtil = BaseBitcore.util.js;\nvar $ = BaseBitcore.util.preconditions;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return new Buffer(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/opcode.js\n// module id = 421\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\n// var errors = require('./errors');\n// var $ = require('./util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\n'use strict';\n\nvar UNITS = {\n  'BTC'      : [1e8, 8],\n  'mBTC'     : [1e5, 5],\n  'uBTC'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTC}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTC/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTC(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTC);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btc = new Unit(1.3, Unit.bits).BTC;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to BTC\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.BTC;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in BTC\n *\n * @param {Number} amount - The amount in BTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromBTC = function(amount) {\n  return new Unit(amount, Unit.BTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in mBTC\n *\n * @param {Number} amount - The amount in mBTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mBTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTC/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.BTC * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in BTC\n *\n * @returns {Number} The value converted to BTC\n */\nUnit.prototype.toBTC = function() {\n  return this.to(Unit.BTC);\n};\n\n/**\n * Returns the value represented in mBTC\n *\n * @returns {Number} The value converted to mBTC\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mBTC);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTC/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTC,\n    code: Unit.BTC\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/unit.js\n// module id = 422\n// module chunks = 0","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector\n} from '@angular/core';\n@Injectable()\nexport class DomProvider {\n  constructor(\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected injector: Injector,\n    protected appRef: ApplicationRef\n  ) {}\n\n  public appendComponentToBody<T>(component: {\n    new (...args): T;\n  }): ComponentRef<T> {\n    const componentRef = this.componentFactoryResolver\n      .resolveComponentFactory<T>(component)\n      .create(this.injector);\n    this.appRef.attachView(componentRef.hostView);\n    const domElem = (componentRef.hostView as EmbeddedViewRef<T>)\n      .rootNodes[0] as HTMLElement;\n    this.appendToDom(domElem);\n    return componentRef;\n  }\n\n  protected appendToDom(domElem: HTMLElement) {\n    document.getElementsByTagName('ion-app')[0].appendChild(domElem);\n  }\n\n  public removeComponent<T>(componentRef: ComponentRef<T>) {\n    this.appRef.detachView(componentRef.hostView);\n    componentRef.destroy();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/dom/dom.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { App, Events, NavController, NavParams } from 'ionic-angular';\n\n// Pages\nimport { ScanPage } from '../../scan/scan';\nimport { TabsPage } from '../../tabs/tabs';\n\n// Providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { DerivationPathHelperProvider } from '../../../providers/derivation-path-helper/derivation-path-helper';\nimport { Logger } from '../../../providers/logger/logger';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { PushNotificationsProvider } from '../../../providers/push-notifications/push-notifications';\nimport {\n  WalletOptions,\n  WalletProvider\n} from '../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-join-wallet',\n  templateUrl: 'join-wallet.html'\n})\nexport class JoinWalletPage {\n  private defaults;\n  public showAdvOpts: boolean;\n  public seedOptions;\n  public okText: string;\n  public cancelText: string;\n  public coins: string[];\n\n  private joinForm: FormGroup;\n  private regex: RegExp;\n  private derivationPathByDefault: string;\n  private derivationPathForTestnet: string;\n  private derivationPathForLtc: string;\n  private derivationPathForZcl: string;\n  private derivationPathForRvn: string;\n  private derivationPathForSafe: string;\n\n  constructor(\n    private app: App,\n    private configProvider: ConfigProvider,\n    private form: FormBuilder,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private derivationPathHelperProvider: DerivationPathHelperProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private popupProvider: PopupProvider,\n    private profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private logger: Logger,\n    private translate: TranslateService,\n    private events: Events,\n    private pushNotificationsProvider: PushNotificationsProvider,\n    private actionSheetProvider: ActionSheetProvider\n  ) {\n    this.okText = this.translate.instant('Ok');\n    this.cancelText = this.translate.instant('Cancel');\n    this.defaults = this.configProvider.getDefaults();\n    this.derivationPathByDefault = this.derivationPathHelperProvider.default;\n    this.derivationPathForTestnet = this.derivationPathHelperProvider.defaultTestnet;\n    this.derivationPathForLtc = this.derivationPathHelperProvider.defaultLtc;\n    this.derivationPathForZcl = this.derivationPathHelperProvider.defaultZcl;\n    this.derivationPathForRvn = this.derivationPathHelperProvider.defaultRvn;\n    this.derivationPathForSafe = this.derivationPathHelperProvider.defaultSafe;\n    this.coins = ['safe', 'btcz', 'zel', 'zcl', 'anon', 'rvn', 'ltc', 'btc', 'bch' ];\n\n    this.showAdvOpts = false;\n\n    this.regex = /^[0-9A-HJ-NP-Za-z]{70,80}$/; // For invitationCode\n    this.joinForm = this.form.group({\n      myName: [null, Validators.required],\n      invitationCode: [\n        null,\n        [Validators.required, Validators.pattern(this.regex)]\n      ], // invitationCode == secret\n      bwsURL: [this.defaults.bws.url],\n      selectedSeed: ['new'],\n      recoveryPhrase: [null],\n      derivationPath: [this.derivationPathByDefault],\n      coin: [null, Validators.required]\n    });\n    this.joinForm.controls['coin'].setValue(this.coins[0]);\n    this.joinForm.controls['derivationPath'].setValue(this.derivationPathForSafe);\n\n    this.seedOptions = [\n      {\n        id: 'new',\n        label: this.translate.instant('Random'),\n        supportsTestnet: true\n      },\n      {\n        id: 'set',\n        label: this.translate.instant('Specify Recovery Phrase'),\n        supportsTestnet: false\n      }\n    ];\n    this.events.subscribe('update:invitationCode', data => {\n      let invitationCode = data.value.replace('copay:', '');\n      this.onQrCodeScannedJoin(invitationCode);\n    });\n  }\n  public setDerivationPath(): void {\n    let path: string = this.joinForm.value.testnet\n      ? this.derivationPathForTestnet\n       : this.joinForm.value.coin == 'ltc'\n        ? this.derivationPathForLtc\n         : this.joinForm.value.coin == 'zcl'\n          ? this.derivationPathForZcl\n           : this.joinForm.value.coin == 'rvn'\n            ? this.derivationPathForRvn\n             : this.joinForm.value.coin == 'safe'\n              ? this.derivationPathForSafe\n               : this.derivationPathByDefault;\n    this.joinForm.controls['derivationPath'].setValue(path);\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad JoinWalletPage');\n  }\n\n  ionViewWillEnter() {\n    if (this.navParams.data.url) {\n      let data: string = this.navParams.data.url;\n      data = data.replace('copay:', '');\n      this.onQrCodeScannedJoin(data);\n    }\n  }\n\n  ngOnDestroy() {\n    this.events.unsubscribe('update:invitationCode');\n  }\n\n  public onQrCodeScannedJoin(data: string): void {\n    if (this.regex.test(data)) {\n      this.joinForm.controls['invitationCode'].setValue(data);\n    } else {\n      const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n        'default-error',\n        {\n          msg: this.translate.instant('Invalid data'),\n          title: this.translate.instant('Error')\n        }\n      );\n      errorInfoSheet.present();\n    }\n  }\n\n  public seedOptionsChange(seed): void {\n    if (seed === 'set') {\n      this.joinForm.get('recoveryPhrase').setValidators([Validators.required]);\n    } else {\n      this.joinForm.get('recoveryPhrase').setValidators(null);\n    }\n    this.joinForm.controls['selectedSeed'].setValue(seed);\n  }\n\n  public setOptsAndJoin(): void {\n    let opts: Partial<WalletOptions> = {\n      secret: this.joinForm.value.invitationCode,\n      myName: this.joinForm.value.myName,\n      bwsurl: this.joinForm.value.bwsURL,\n      coin: this.joinForm.value.coin\n    };\n\n    let setSeed = this.joinForm.value.selectedSeed == 'set';\n    if (setSeed) {\n      let words = this.joinForm.value.recoveryPhrase;\n      if (\n        words.indexOf(' ') == -1 &&\n        words.indexOf('prv') == 1 &&\n        words.length > 108\n      ) {\n        opts.extendedPrivateKey = words;\n      } else {\n        opts.mnemonic = words;\n      }\n\n      let pathData = this.derivationPathHelperProvider.parse(\n        this.joinForm.value.derivationPath\n      );\n      if (!pathData) {\n        let title = this.translate.instant('Error');\n        let subtitle = this.translate.instant('Invalid derivation path');\n        this.popupProvider.ionicAlert(title, subtitle);\n        return;\n      }\n\n      opts.networkName = pathData.networkName;\n      opts.derivationStrategy = pathData.derivationStrategy;\n    }\n\n    if (setSeed && !opts.mnemonic && !opts.extendedPrivateKey) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant(\n        'Please enter the wallet recovery phrase'\n      );\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    }\n\n    this.join(opts);\n  }\n\n  private join(opts): void {\n    this.onGoingProcessProvider.set('joiningWallet');\n\n    this.profileProvider\n      .joinWallet(opts)\n      .then(wallet => {\n        this.onGoingProcessProvider.clear();\n        this.events.publish('status:updated');\n        this.walletProvider.updateRemotePreferences(wallet);\n        this.pushNotificationsProvider.updateSubscription(wallet);\n        this.app\n          .getRootNavs()[0]\n          .setRoot(TabsPage)\n          .then(() => {\n            this.events.publish('OpenWallet', wallet);\n          });\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        let title = this.translate.instant('Error');\n        this.popupProvider.ionicAlert(title, err);\n        return;\n      });\n  }\n\n  public openScanner(): void {\n    this.navCtrl.push(ScanPage, { fromJoin: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add/join-wallet/join-wallet.ts","import { DecimalPipe } from '@angular/common';\nimport { Component, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { App, ModalController, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Pages\nimport { FinishModalPage } from '../../finish/finish';\nimport { PayProPage } from '../../paypro/paypro';\nimport { TabsPage } from '../../tabs/tabs';\nimport { ChooseFeeLevelPage } from '../choose-fee-level/choose-fee-level';\n\n// Providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { BwcErrorProvider } from '../../../providers/bwc-error/bwc-error';\nimport { BwcProvider } from '../../../providers/bwc/bwc';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { ExternalLinkProvider } from '../../../providers/external-link/external-link';\nimport { FeeProvider } from '../../../providers/fee/fee';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { ReplaceParametersProvider } from '../../../providers/replace-parameters/replace-parameters';\nimport { TouchIdErrors } from '../../../providers/touchid/touchid';\nimport { TxConfirmNotificationProvider } from '../../../providers/tx-confirm-notification/tx-confirm-notification';\nimport { TxFormatProvider } from '../../../providers/tx-format/tx-format';\nimport {\n  Coin,\n  TransactionProposal,\n  WalletProvider\n} from '../../../providers/wallet/wallet';\nimport { WalletTabsChild } from '../../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../../wallet-tabs/wallet-tabs.provider';\n\n@Component({\n  selector: 'page-confirm',\n  templateUrl: 'confirm.html'\n})\nexport class ConfirmPage extends WalletTabsChild {\n  @ViewChild('slideButton')\n  slideButton;\n\n  private bitcore;\n  private bitcoreCash;\n  private bitcoreSafe;\n  private bitcoreBtcz;\n  private bitcoreZcl;\n  private bitcoreAnon;\n  private bitcoreZel;\n  private bitcoreRvn;\n  private bitcoreLtc;\n\n  public countDown = null;\n  public CONFIRM_LIMIT_USD: number;\n  public FEE_TOO_HIGH_LIMIT_PER: number;\n\n  public tx;\n  public wallet;\n  public wallets;\n  public noWalletMessage: string;\n  public criticalError: boolean;\n  public showAddress: boolean;\n  public walletSelectorTitle: string;\n  public buttonText: string;\n  public successText: string;\n  public paymentExpired: boolean;\n  public remainingTimeStr: string;\n  public memoFocused: boolean;\n  public amount;\n\n  // Config Related values\n  public config;\n  public configFeeLevel: string;\n\n  // Platform info\n  public isCordova: boolean;\n\n  // custom fee flag\n  public usingCustomFee: boolean = false;\n  public usingMerchantFee: boolean = false;\n\n  public isOpenSelector: boolean;\n\n  constructor(\n    private actionSheetProvider: ActionSheetProvider,\n    private app: App,\n    private bwcProvider: BwcProvider,\n    navCtrl: NavController,\n    private navParams: NavParams,\n    private logger: Logger,\n    private configProvider: ConfigProvider,\n    private replaceParametersProvider: ReplaceParametersProvider,\n    private platformProvider: PlatformProvider,\n    profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private popupProvider: PopupProvider,\n    private bwcErrorProvider: BwcErrorProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private feeProvider: FeeProvider,\n    private txConfirmNotificationProvider: TxConfirmNotificationProvider,\n    private modalCtrl: ModalController,\n    private txFormatProvider: TxFormatProvider,\n    private translate: TranslateService,\n    private externalLinkProvider: ExternalLinkProvider,\n    walletTabsProvider: WalletTabsProvider,\n    private decimalPipe: DecimalPipe\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n    this.bitcore = this.bwcProvider.getBitcore();\n    this.bitcoreCash = this.bwcProvider.getBitcoreCash();\n    this.bitcoreSafe = this.bwcProvider.getBitcoreSafe();\n    this.bitcoreBtcz = this.bwcProvider.getBitcoreBtcz();\n    this.bitcoreZcl = this.bwcProvider.getBitcoreZcl();\n    this.bitcoreAnon = this.bwcProvider.getBitcoreAnon();\n    this.bitcoreZel = this.bwcProvider.getBitcoreZel();\n    this.bitcoreRvn = this.bwcProvider.getBitcoreRvn();\n    this.bitcoreLtc = this.bwcProvider.getBitcoreLtc();\n    this.CONFIRM_LIMIT_USD = 20;\n    this.FEE_TOO_HIGH_LIMIT_PER = 15;\n    this.config = this.configProvider.get();\n    this.configFeeLevel = this.config.wallet.settings.feeLevel\n      ? this.config.wallet.settings.feeLevel\n      : 'normal';\n    this.isCordova = this.platformProvider.isCordova;\n    this.memoFocused = false;\n  }\n\n  ngOnInit() {\n    // Overrides the ngOnInit logic of WalletTabsChild\n  }\n\n  ionViewWillLeave() {\n    this.navCtrl.swipeBackEnabled = true;\n  }\n\n  ionViewWillEnter() {\n    this.navCtrl.swipeBackEnabled = false;\n    this.isOpenSelector = false;\n    let B = this.navParams.data.coin == 'bch' \n             ? this.bitcoreCash \n              : this.navParams.data.coin == 'safe' \n               ? this.bitcoreSafe \n                : this.navParams.data.coin == 'btcz' \n                 ? this.bitcoreBtcz \n                  : this.navParams.data.coin == 'zcl' \n                   ? this.bitcoreZcl \n                  : this.navParams.data.coin == 'anon' \n                   ? this.bitcoreAnon \n                  : this.navParams.data.coin == 'zel' \n                   ? this.bitcoreZel \n                    : this.navParams.data.coin == 'rvn' \n                     ? this.bitcoreRvn \n                      : this.navParams.data.coin == 'ltc' \n                       ? this.bitcoreLtc \n                        : this.bitcore;\n    let networkName;\n    try {\n      networkName = new B.Address(this.navParams.data.toAddress).network.name;\n    } catch (e) {\n      var message = this.translate.instant(\n        'Copay only supports Bitcoin Cash using new version numbers addresses'\n      );\n      var backText = this.translate.instant('Go back');\n      var learnText = this.translate.instant('Learn more');\n      this.popupProvider\n        .ionicConfirm(null, message, backText, learnText)\n        .then(back => {\n          if (!back) {\n            var url =\n              'https://support.bitpay.com/hc/en-us/articles/115004671663';\n            this.externalLinkProvider.open(url);\n          }\n          this.navCtrl.pop();\n        });\n      return;\n    }\n\n    this.tx = {\n      toAddress: this.navParams.data.toAddress,\n      sendMax: this.navParams.data.useSendMax ? true : false,\n      amount: this.navParams.data.useSendMax\n        ? 0\n        : parseInt(this.navParams.data.amount, 10),\n      description: this.navParams.data.description,\n      paypro: this.navParams.data.paypro,\n      spendUnconfirmed: this.config.wallet.spendUnconfirmed,\n\n      // Vanity tx info (not in the real tx)\n      recipientType: this.navParams.data.recipientType,\n      name: this.navParams.data.name,\n      email: this.navParams.data.email,\n      color: this.navParams.data.color,\n      network: networkName,\n      coin: this.navParams.data.coin,\n      txp: {}\n    };\n    this.tx.origToAddress = this.tx.toAddress;\n\n    if (this.navParams.data.requiredFeeRate) {\n      this.usingMerchantFee = true;\n      this.tx.feeRate = +this.navParams.data.requiredFeeRate;\n    } else {\n      this.tx.feeLevel =\n        this.tx.coin && (this.tx.coin == 'bch' || this.tx.coin == 'safe' ||\n                         this.tx.coin == 'btcz' || this.tx.coin == 'zcl' ||\n                         this.tx.coin == 'anon' ||\n                          this.tx.coin == 'zel' || this.tx.coin == 'rvn' ||\n                          this.tx.coin == 'ltc') ? 'normal ' : this.configFeeLevel;\n    }                                   \n\n    if (this.tx.coin && this.tx.coin == 'bch') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreCash\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n    if (this.tx.coin && this.tx.coin == 'safe') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreSafe\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n\n    if (this.tx.coin && this.tx.coin == 'btcz') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreBtcz\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n\n    if (this.tx.coin && this.tx.coin == 'zcl') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreZcl\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n    if (this.tx.coin && this.tx.coin == 'anon') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreAnon\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n    if (this.tx.coin && this.tx.coin == 'zel') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreZel\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n\n    if (this.tx.coin && this.tx.coin == 'rvn') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreRvn\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n\n    if (this.tx.coin && this.tx.coin == 'ltc') {\n      // Use legacy address\n      this.tx.toAddress = this.bitcoreLtc\n        .Address(this.tx.toAddress)\n        .toString();\n    }\n\n    this.getAmountDetails();\n\n    const feeOpts = this.feeProvider.getFeeOpts();\n    this.tx.feeLevelName = feeOpts[this.tx.feeLevel];\n    this.showAddress = false;\n    this.walletSelectorTitle = this.translate.instant('Send from');\n\n    this.setWalletSelector(this.tx.coin, this.tx.network, this.tx.amount)\n      .then(() => {\n        this.afterWalletSelectorSet();\n      })\n      .catch(err => {\n        this.showErrorInfoSheet(err, null, true);\n      });\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad ConfirmPage');\n  }\n\n  private getAmountDetails() {\n    this.amount = this.decimalPipe.transform(this.tx.amount / 1e8, '1.2-6');\n  }\n\n  private afterWalletSelectorSet() {\n    const parentWallet = this.getParentWallet();\n    if (\n      parentWallet &&\n      this.tx.coin === parentWallet.coin &&\n      this.tx.network === parentWallet.network\n    ) {\n      this.setWallet(parentWallet);\n    } else if (this.wallets.length > 1) {\n      return this.showWallets();\n    } else if (this.wallets.length) {\n      this.setWallet(this.wallets[0]);\n    }\n  }\n\n  private setWalletSelector(\n    coin: string,\n    network: string,\n    minAmount: number\n  ): Promise<any> {\n    const parentWallet = this.getParentWallet();\n    if (\n      parentWallet &&\n      (parentWallet.network == network && parentWallet.coin == coin)\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      // no min amount? (sendMax) => look for no empty wallets\n      minAmount = minAmount ? minAmount : 1;\n      let filteredWallets = [];\n      let index: number = 0;\n      let walletsUpdated: number = 0;\n\n      this.wallets = this.profileProvider.getWallets({\n        onlyComplete: true,\n        network,\n        coin\n      });\n\n      if (!this.wallets || !this.wallets.length) {\n        return reject(this.translate.instant('No wallets available'));\n      }\n\n      _.each(this.wallets, wallet => {\n        this.walletProvider\n          .getStatus(wallet, {})\n          .then(status => {\n            walletsUpdated++;\n            wallet.status = status;\n\n            if (!status.availableBalanceSat) {\n              this.logger.debug('No balance available in: ' + wallet.name);\n            }\n\n            if (status.availableBalanceSat > minAmount) {\n              filteredWallets.push(wallet);\n            }\n\n            if (++index == this.wallets.length) {\n              if (!walletsUpdated) return reject('Could not update any wallet');\n\n              if (_.isEmpty(filteredWallets)) {\n                return reject(this.translate.instant('Insufficient funds'));\n              }\n              this.wallets = _.clone(filteredWallets);\n              return resolve();\n            }\n          })\n          .catch(err => {\n            this.logger.error(err);\n            if (++index == this.wallets.length) {\n              if (!walletsUpdated) return reject('Could not update any wallet');\n\n              if (_.isEmpty(filteredWallets)) {\n                return reject(\n                  this.translate.instant('Insufficient funds for fee')\n                );\n              }\n              this.wallets = _.clone(filteredWallets);\n              return resolve();\n            }\n          });\n      });\n    });\n  }\n\n  /* sets a wallet on the UI, creates a TXPs for that wallet */\n\n  private setWallet(wallet): void {\n    this.wallet = wallet;\n\n    // If select another wallet\n    this.tx.coin = this.wallet.coin;\n\n    if (!this.usingCustomFee && !this.usingMerchantFee) {\n      this.tx.feeLevel = (wallet.coin == 'bch' || wallet.coin == 'safe' || wallet.coin == 'btcz' || \n                          wallet.coin == 'zcl' || wallet.coin == 'anon' ||\n            wallet.coin == 'zel' || wallet.coin == 'rvn' || wallet.coin == 'ltc') ? 'normal' : this.configFeeLevel;\n    }\n\n    this.setButtonText(this.wallet.credentials.m > 1, !!this.tx.paypro);\n\n    if (this.tx.paypro) this.paymentTimeControl(this.tx.paypro.expires);\n\n    const feeOpts = this.feeProvider.getFeeOpts();\n    this.tx.feeLevelName = feeOpts[this.tx.feeLevel];\n    this.updateTx(this.tx, this.wallet, { dryRun: true }).catch(err => {\n      let previousView = this.navCtrl.getPrevious().name;\n      switch (err) {\n        case 'insufficient_funds':\n          // Do not allow user to change or use max amount if previous view is not Amount\n          if (previousView === 'AmountPage') {\n            this.showInsufficientFundsInfoSheet();\n          } else {\n            this.showErrorInfoSheet(\n              this.translate.instant('Insufficient funds'),\n              null,\n              true\n            );\n          }\n          break;\n        default:\n          this.showErrorInfoSheet(err);\n          break;\n      }\n    });\n  }\n\n  private setButtonText(isMultisig: boolean, isPayPro: boolean): void {\n    if (isPayPro) {\n      this.buttonText = this.isCordova\n        ? this.translate.instant('Slide to pay')\n        : this.translate.instant('Click to pay');\n    } else if (isMultisig) {\n      this.buttonText = this.isCordova\n        ? this.translate.instant('Slide to accept')\n        : this.translate.instant('Click to accept');\n      this.successText =\n        this.wallet.credentials.n == 1\n          ? this.translate.instant('Payment Sent')\n          : this.translate.instant('Proposal created');\n    } else {\n      this.buttonText = this.isCordova\n        ? this.translate.instant('Slide to send')\n        : this.translate.instant('Click to send');\n      this.successText = this.translate.instant('Payment Sent');\n    }\n  }\n\n  private paymentTimeControl(expirationTime: number): void {\n    this.paymentExpired = false;\n    this.setExpirationTime(expirationTime);\n\n    let countDown = setInterval(() => {\n      this.setExpirationTime(expirationTime, countDown);\n    }, 1000);\n  }\n\n  private setExpirationTime(expirationTime: number, countDown?): void {\n    let now = Math.floor(Date.now() / 1000);\n\n    if (now > expirationTime) {\n      this.paymentExpired = true;\n      this.remainingTimeStr = this.translate.instant('Expired');\n      if (countDown) {\n        /* later */\n        clearInterval(countDown);\n      }\n      return;\n    }\n\n    let totalSecs = expirationTime - now;\n    let m = Math.floor(totalSecs / 60);\n    let s = totalSecs % 60;\n    this.remainingTimeStr = ('0' + m).slice(-2) + ':' + ('0' + s).slice(-2);\n  }\n\n  private updateTx(tx, wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (opts.clearCache) {\n        tx.txp = {};\n      }\n\n      this.tx = tx;\n\n      // End of quick refresh, before wallet is selected.\n      if (!wallet) {\n        return resolve();\n      }\n\n      let maxAllowedMerchantFee = {\n        btc: 'urgent',\n        bch: 'normal',\n        btcz: 'normal',\n        zcl: 'normal',\n        anon: 'normal',\n        zel: 'normal',\n        rvn: 'normal',\n        ltc: 'normal',\n        safe: 'normal'\n      };\n\n      this.onGoingProcessProvider.set('calculatingFee');\n      this.feeProvider\n        .getFeeRate(\n          wallet.coin,\n          tx.network,\n          this.usingMerchantFee\n            ? maxAllowedMerchantFee[wallet.coin]\n            : this.tx.feeLevel\n        )\n        .then(feeRate => {\n          let msg;\n          if (this.usingCustomFee) {\n            msg = this.translate.instant('Custom');\n            tx.feeLevelName = msg;\n          } else if (this.usingMerchantFee) {\n            let maxAllowedFee = feeRate * 2;\n            this.logger.info(\n              'Using Merchant Fee:' +\n                tx.feeRate +\n                ' vs. referent level:' +\n                maxAllowedFee\n            );\n            if (tx.network != 'testnet' && tx.feeRate > maxAllowedFee) {\n              this.onGoingProcessProvider.set('calculatingFee');\n              return reject(\n                this.translate.instant(\n                  'Merchant fee too high. Payment rejected'\n                )\n              );\n            }\n\n            msg = this.translate.instant('Suggested by Merchant');\n            tx.feeLevelName = msg;\n          } else {\n            const feeOpts = this.feeProvider.getFeeOpts();\n            tx.feeLevelName = feeOpts[tx.feeLevel];\n            tx.feeRate = feeRate;\n          }\n\n          // call getSendMaxInfo if was selected from amount view\n          if (tx.sendMax) {\n            this.useSendMax(tx, wallet, opts)\n              .then(() => {\n                return resolve();\n              })\n              .catch(err => {\n                return reject(err);\n              });\n          } else {\n            // txp already generated for this wallet?\n            if (tx.txp[wallet.id]) {\n              this.onGoingProcessProvider.clear();\n              return resolve();\n            }\n\n            this.buildTxp(tx, wallet, opts)\n              .then(() => {\n                this.onGoingProcessProvider.clear();\n                return resolve();\n              })\n              .catch(err => {\n                this.onGoingProcessProvider.clear();\n                return reject(err);\n              });\n          }\n        })\n        .catch(err => {\n          this.logger.warn('Error getting fee rate', err);\n          this.onGoingProcessProvider.clear();\n          return reject(this.translate.instant('Error getting fee rate'));\n        });\n    });\n  }\n\n  private useSendMax(tx, wallet, opts) {\n    return new Promise((resolve, reject) => {\n      this.getSendMaxInfo(_.clone(tx), wallet)\n        .then(sendMaxInfo => {\n          if (sendMaxInfo) {\n            this.logger.debug('Send max info', sendMaxInfo);\n\n            if (sendMaxInfo.amount == 0) {\n              this.showErrorInfoSheet(\n                this.translate.instant('Not enough funds for fee')\n              );\n              return resolve();\n            }\n            tx.sendMaxInfo = sendMaxInfo;\n            tx.amount = tx.sendMaxInfo.amount;\n            this.getAmountDetails();\n          }\n          this.showSendMaxWarning(wallet, sendMaxInfo);\n          // txp already generated for this wallet?\n          if (tx.txp[wallet.id]) {\n            return resolve();\n          }\n\n          this.buildTxp(tx, wallet, opts)\n            .then(() => {\n              return resolve();\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(() => {\n          let msg = this.translate.instant('Error getting SendMax information');\n          return reject(msg);\n        });\n    });\n  }\n\n  private buildTxp(tx, wallet, opts): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.getTxp(_.clone(tx), wallet, opts.dryRun)\n        .then(txp => {\n          let per = (txp.fee / (txp.amount + txp.fee)) * 100;\n          txp.feeRatePerStr = per.toFixed(2) + '%';\n          txp.feeTooHigh = per > this.FEE_TOO_HIGH_LIMIT_PER;\n\n          if (txp.feeTooHigh) {\n            const coinName =\n              this.wallet.coin === Coin.BTC \n               ? 'Bitcoin' \n                : this.wallet.coin === Coin.SAFE \n                 ? 'Safecoin' \n                  : this.wallet.coin === Coin.BTCZ \n                   ? 'Bitcoinz' \n                    : this.wallet.coin === Coin.ZCL \n                     ? 'Zclassic' \n                    : this.wallet.coin === Coin.ANON \n                     ? 'Anonymous' \n                    : this.wallet.coin === Coin.ZEL \n                     ? 'Zelcash' \n                      : this.wallet.coin === Coin.RVN \n                       ? 'Ravencoin' \n                        : this.wallet.coin === Coin.LTC \n                         ? 'Litecoin' \n                          : 'Bitcoin Cash';\n            const minerFeeInfoSheet = this.actionSheetProvider.createInfoSheet(\n              'miner-fee',\n              { coinName }\n            );\n            minerFeeInfoSheet.present();\n          }\n\n          tx.txp[wallet.id] = txp;\n          this.tx = tx;\n          this.logger.debug(\n            'Confirm. TX Fully Updated for wallet:' + wallet.id,\n            JSON.stringify(tx)\n          );\n          return resolve();\n        })\n        .catch(err => {\n          if (err.message == 'Insufficient funds') {\n            return reject('insufficient_funds');\n          } else {\n            return reject(err);\n          }\n        });\n    });\n  }\n\n  private getSendMaxInfo(tx, wallet): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!tx.sendMax) return resolve();\n\n      this.onGoingProcessProvider.set('retrievingInputs');\n      this.walletProvider\n        .getSendMaxInfo(wallet, {\n          feePerKb: tx.feeRate,\n          excludeUnconfirmedUtxos: !tx.spendUnconfirmed,\n          returnInputs: true\n        })\n        .then(res => {\n          this.onGoingProcessProvider.clear();\n          return resolve(res);\n        })\n        .catch(err => {\n          this.onGoingProcessProvider.clear();\n          this.logger.warn('Error getting send max info', err);\n          return reject(err);\n        });\n    });\n  }\n\n  private showSendMaxWarning(wallet, sendMaxInfo): void {\n    if (!sendMaxInfo) return;\n\n    let warningMsg = this.verifyExcludedUtxos(wallet, sendMaxInfo);\n\n    const coinName =\n      this.wallet.coin === Coin.BTC \n       ? 'Bitcoin (BTC)' \n        : this.wallet.coin === Coin.SAFE \n         ? 'Safecoin (SAFE)'\n          : this.wallet.coin === Coin.BTCZ \n           ? 'BitcoinZ (BTCZ)'\n            : this.wallet.coin === Coin.ZCL \n             ? 'Zclassic (ZCL)'\n            : this.wallet.coin === Coin.ANON \n             ? 'Anonymous (ANON)'\n            : this.wallet.coin === Coin.ZEL \n             ? 'Zelcash (ZEL)'\n              : this.wallet.coin === Coin.RVN \n               ? 'Ravencoin (RVN)'\n                : this.wallet.coin === Coin.LTC \n                 ? 'Litecoin (LTC)'\n                  : 'Bitcoin Cash (BCH)';\n\n    const minerFeeNoticeInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'miner-fee-notice',\n      {\n        coinName,\n        fee: sendMaxInfo.fee / 1e8,\n        coin: this.tx.coin.toUpperCase(),\n        msg: !_.isEmpty(warningMsg) ? warningMsg : ''\n      }\n    );\n    minerFeeNoticeInfoSheet.present();\n  }\n\n  private verifyExcludedUtxos(_, sendMaxInfo) {\n    let warningMsg = [];\n    if (sendMaxInfo.utxosBelowFee > 0) {\n      let amountBelowFeeStr = sendMaxInfo.amountBelowFee / 1e8;\n      let message = this.replaceParametersProvider.replace(\n        this.translate.instant(\n          'A total of {{amountBelowFeeStr}} {{coin}} were excluded. These funds come from UTXOs smaller than the network fee provided.'\n        ),\n        { amountBelowFeeStr, coin: this.tx.coin.toUpperCase() }\n      );\n      warningMsg.push(message);\n    }\n\n    if (sendMaxInfo.utxosAboveMaxSize > 0) {\n      let amountAboveMaxSizeStr = sendMaxInfo.amountAboveMaxSize / 1e8;\n      let message = this.replaceParametersProvider.replace(\n        this.translate.instant(\n          'A total of {{amountAboveMaxSizeStr}} {{coin}} were excluded. The maximum size allowed for a transaction was exceeded.'\n        ),\n        { amountAboveMaxSizeStr, coin: this.tx.coin.toUpperCase() }\n      );\n      warningMsg.push(message);\n    }\n    return warningMsg.join('\\n');\n  }\n\n  private getTxp(tx, wallet, dryRun: boolean): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // ToDo: use a credential's (or fc's) function for this\n      if (tx.description && !wallet.credentials.sharedEncryptingKey) {\n        let msg = this.translate.instant(\n          'Could not add message to imported wallet without shared encrypting key'\n        );\n        return reject(msg);\n      }\n\n      if (tx.amount > Number.MAX_SAFE_INTEGER) {\n        let msg = this.translate.instant('Amount too big');\n        return reject(msg);\n      }\n\n      let txp: Partial<TransactionProposal> = {};\n\n      txp.outputs = [\n        {\n          toAddress: tx.toAddress,\n          amount: tx.amount,\n          message: tx.description\n        }\n      ];\n\n      if (tx.sendMaxInfo) {\n        txp.inputs = tx.sendMaxInfo.inputs;\n        txp.fee = tx.sendMaxInfo.fee;\n      } else {\n        if (this.usingCustomFee || this.usingMerchantFee) {\n          txp.feePerKb = tx.feeRate;\n        } else txp.feeLevel = tx.feeLevel;\n      }\n\n      txp.message = tx.description;\n\n      if (tx.paypro) {\n        txp.payProUrl = tx.paypro.url;\n      }\n      txp.excludeUnconfirmedUtxos = !tx.spendUnconfirmed;\n      txp.dryRun = dryRun;\n\n      if (tx.recipientType == 'wallet') {\n        txp.customData = {\n          toWalletName: tx.name ? tx.name : null\n        };\n      }\n\n      this.walletProvider\n        .createTx(wallet, txp)\n        .then(ctxp => {\n          return resolve(ctxp);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private showInsufficientFundsInfoSheet(): void {\n    const insufficientFundsInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'insufficient-funds',\n      { amount: this.amount, coin: this.tx.coin }\n    );\n    insufficientFundsInfoSheet.present();\n    insufficientFundsInfoSheet.onDidDismiss(option => {\n      if (option || typeof option === 'undefined') {\n        this.isWithinWalletTabs()\n          ? this.navCtrl.pop()\n          : this.app.getRootNavs()[0].setRoot(TabsPage);\n      } else {\n        this.tx.sendMax = true;\n        this.setWallet(this.wallet);\n      }\n    });\n  }\n\n  private showErrorInfoSheet(\n    error: Error | string,\n    title?: string,\n    exit?: boolean\n  ): void {\n    if (!error) return;\n    this.logger.warn('ERROR:', error);\n    if (this.isCordova) this.slideButton.isConfirmed(false);\n    if ((error as Error).message === TouchIdErrors.fingerprintCancelled) return;\n\n    let infoSheetTitle = title ? title : this.translate.instant('Error');\n\n    const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'default-error',\n      { msg: this.bwcErrorProvider.msg(error), title: infoSheetTitle }\n    );\n    errorInfoSheet.present();\n    errorInfoSheet.onDidDismiss(() => {\n      if (exit) {\n        this.isWithinWalletTabs()\n          ? this.navCtrl.popToRoot()\n          : this.app.getRootNavs()[0].setRoot(TabsPage);\n      }\n    });\n  }\n\n  public toggleAddress(): void {\n    this.showAddress = !this.showAddress;\n  }\n\n  public onWalletSelect(wallet): void {\n    this.setWallet(wallet);\n  }\n\n  public showDescriptionPopup(tx) {\n    let message = this.translate.instant('Add Memo');\n    let opts = {\n      defaultText: tx.description\n    };\n    this.popupProvider.ionicPrompt(null, message, opts).then((res: string) => {\n      if (res) {\n        tx.description = res;\n      }\n    });\n  }\n\n  public approve(tx, wallet): Promise<void> {\n    if (!tx || !wallet) return undefined;\n\n    if (this.paymentExpired) {\n      this.popupProvider.ionicAlert(\n        null,\n        this.translate.instant('This bitcoin payment request has expired.')\n      );\n      return undefined;\n    }\n\n    this.onGoingProcessProvider.set('creatingTx');\n    return this.getTxp(_.clone(tx), wallet, false)\n      .then(txp => {\n        return this.confirmTx(tx, txp, wallet).then((nok: boolean) => {\n          if (nok) {\n            if (this.isCordova) this.slideButton.isConfirmed(false);\n            this.onGoingProcessProvider.clear();\n            return;\n          }\n          this.publishAndSign(txp, wallet);\n        });\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.warn('Error getting transaction proposal', err);\n      });\n  }\n\n  private confirmTx(_, txp, wallet) {\n    return new Promise(resolve => {\n      if (this.walletProvider.isEncrypted(wallet)) return resolve();\n      this.txFormatProvider.formatToUSD(wallet.coin, txp.amount).then(val => {\n        let amountUsd = parseFloat(val);\n        if (amountUsd <= this.CONFIRM_LIMIT_USD) return resolve();\n\n        let amount = (this.tx.amount / 1e8).toFixed(8);\n        let unit = txp.coin.toUpperCase();\n        let name = wallet.name;\n        let message = this.replaceParametersProvider.replace(\n          this.translate.instant(\n            'Sending {{amount}} {{unit}} from your {{name}} wallet'\n          ),\n          { amount, unit, name }\n        );\n        let okText = this.translate.instant('Confirm');\n        let cancelText = this.translate.instant('Cancel');\n        this.popupProvider\n          .ionicConfirm(null, message, okText, cancelText)\n          .then((ok: boolean) => {\n            return resolve(!ok);\n          });\n      });\n    });\n  }\n\n  private publishAndSign = (txp, wallet): void => {\n    if (!wallet.canSign() && !wallet.isPrivKeyExternal()) {\n      this.onlyPublish(txp, wallet);\n      return;\n    }\n\n    this.walletProvider\n      .publishAndSign(wallet, txp)\n      .then(txp => {\n        this.onGoingProcessProvider.clear();\n        if (\n          this.config.confirmedTxsNotifications &&\n          this.config.confirmedTxsNotifications.enabled\n        ) {\n          this.txConfirmNotificationProvider.subscribe(wallet, {\n            txid: txp.txid\n          });\n        }\n        this.openFinishModal();\n      })\n      .catch(err => {\n        if (this.isCordova) this.slideButton.isConfirmed(false);\n        this.onGoingProcessProvider.clear();\n        this.showErrorInfoSheet(err);\n      });\n  };\n\n  private onlyPublish(txp, wallet): Promise<void> {\n    this.logger.info('No signing proposal: No private key');\n    this.onGoingProcessProvider.set('sendingTx');\n    return this.walletProvider\n      .onlyPublish(wallet, txp)\n      .then(() => {\n        this.onGoingProcessProvider.clear();\n        this.openFinishModal(true);\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.showErrorInfoSheet(err);\n      });\n  }\n\n  private async openFinishModal(onlyPublish?: boolean) {\n    let params: { finishText: string; finishComment?: string } = {\n      finishText: this.successText\n    };\n    if (onlyPublish) {\n      let finishText = this.translate.instant('Payment Published');\n      let finishComment = this.translate.instant(\n        'You could sign the transaction later in your wallet details'\n      );\n      params = { finishText, finishComment };\n    }\n    let modal = this.modalCtrl.create(FinishModalPage, params, {\n      showBackdrop: true,\n      enableBackdropDismiss: false\n    });\n    await modal.present();\n\n    this.isWithinWalletTabs()\n      ? this.close()\n      : this.app.getRootNavs()[0].setRoot(TabsPage);\n  }\n\n  public openPPModal(): void {\n    if (!this.wallet) return;\n    let modal = this.modalCtrl.create(\n      PayProPage,\n      {\n        tx: this.tx,\n        wallet: this.wallet\n      },\n      {\n        showBackdrop: true,\n        enableBackdropDismiss: true\n      }\n    );\n    modal.present();\n  }\n\n  public chooseFeeLevel(): void {\n    if (this.tx.coin == 'bch') return;\n    if (this.tx.coin == 'safe') return;\n    if (this.tx.coin == 'btcz') return;\n    if (this.tx.coin == 'zcl') return;\n    if (this.tx.coin == 'anon') return;\n    if (this.tx.coin == 'zel') return;\n    if (this.tx.coin == 'rvn') return;\n    if (this.tx.coin == 'ltc') return;\n    if (this.usingMerchantFee) return; // TODO: should we allow override?\n\n    let txObject = {\n      network: this.tx.network,\n      feeLevel: this.tx.feeLevel,\n      noSave: true,\n      coin: this.tx.coin,\n      customFeePerKB: this.usingCustomFee ? this.tx.feeRate : undefined,\n      feePerSatByte: this.usingCustomFee ? this.tx.feeRate / 1000 : undefined\n    };\n\n    const myModal = this.modalCtrl.create(ChooseFeeLevelPage, txObject, {\n      showBackdrop: true,\n      enableBackdropDismiss: false\n    });\n\n    myModal.present();\n\n    myModal.onDidDismiss(data => {\n      this.onFeeModalDismiss(data);\n    });\n  }\n\n  private onFeeModalDismiss(data) {\n    if (_.isEmpty(data)) return;\n\n    this.logger.debug(\n      'New fee level chosen:' + data.newFeeLevel + ' was:' + this.tx.feeLevel\n    );\n    this.usingCustomFee = data.newFeeLevel == 'custom' ? true : false;\n\n    if (this.tx.feeLevel == data.newFeeLevel && !this.usingCustomFee) {\n      return;\n    }\n\n    this.tx.feeLevel = data.newFeeLevel;\n    const feeOpts = this.feeProvider.getFeeOpts();\n    this.tx.feeLevelName = feeOpts[this.tx.feeLevel];\n    if (this.usingCustomFee)\n      this.tx.feeRate = parseInt(data.customFeePerKB, 10);\n\n    this.updateTx(this.tx, this.wallet, {\n      clearCache: true,\n      dryRun: true\n    }).catch(err => {\n      this.logger.warn('Error updateTx', err);\n    });\n  }\n\n  public showWallets(): void {\n    this.isOpenSelector = true;\n    let id = this.wallet ? this.wallet.credentials.walletId : null;\n    const params = {\n      wallets: this.wallets,\n      selectedWalletId: id,\n      title: this.walletSelectorTitle\n    };\n    const walletSelector = this.actionSheetProvider.createWalletSelector(\n      params\n    );\n    walletSelector.present();\n    walletSelector.onDidDismiss(wallet => {\n      this.onSelectWalletEvent(wallet);\n    });\n  }\n\n  private onSelectWalletEvent(wallet): void {\n    if (!_.isEmpty(wallet)) this.onWalletSelect(wallet);\n    this.isOpenSelector = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/send/confirm/confirm.ts","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { PersistenceProvider } from '../persistence/persistence';\n\n@Injectable()\nexport class TxConfirmNotificationProvider {\n  constructor(\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider\n  ) {\n    this.logger.info('TxConfirmNotificationProvider initialized.');\n  }\n\n  public checkIfEnabled(txid: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getTxConfirmNotification(txid)\n        .then(res => {\n          return resolve(!!res);\n        })\n        .catch(err => {\n          this.logger.error(err);\n          return reject(err);\n        });\n    });\n  }\n\n  public subscribe(client, opts): void {\n    client.txConfirmationSubscribe(opts, err => {\n      if (err) this.logger.error(err);\n      this.persistenceProvider\n        .setTxConfirmNotification(opts.txid, true)\n        .catch(err => {\n          this.logger.error(err);\n          return;\n        });\n    });\n  }\n\n  public unsubscribe(client, txId: string): void {\n    client.txConfirmationUnsubscribe(txId, err => {\n      if (err) this.logger.error(err);\n      this.persistenceProvider.removeTxConfirmNotification(txId).catch(err => {\n        this.logger.error(err);\n        return;\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tx-confirm-notification/tx-confirm-notification.ts","import { Injectable } from '@angular/core';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToastController } from 'ionic-angular';\n\n// providers\nimport { Logger } from '../../providers/logger/logger';\nimport { NodeWebkitProvider } from '../../providers/node-webkit/node-webkit';\nimport { PlatformProvider } from '../../providers/platform/platform';\n\n@Injectable()\nexport class ClipboardProvider {\n  private isCordova: boolean;\n  private isNW: boolean;\n\n  constructor(\n    public toastCtrl: ToastController,\n    public platform: PlatformProvider,\n    public logger: Logger,\n    public translate: TranslateService,\n    private clipboard: Clipboard,\n    private nodeWebkitProvider: NodeWebkitProvider\n  ) {\n    this.logger.info('ClipboardProvider initialized.');\n    this.isCordova = this.platform.isCordova;\n    this.isNW = this.platform.isNW;\n  }\n\n  public async getData(): Promise<any> {\n    return this.paste();\n  }\n\n  public copy(value: string) {\n    if (this.isCordova) {\n      this.clipboard.copy(value);\n    } else if (this.isNW) {\n      this.nodeWebkitProvider.writeToClipboard(value);\n    } else {\n      throw new Error('Copied to Clipboard using a Web Browser.');\n    }\n  }\n\n  private async paste(): Promise<any> {\n    if (this.isCordova) {\n      return this.clipboard.paste();\n    } else if (this.isNW) {\n      return this.nodeWebkitProvider.readFromClipboard();\n    } else {\n      this.logger.warn('Paste from clipboard not supported');\n      return;\n    }\n  }\n\n  public clear(): void {\n    if (this.isCordova) {\n      this.clipboard.copy(null);\n    } else if (this.isNW) {\n      this.nodeWebkitProvider.clearClipboard();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/clipboard/clipboard.ts","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// providers\nimport { AppProvider } from '../../providers/app/app';\nimport { Logger } from '../../providers/logger/logger';\n\n@Injectable()\nexport class FeedbackProvider {\n  private URL;\n\n  constructor(\n    private http: HttpClient,\n    private logger: Logger,\n    private appProvider: AppProvider\n  ) {\n    // Get more info: https://mashe.hawksey.info/2014/07/google-sheets-as-a-database-insert-with-apps-script-using-postget-methods-with-ajax-example/\n    this.URL =\n      this.appProvider.servicesInfo &&\n      this.appProvider.servicesInfo.feedbackSheetURL\n        ? this.appProvider.servicesInfo.feedbackSheetURL\n        : null;\n  }\n\n  public send(dataSrc): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (!this.URL) return resolve();\n\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      });\n      const urlSearchParams = new HttpParams()\n        .set('Email', dataSrc.email)\n        .set('Feedback', dataSrc.feedback)\n        .set('Score', dataSrc.score)\n        .set('AppVersion', dataSrc.appVersion)\n        .set('Platform', dataSrc.platform)\n        .set('DeviceVersion', dataSrc.deviceVersion);\n\n      this.http\n        .post(this.URL, null, {\n          params: urlSearchParams,\n          headers\n        })\n        .subscribe(\n          () => {\n            this.logger.info('SUCCESS: Feedback sent');\n            return resolve();\n          },\n          err => {\n            this.logger.info('ERROR: Feedback sent anyway.');\n            return reject(err);\n          }\n        );\n    });\n  }\n\n  public isVersionUpdated(currentVersion, savedVersion) {\n    let verifyTagFormat = tag => {\n      let regex = /^v?\\d+\\.\\d+\\.\\d+$/i;\n      return regex.exec(tag);\n    };\n\n    let formatTagNumber = tag => {\n      let formattedNumber = tag.replace(/^v/i, '').split('.');\n      return {\n        major: +formattedNumber[0],\n        minor: +formattedNumber[1],\n        patch: +formattedNumber[2]\n      };\n    };\n\n    if (!verifyTagFormat(currentVersion)) {\n      return 'Cannot verify the format of version tag: ' + currentVersion;\n    }\n    if (!verifyTagFormat(savedVersion)) {\n      return (\n        'Cannot verify the format of the saved version tag: ' + savedVersion\n      );\n    }\n\n    let current = formatTagNumber(currentVersion);\n    let saved = formatTagNumber(savedVersion);\n    if (saved.major == current.major && saved.minor == current.minor) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/feedback/feedback.ts","import { Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalController, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\n\n// native\nimport { Device } from '@ionic-native/device';\nimport { LaunchReview } from '@ionic-native/launch-review';\n\n// providers\nimport {\n  ActionSheetProvider,\n  ExternalLinkProvider,\n  PlatformProvider\n} from '../../../providers';\nimport { AppProvider } from '../../../providers/app/app';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { FeedbackProvider } from '../../../providers/feedback/feedback';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../providers/popup/popup';\n\n// pages\nimport { FinishModalPage } from '../../finish/finish';\n\n@Component({\n  selector: 'page-send-feedback',\n  templateUrl: 'send-feedback.html'\n})\nexport class SendFeedbackPage {\n  @ViewChild('focusMe')\n  feedbackTextarea;\n\n  public feedback: string;\n  public score: number;\n  public reaction: string;\n  public comment: string;\n  public appName: string;\n  public feedbackForm: FormGroup;\n  public leavingFeedback: boolean;\n  public isCordova: boolean;\n  public fromCard: boolean;\n\n  constructor(\n    private actionSheetProvider: ActionSheetProvider,\n    private configProvider: ConfigProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private launchReview: LaunchReview,\n    private modalCtrl: ModalController,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private platformProvider: PlatformProvider,\n    private appProvider: AppProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private feedbackProvider: FeedbackProvider,\n    private formBuilder: FormBuilder,\n    private popupProvider: PopupProvider,\n    private translate: TranslateService,\n    private device: Device\n  ) {\n    this.feedbackForm = this.formBuilder.group({\n      comment: [\n        '',\n        Validators.compose([Validators.minLength(1), Validators.required])\n      ]\n    });\n    this.fromCard = this.navParams.data.fromCard;\n    this.score = this.navParams.data.score;\n    this.appName = this.appProvider.info.nameCase;\n    this.leavingFeedback = false;\n    this.isCordova = this.platformProvider.isCordova;\n  }\n\n  ionViewWillEnter() {\n    switch (this.score) {\n      case 1:\n        this.reaction = this.translate.instant('Ouch!');\n        this.comment = this.translate.instant(\n          \"There's obviously something we're doing wrong. How could we improve your experience?\"\n        );\n        break;\n      case 2:\n        this.reaction = this.translate.instant('Thanks!');\n        this.comment = this.translate.instant(\n          \"We're always listening for ways we can improve your experience. Is there anything we could do to improve your experience?\"\n        );\n        break;\n      case 3:\n        this.reaction = 'Thanks!';\n        this.comment = this.translate.instant(\n          \"We're always listening for ways we can improve your experience. Feel free to leave us a review in the app store or request a new feature.\"\n        );\n        break;\n      default:\n        this.reaction = 'Feedback!';\n        this.comment = this.translate.instant(\n          \"We're always listening for ways we can improve your experience. Feel free to leave us a review in the app store or request a new feature. Also, let us know if you experience any technical issues.\"\n        );\n        break;\n    }\n  }\n\n  public showAppreciationSheet(): void {\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'appreciate-review'\n    );\n    infoSheet.present();\n    infoSheet.onDidDismiss(async option => {\n      if (!option) return;\n      if (this.launchReview.isRatingSupported()) {\n        this.launchReview.rating();\n      } else {\n        await this.launchReview.launch();\n      }\n    });\n  }\n\n  public leaveFeedback() {\n    this.leavingFeedback = this.leavingFeedback ? false : true;\n    if (this.leavingFeedback)\n      setTimeout(() => {\n        this.feedbackTextarea.setFocus();\n      }, 50);\n  }\n\n  public async openExternalLink(url: string): Promise<void> {\n    await this.externalLinkProvider.open(url);\n  }\n\n  public async sendFeedback(feedback: string, goHome: boolean): Promise<void> {\n    let config = this.configProvider.get();\n\n    let platform = this.device.platform || 'Unknown platform';\n    let version = this.device.version || 'Unknown version';\n\n    let dataSrc = {\n      email: _.values(config.emailFor)[0] || ' ',\n      feedback: goHome ? ' ' : feedback,\n      score: this.score || ' ',\n      appVersion: this.appProvider.info.version,\n      platform,\n      deviceVersion: version\n    };\n\n    if (!goHome) this.onGoingProcessProvider.set('sendingFeedback');\n    this.feedbackProvider\n      .send(dataSrc)\n      .then(async () => {\n        if (goHome) return;\n        this.onGoingProcessProvider.clear();\n        let params: { finishText: string; finishComment?: string } = {\n          finishText: 'Thanks',\n          finishComment:\n            'A member of the team will review your feedback as soon as possible.'\n        };\n        let modal = this.modalCtrl.create(FinishModalPage, params, {\n          showBackdrop: true,\n          enableBackdropDismiss: false\n        });\n        await modal.present();\n        this.navCtrl.popToRoot({ animate: false });\n      })\n      .catch(() => {\n        if (goHome) return;\n        this.onGoingProcessProvider.clear();\n        let title = this.translate.instant('Error');\n        let subtitle = this.translate.instant(\n          'Feedback could not be submitted. Please try again later.'\n        );\n        this.popupProvider.ionicAlert(title, subtitle);\n      });\n    if (goHome) {\n      this.navCtrl.popToRoot({ animate: false });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/feedback/send-feedback/send-feedback.ts","/* Native modules */\nexport { AndroidFingerprintAuth } from '@ionic-native/android-fingerprint-auth';\nexport { Clipboard } from '@ionic-native/clipboard';\nexport { Device } from '@ionic-native/device';\nexport { FCM } from '@ionic-native/fcm';\nexport { File } from '@ionic-native/file';\nexport { LaunchReview } from '@ionic-native/launch-review';\nexport { QRScanner } from '@ionic-native/qr-scanner';\nexport { ScreenOrientation } from '@ionic-native/screen-orientation';\nexport { SocialSharing } from '@ionic-native/social-sharing';\nexport { SplashScreen } from '@ionic-native/splash-screen';\nexport { StatusBar } from '@ionic-native/status-bar';\nexport { Toast } from '@ionic-native/toast';\nexport { TouchID } from '@ionic-native/touch-id';\nexport { Vibration } from '@ionic-native/vibration';\nexport { UserAgent } from '@ionic-native/user-agent';\n\n/* Providers */\nexport { ActionSheetProvider } from '../providers/action-sheet/action-sheet';\nexport { AddressBookProvider } from '../providers/address-book/address-book';\nexport { AddressProvider } from '../providers/address/address';\n// export { AmazonProvider } from '../providers/amazon/amazon';\nexport { AppIdentityProvider } from '../providers/app-identity/app-identity';\nexport { AppProvider } from '../providers/app/app';\nexport { BackupProvider } from '../providers/backup/backup';\n// export {\n//  BitPayAccountProvider\n// } from '../providers/bitpay-account/bitpay-account';\n// export { BitPayCardProvider } from '../providers/bitpay-card/bitpay-card';\n// export { BitPayProvider } from '../providers/bitpay/bitpay';\nexport { BwcErrorProvider } from '../providers/bwc-error/bwc-error';\nexport { BwcProvider } from '../providers/bwc/bwc';\nexport { ClipboardProvider } from '../providers/clipboard/clipboard';\n// export { CoinbaseProvider } from '../providers/coinbase/coinbase';\nexport { ConfigProvider } from '../providers/config/config';\nexport {\n  DerivationPathHelperProvider\n} from '../providers/derivation-path-helper/derivation-path-helper';\nexport { DomProvider } from '../providers/dom/dom';\nexport {\n  EmailNotificationsProvider\n} from '../providers/email-notifications/email-notifications';\nexport { ExternalLinkProvider } from '../providers/external-link/external-link';\nexport { FeeProvider } from '../providers/fee/fee';\nexport { FeedbackProvider } from '../providers/feedback/feedback';\nexport { FilterProvider } from '../providers/filter/filter';\n// export { GlideraProvider } from '../providers/glidera/glidera';\nexport {\n  HomeIntegrationsProvider\n} from '../providers/home-integrations/home-integrations';\nexport { IncomingDataProvider } from '../providers/incoming-data/incoming-data';\nexport { LanguageProvider } from '../providers/language/language';\nexport { Logger } from '../providers/logger/logger';\n// export { MercadoLibreProvider } from '../providers/mercado-libre/mercado-libre';\nexport { NodeWebkitProvider } from '../providers/node-webkit/node-webkit';\nexport {\n  OnGoingProcessProvider\n} from '../providers/on-going-process/on-going-process';\nexport { PayproProvider } from '../providers/paypro/paypro';\nexport { PersistenceProvider } from '../providers/persistence/persistence';\nexport { PlatformProvider } from '../providers/platform/platform';\nexport { PopupProvider } from '../providers/popup/popup';\nexport { ProfileProvider } from '../providers/profile/profile';\nexport {\n  PushNotificationsProvider\n} from '../providers/push-notifications/push-notifications';\nexport { RateProvider } from '../providers/rate/rate';\nexport { ReleaseProvider } from '../providers/release/release';\nexport {\n  ReplaceParametersProvider\n} from '../providers/replace-parameters/replace-parameters';\nexport { ScanProvider } from '../providers/scan/scan';\n// export { ShapeshiftProvider } from '../providers/shapeshift/shapeshift';\nexport { TimeProvider } from '../providers/time/time';\nexport { TouchIdProvider } from '../providers/touchid/touchid';\nexport {\n  TxConfirmNotificationProvider\n} from '../providers/tx-confirm-notification/tx-confirm-notification';\nexport { TxFormatProvider } from '../providers/tx-format/tx-format';\nexport { WalletProvider } from '../providers/wallet/wallet';\nexport { WalletTabsProvider } from '../pages/wallet-tabs/wallet-tabs.provider';\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/index.ts","import { Directive, ElementRef, Renderer } from '@angular/core';\n\n@Directive({\n  selector: '[animate]'\n})\nexport class Animate {\n  constructor(public el: ElementRef, public renderer: Renderer) {}\n\n  animate(animationName: string) {\n    this.renderer.setElementClass(this.el.nativeElement, animationName, true);\n    setTimeout(() => {\n      this.renderer.setElementClass(\n        this.el.nativeElement,\n        animationName,\n        false\n      );\n    }, 600);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/animate/animate.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { ExternalLinkProvider } from '../../../providers/external-link/external-link';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { TouchIdProvider } from '../../../providers/touchid/touchid';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\n// pages\nimport { BackupWarningPage } from '../../backup/backup-warning/backup-warning';\nimport { WalletColorPage } from './wallet-color/wallet-color';\nimport { WalletNamePage } from './wallet-name/wallet-name';\nimport { BitcoinCashPage } from './wallet-settings-advanced/bitcoin-cash/bitcoin-cash';\nimport { WalletAddressesPage } from './wallet-settings-advanced/wallet-addresses/wallet-addresses';\nimport { WalletDeletePage } from './wallet-settings-advanced/wallet-delete/wallet-delete';\nimport { WalletExportPage } from './wallet-settings-advanced/wallet-export/wallet-export';\nimport { WalletInformationPage } from './wallet-settings-advanced/wallet-information/wallet-information';\nimport { WalletServiceUrlPage } from './wallet-settings-advanced/wallet-service-url/wallet-service-url';\nimport { WalletTransactionHistoryPage } from './wallet-settings-advanced/wallet-transaction-history/wallet-transaction-history';\n\n@Component({\n  selector: 'page-wallet-settings',\n  templateUrl: 'wallet-settings.html'\n})\nexport class WalletSettingsPage {\n  public wallet;\n  public canSign: boolean;\n  public needsBackup: boolean;\n  public hiddenBalance: boolean;\n  public encryptEnabled: boolean;\n  public touchIdEnabled: boolean;\n  public touchIdPrevValue: boolean;\n  public touchIdAvailable: boolean;\n  public deleted: boolean = false;\n  private config;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private logger: Logger,\n    private walletProvider: WalletProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private configProvider: ConfigProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private touchIdProvider: TouchIdProvider,\n    private translate: TranslateService,\n    private actionSheetProvider: ActionSheetProvider\n  ) {}\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletSettingsPage');\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.canSign = this.wallet.canSign();\n    this.needsBackup = this.wallet.needsBackup;\n    this.hiddenBalance = this.wallet.balanceHidden;\n    this.encryptEnabled = this.walletProvider.isEncrypted(this.wallet);\n    this.touchIdProvider.isAvailable().then((isAvailable: boolean) => {\n      this.touchIdAvailable = isAvailable;\n    });\n    this.config = this.configProvider.get();\n    this.touchIdEnabled = this.config.touchIdFor\n      ? this.config.touchIdFor[this.wallet.credentials.walletId]\n      : null;\n    this.touchIdPrevValue = this.touchIdEnabled;\n    if (\n      this.wallet.credentials &&\n      !this.wallet.credentials.mnemonicEncrypted &&\n      !this.wallet.credentials.mnemonic\n    ) {\n      this.deleted = true;\n    }\n  }\n\n  public hiddenBalanceChange(): void {\n    this.profileProvider.toggleHideBalanceFlag(\n      this.wallet.credentials.walletId\n    );\n  }\n\n  public encryptChange(): void {\n    if (!this.wallet) return;\n    let val = this.encryptEnabled;\n\n    if (val && !this.walletProvider.isEncrypted(this.wallet)) {\n      this.logger.debug('Encrypting private key for', this.wallet.name);\n      this.walletProvider\n        .encrypt(this.wallet)\n        .then(() => {\n          this.profileProvider.updateCredentials(\n            JSON.parse(this.wallet.export())\n          );\n          this.logger.debug('Wallet encrypted');\n        })\n        .catch(err => {\n          this.encryptEnabled = false;\n          let title = this.translate.instant('Could not encrypt wallet');\n          this.showErrorInfoSheet(err, title);\n        });\n    } else if (!val && this.walletProvider.isEncrypted(this.wallet)) {\n      this.walletProvider\n        .decrypt(this.wallet)\n        .then(() => {\n          this.profileProvider.updateCredentials(\n            JSON.parse(this.wallet.export())\n          );\n          this.logger.debug('Wallet decrypted');\n        })\n        .catch(err => {\n          this.encryptEnabled = true;\n          let title = this.translate.instant('Could not decrypt wallet');\n          this.showErrorInfoSheet(err, title);\n        });\n    }\n  }\n\n  private showErrorInfoSheet(\n    err: Error | string,\n    infoSheetTitle: string\n  ): void {\n    if (!err) return;\n    this.logger.warn('Could not encrypt/decrypt wallet:', err);\n    const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'default-error',\n      { msg: err, title: infoSheetTitle }\n    );\n    errorInfoSheet.present();\n  }\n\n  public openSupportSpendingPassword(): void {\n    let url =\n      'https://support.bitpay.com/hc/en-us/articles/360000244506-What-Does-a-Spending-Password-Do-';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('Read more in our support page');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public touchIdChange(): void {\n    if (this.touchIdPrevValue == this.touchIdEnabled) return;\n    let newStatus = this.touchIdEnabled;\n    this.walletProvider\n      .setTouchId(this.wallet, newStatus)\n      .then(() => {\n        this.touchIdPrevValue = this.touchIdEnabled;\n        this.logger.debug('Touch Id status changed: ' + newStatus);\n      })\n      .catch(() => {\n        this.touchIdEnabled = this.touchIdPrevValue;\n      });\n  }\n\n  public openWalletName(): void {\n    this.navCtrl.push(WalletNamePage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n\n  public openWalletColor(): void {\n    this.navCtrl.push(WalletColorPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n\n  public openBackupSettings(): void {\n    this.navCtrl.push(BackupWarningPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n\n  public openWalletInformation(): void {\n    this.navCtrl.push(WalletInformationPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n  public openWalletAddresses(): void {\n    this.navCtrl.push(WalletAddressesPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n  public openExportWallet(): void {\n    this.navCtrl.push(WalletExportPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n  public openWalletServiceUrl(): void {\n    this.navCtrl.push(WalletServiceUrlPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n  public openTransactionHistory(): void {\n    this.navCtrl.push(WalletTransactionHistoryPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n  public openDeleteWallet(): void {\n    this.navCtrl.push(WalletDeletePage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n  public openBitcoinCashPage(): void {\n    this.navCtrl.push(BitcoinCashPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalController, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// providers\nimport { BwcErrorProvider } from '../../../../../providers/bwc-error/bwc-error';\nimport { OnGoingProcessProvider } from '../../../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\nimport { TxFormatProvider } from '../../../../../providers/tx-format/tx-format';\nimport { WalletProvider } from '../../../../../providers/wallet/wallet';\n\n// pages\nimport { AllAddressesPage } from './all-addresses/all-addresses';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-wallet-addresses',\n  templateUrl: 'wallet-addresses.html'\n})\nexport class WalletAddressesPage {\n  public wallet;\n  public loading: boolean;\n  public latestUnused;\n  public latestWithBalance;\n  public viewAll: boolean;\n  public gapReached: boolean;\n  public lowUtxosNb: number;\n  public allUtxosNb: number;\n  public lowUtxosSum: string;\n  public allUtxosSum: string;\n  public minFee: string;\n  public minFeePer: string;\n\n  private UNUSED_ADDRESS_LIMIT: number;\n  private BALANCE_ADDRESS_LIMIT: number;\n  private withBalance;\n  private noBalance;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private logger: Logger,\n    private bwcErrorProvider: BwcErrorProvider,\n    private popupProvider: PopupProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private modalCtrl: ModalController,\n    private txFormatProvider: TxFormatProvider,\n    private translate: TranslateService\n  ) {\n    this.UNUSED_ADDRESS_LIMIT = 5;\n    this.BALANCE_ADDRESS_LIMIT = 5;\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.withBalance = null;\n    this.noBalance = null;\n  }\n\n  ionViewWillEnter() {\n    this.loading = true;\n    this.walletProvider\n      .getMainAddresses(this.wallet, {})\n      .then(allAddresses => {\n        this.walletProvider\n          .getBalance(this.wallet, {})\n          .then(resp => {\n            this.withBalance = resp.byAddress;\n\n            var idx = _.keyBy(this.withBalance, 'address');\n            this.noBalance = _.reject(allAddresses, x => {\n              return idx[x.address];\n            });\n\n            this.processList(this.noBalance);\n            this.processList(this.withBalance);\n\n            this.latestUnused = _.slice(\n              this.noBalance,\n              0,\n              this.UNUSED_ADDRESS_LIMIT\n            );\n            this.latestWithBalance = _.slice(\n              this.withBalance,\n              0,\n              this.BALANCE_ADDRESS_LIMIT\n            );\n            this.viewAll =\n              this.noBalance.length > this.UNUSED_ADDRESS_LIMIT ||\n              this.withBalance.length > this.BALANCE_ADDRESS_LIMIT;\n\n            this.loading = false;\n          })\n          .catch(err => {\n            this.logger.error(err);\n            this.loading = false;\n            this.popupProvider.ionicAlert(\n              this.bwcErrorProvider.msg(\n                err,\n                this.translate.instant('Could not update wallet')\n              )\n            );\n          });\n      })\n      .catch(err => {\n        this.logger.error(err);\n        this.loading = false;\n        this.popupProvider.ionicAlert(\n          this.bwcErrorProvider.msg(\n            err,\n            this.translate.instant('Could not update wallet')\n          )\n        );\n      });\n\n    this.walletProvider\n      .getLowUtxos(this.wallet)\n      .then(resp => {\n        if (resp && resp.allUtxos && resp.allUtxos.length) {\n          let allSum = _.sumBy(resp.allUtxos || 0, 'satoshis');\n          let per = (resp.minFee / allSum) * 100;\n\n          this.lowUtxosNb = resp.lowUtxos.length;\n          this.allUtxosNb = resp.allUtxos.length;\n          this.lowUtxosSum = this.txFormatProvider.formatAmountStr(\n            this.wallet.coin,\n            _.sumBy(resp.lowUtxos || 0, 'satoshis')\n          );\n          this.allUtxosSum = this.txFormatProvider.formatAmountStr(\n            this.wallet.coin,\n            allSum\n          );\n          this.minFee = this.txFormatProvider.formatAmountStr(\n            this.wallet.coin,\n            resp.minFee || 0\n          );\n          this.minFeePer = per.toFixed(2) + '%';\n        }\n      })\n      .catch(err => {\n        this.logger.warn('GetLowUtxos', err);\n      });\n  }\n\n  private processList(list): void {\n    _.each(list, n => {\n      n.path = n.path ? n.path.replace(/^m/g, 'xpub') : null;\n      n.address = this.walletProvider.getAddressView(this.wallet, n.address);\n    });\n  }\n\n  public newAddress(): void {\n    if (this.gapReached) return;\n\n    this.onGoingProcessProvider.set('generatingNewAddress');\n    this.walletProvider\n      .getAddress(this.wallet, true)\n      .then((addr: string) => {\n        this.walletProvider\n          .getMainAddresses(this.wallet, { limit: 1 })\n          .then(_addr => {\n            this.onGoingProcessProvider.clear();\n            if (addr != _addr[0].address) {\n              this.popupProvider.ionicAlert(\n                this.translate.instant('Error'),\n                this.translate.instant(\n                  'New address could not be generated. Please try again.'\n                )\n              );\n              return;\n            }\n            this.noBalance = [_addr[0]].concat(this.noBalance);\n\n            this.processList(this.noBalance);\n\n            this.latestUnused = _.slice(\n              this.noBalance,\n              0,\n              this.UNUSED_ADDRESS_LIMIT\n            );\n            this.viewAll = this.noBalance.length > this.UNUSED_ADDRESS_LIMIT;\n          })\n          .catch(err => {\n            this.logger.error(err);\n            this.onGoingProcessProvider.clear();\n            this.popupProvider.ionicAlert(this.translate.instant('Error'), err);\n          });\n      })\n      .catch(err => {\n        this.logger.error(err);\n        this.onGoingProcessProvider.clear();\n        if (err.toString().match('MAIN_ADDRESS_GAP_REACHED')) {\n          this.gapReached = true;\n        } else {\n          this.popupProvider.ionicAlert('Error', err);\n        }\n      });\n  }\n\n  public viewAllAddresses(): void {\n    let modal = this.modalCtrl.create(AllAddressesPage, {\n      noBalance: this.noBalance,\n      withBalance: this.withBalance,\n      coin: this.wallet.coin,\n      walletName: this.wallet.name,\n      walletColor: this.wallet.color\n    });\n    modal.present();\n  }\n\n  public async scan(): Promise<void> {\n    this.walletProvider.startScan(this.wallet);\n    return this.navCtrl.popToRoot();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/wallet-addresses.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AlertController, NavController, NavParams } from 'ionic-angular';\n\n// Providers\nimport { Logger } from '../../../providers/logger/logger';\nimport { PopupProvider } from '../../../providers/popup/popup';\n\n// Pages\nimport { BackupWarningPage } from '../../backup/backup-warning/backup-warning';\nimport { DisclaimerPage } from '../disclaimer/disclaimer';\n\n@Component({\n  selector: 'page-backup-request',\n  templateUrl: 'backup-request.html'\n})\nexport class BackupRequestPage {\n  private walletId: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public alertCtrl: AlertController,\n    private log: Logger,\n    private translate: TranslateService,\n    private popupProvider: PopupProvider\n  ) {\n    this.walletId = this.navParams.get('walletId');\n  }\n\n  ionViewDidLoad() {\n    this.log.info('ionViewDidLoad BackupRequestPage');\n  }\n\n  public initBackupFlow(): void {\n    this.navCtrl.push(BackupWarningPage, {\n      walletId: this.walletId,\n      fromOnboarding: true\n    });\n  }\n\n  public doBackupLater(): void {\n    let title = this.translate.instant('Watch Out!');\n    let message = this.translate.instant(\n      'If this device is replaced or this app is deleted, neither you nor BitPay can recover your funds without a backup.'\n    );\n    let okText = this.translate.instant('I understand');\n    let cancelText = this.translate.instant('Go Back');\n    this.popupProvider\n      .ionicConfirm(title, message, okText, cancelText)\n      .then(res => {\n        if (!res) return;\n        let title = this.translate.instant('Are you sure you want to skip it?');\n        let message = this.translate.instant(\n          'You can create a backup later from your wallet settings.'\n        );\n        let okText = this.translate.instant('Yes, skip');\n        let cancelText = this.translate.instant('Go Back');\n        this.popupProvider\n          .ionicConfirm(title, message, okText, cancelText)\n          .then(res => {\n            if (!res) return;\n            this.navCtrl.push(DisclaimerPage);\n          });\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/onboarding/backup-request/backup-request.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Events,\n  ModalController,\n  NavController,\n  NavParams\n} from 'ionic-angular';\nimport * as _ from 'lodash';\n\n// providers\nimport { AddressBookProvider } from '../../providers/address-book/address-book';\nimport { BwcErrorProvider } from '../../providers/bwc-error/bwc-error';\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { ActionSheetProvider } from '../../providers/index';\nimport { Logger } from '../../providers/logger/logger';\nimport { OnGoingProcessProvider } from '../../providers/on-going-process/on-going-process';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { TimeProvider } from '../../providers/time/time';\nimport { WalletProvider } from '../../providers/wallet/wallet';\n\n// pages\nimport { BackupWarningPage } from '../../pages/backup/backup-warning/backup-warning';\nimport { WalletAddressesPage } from '../../pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/wallet-addresses';\nimport { TxDetailsPage } from '../../pages/tx-details/tx-details';\nimport { WalletSettingsPage } from '../settings/wallet-settings/wallet-settings';\nimport { WalletTabsChild } from '../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../wallet-tabs/wallet-tabs.provider';\nimport { SearchTxModalPage } from './search-tx-modal/search-tx-modal';\nimport { WalletBalancePage } from './wallet-balance/wallet-balance';\n\nconst HISTORY_SHOW_LIMIT = 10;\n\n@Component({\n  selector: 'page-wallet-details',\n  templateUrl: 'wallet-details.html'\n})\nexport class WalletDetailsPage extends WalletTabsChild {\n  private currentPage: number = 0;\n  private showPaperKeyUnverifiedMsg: boolean = true;\n\n  public requiresMultipleSignatures: boolean;\n  public wallet;\n  public history = [];\n  public groupedHistory = [];\n  public walletNotRegistered: boolean;\n  public updateError: boolean;\n  public updateStatusError;\n  public updatingStatus: boolean;\n  public updatingTxHistory: boolean;\n  public updateTxHistoryError: boolean;\n  public updatingTxHistoryProgress: number = 0;\n  public showNoTransactionsYetMsg: boolean;\n  public showBalanceButton: boolean = false;\n  public addressbook = {};\n  public txps = [];\n\n  constructor(\n    navCtrl: NavController,\n    private navParams: NavParams,\n    profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private addressbookProvider: AddressBookProvider,\n    private bwcError: BwcErrorProvider,\n    private events: Events,\n    private logger: Logger,\n    private timeProvider: TimeProvider,\n    private translate: TranslateService,\n    private modalCtrl: ModalController,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    walletTabsProvider: WalletTabsProvider,\n    private actionSheetProvider: ActionSheetProvider\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n  }\n\n  ionViewDidLoad() {\n    // Getting info from cache\n    if (this.navParams.data.clearCache) {\n      this.clearHistoryCache();\n    } else {\n      this.wallet.status = this.wallet.cachedStatus;\n      if (this.wallet.completeHistory) this.showHistory();\n    }\n\n    this.requiresMultipleSignatures = this.wallet.credentials.m > 1;\n\n    this.addressbookProvider\n      .list()\n      .then(ab => {\n        this.addressbook = ab;\n      })\n      .catch(err => {\n        this.logger.error(err);\n      });\n  }\n\n  ionViewWillEnter() {\n    this.events.subscribe('Wallet/updateAll', () => {\n      this.updateAll();\n    });\n  }\n\n  ionViewDidEnter() {\n    this.updateAll();\n  }\n\n  ionViewWillLeave() {\n    this.events.unsubscribe('Wallet/updateAll');\n  }\n\n  shouldShowZeroState() {\n    return this.showNoTransactionsYetMsg && !this.updateStatusError;\n  }\n\n  shouldShowSpinner() {\n    return (\n      (this.updatingStatus || this.updatingTxHistory) &&\n      !this.walletNotRegistered &&\n      !this.updateStatusError &&\n      !this.updateTxHistoryError\n    );\n  }\n\n  goToPreferences() {\n    this.navCtrl.push(WalletSettingsPage, { walletId: this.wallet.id });\n  }\n\n  private clearHistoryCache() {\n    this.history = [];\n    this.currentPage = 0;\n  }\n\n  private groupHistory(history) {\n    return history.reduce((groups, tx, txInd) => {\n      this.isFirstInGroup(txInd)\n        ? groups.push([tx])\n        : groups[groups.length - 1].push(tx);\n      return groups;\n    }, []);\n  }\n\n  private showHistory() {\n    this.history = this.wallet.completeHistory.slice(\n      0,\n      (this.currentPage + 1) * HISTORY_SHOW_LIMIT\n    );\n    this.groupedHistory = this.groupHistory(this.history);\n    this.currentPage++;\n  }\n\n  private setPendingTxps(txps) {\n    /* Uncomment to test multiple outputs */\n\n    // var txp = {\n    //   message: 'test multi-output',\n    //   fee: 1000,\n    //   createdOn: new Date() / 1000,\n    //   outputs: [],\n    //   wallet: $scope.wallet\n    // };\n    //\n    // function addOutput(n) {\n    //   txp.outputs.push({\n    //     amount: 600,\n    //     toAddress: '2N8bhEwbKtMvR2jqMRcTCQqzHP6zXGToXcK',\n    //     message: 'output #' + (Number(n) + 1)\n    //   });\n    // };\n    // lodash.times(15, addOutput);\n    // txps.push(txp);\n    this.txps = !txps ? [] : _.sortBy(txps, 'createdOn').reverse();\n  }\n\n  private updateTxHistory() {\n    this.updatingTxHistory = true;\n\n    this.updateTxHistoryError = false;\n    this.updatingTxHistoryProgress = 0;\n\n    let progressFn = function(_, newTxs) {\n      if (newTxs > 5) this.thistory = null;\n      this.updatingTxHistoryProgress = newTxs;\n    }.bind(this);\n\n    this.walletProvider\n      .getTxHistory(this.wallet, {\n        progressFn\n      })\n      .then(txHistory => {\n        this.updatingTxHistory = false;\n\n        let hasTx = txHistory[0];\n        this.showNoTransactionsYetMsg = hasTx ? false : true;\n\n        if (this.wallet.needsBackup && hasTx && this.showPaperKeyUnverifiedMsg)\n          this.openBackupModal();\n\n        this.wallet.completeHistory = txHistory;\n        this.showHistory();\n      })\n      .catch(() => {\n        this.updatingTxHistory = false;\n        this.updateTxHistoryError = true;\n      });\n  }\n\n  private updateAll = _.debounce(\n    (force?) => {\n      this.updateStatus(force);\n      this.updateTxHistory();\n    },\n    2000,\n    {\n      leading: true\n    }\n  );\n\n  public toggleBalance() {\n    this.profileProvider.toggleHideBalanceFlag(\n      this.wallet.credentials.walletId\n    );\n  }\n\n  public loadHistory(loading) {\n    if (this.history.length === this.wallet.completeHistory.length) {\n      loading.complete();\n      return;\n    }\n    setTimeout(() => {\n      this.showHistory();\n      loading.complete();\n    }, 300);\n  }\n\n  private updateStatus(force?: boolean) {\n    this.updatingStatus = true;\n    this.updateStatusError = null;\n    this.walletNotRegistered = false;\n    this.showBalanceButton = false;\n\n    this.walletProvider\n      .getStatus(this.wallet, { force: !!force })\n      .then(status => {\n        this.updatingStatus = false;\n        this.setPendingTxps(status.pendingTxps);\n        this.wallet.status = status;\n        this.showBalanceButton =\n          this.wallet.status.totalBalanceSat !=\n          this.wallet.status.spendableAmount;\n      })\n      .catch(err => {\n        this.updatingStatus = false;\n        if (err === 'WALLET_NOT_REGISTERED') {\n          this.walletNotRegistered = true;\n        } else {\n          this.updateStatusError = this.bwcError.msg(\n            err,\n            this.translate.instant('Could not update wallet')\n          );\n        }\n        this.wallet.status = null;\n      });\n  }\n\n  public recreate() {\n    this.onGoingProcessProvider.set('recreating');\n    this.walletProvider\n      .recreate(this.wallet)\n      .then(() => {\n        this.onGoingProcessProvider.clear();\n        setTimeout(() => {\n          this.walletProvider.startScan(this.wallet).then(() => {\n            this.updateAll(true);\n          });\n        });\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.error(err);\n      });\n  }\n\n  public goToTxDetails(tx) {\n    this.navCtrl.push(TxDetailsPage, {\n      walletId: this.wallet.credentials.walletId,\n      txid: tx.txid\n    });\n  }\n\n  public openBackupModal(): void {\n    this.showPaperKeyUnverifiedMsg = false;\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'paper-key-unverified-with-activity'\n    );\n    infoSheet.present();\n    infoSheet.onDidDismiss(option => {\n      if (option) this.openBackup();\n    });\n  }\n\n  public openBackup() {\n    this.navCtrl.push(BackupWarningPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n\n  public openAddresses() {\n    this.navCtrl.push(WalletAddressesPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n\n  public getDate(txCreated) {\n    let date = new Date(txCreated * 1000);\n    return date;\n  }\n\n  public trackByFn(index) {\n    return index;\n  }\n\n  public isFirstInGroup(index) {\n    if (index === 0) {\n      return true;\n    }\n    let curTx = this.history[index];\n    let prevTx = this.history[index - 1];\n    return !this.createdDuringSameMonth(curTx, prevTx);\n  }\n\n  private createdDuringSameMonth(curTx, prevTx) {\n    return this.timeProvider.withinSameMonth(\n      curTx.time * 1000,\n      prevTx.time * 1000\n    );\n  }\n\n  public isDateInCurrentMonth(date) {\n    return this.timeProvider.isDateInCurrentMonth(date);\n  }\n\n  public createdWithinPastDay(time) {\n    return this.timeProvider.withinPastDay(time);\n  }\n\n  public isUnconfirmed(tx) {\n    return !tx.confirmations || tx.confirmations === 0;\n  }\n\n  public openBalanceDetails(): void {\n    this.navCtrl.push(WalletBalancePage, {\n      status: this.wallet.status,\n      color: this.wallet.color\n    });\n  }\n\n  public back(): void {\n    this.navCtrl.pop();\n  }\n\n  public openSearchModal(): void {\n    let modal = this.modalCtrl.create(\n      SearchTxModalPage,\n      {\n        addressbook: this.addressbook,\n        completeHistory: this.wallet.completeHistory,\n        wallet: this.wallet\n      },\n      { showBackdrop: false, enableBackdropDismiss: true }\n    );\n    modal.present();\n    modal.onDidDismiss(data => {\n      if (!data || !data.txid) return;\n      this.navCtrl.push(TxDetailsPage, {\n        walletId: this.wallet.credentials.walletId,\n        txid: data.txid\n      });\n    });\n  }\n\n  public openExternalLink(url: string): void {\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant(\n      'Help and support information is available at the website.'\n    );\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-details/wallet-details.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 446;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 446\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 492;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 492\n// module chunks = 0","import { InjectionToken } from '@angular/core';\n\nexport interface IStorage {\n  get(k: string): Promise<any>;\n  set(k: string, v): Promise<void>;\n  remove(k: string): Promise<void>;\n  create(k: string, v): Promise<void>;\n}\n\nexport class KeyAlreadyExistsError extends Error {\n  constructor() {\n    super('Key already exists');\n  }\n}\n\nexport let ISTORAGE = new InjectionToken<IStorage>('storage');\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/persistence/storage/istorage.ts","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/script/script.js\n// module id = 835\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/index.js\n// module id = 836\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/transaction.js\n// module id = 837\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/unspentoutput.js\n// module id = 838\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/index.js\n// module id = 839\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/hdprivatekey.js\n// module id = 840\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey */) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n                       \nHDPublicKey.Hardened = 0x80000000;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/hdpublickey.js\n// module id = 841\n// module chunks = 0","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/script/script.js\n// module id = 842\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/index.js\n// module id = 843\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/transaction.js\n// module id = 844\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTCZ = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTCZ(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTCZ()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/unspentoutput.js\n// module id = 845\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/index.js\n// module id = 846\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/hdprivatekey.js\n// module id = 847\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey */) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000000;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/hdpublickey.js\n// module id = 848\n// module chunks = 0","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/script/script.js\n// module id = 857\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/index.js\n// module id = 858\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/transaction.js\n// module id = 859\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 SAFE = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/unspentoutput.js\n// module id = 860\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/index.js\n// module id = 861\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000001;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/hdprivatekey.js\n// module id = 862\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey */) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000001;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/hdpublickey.js\n// module id = 863\n// module chunks = 0","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/script/script.js\n// module id = 864\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/index.js\n// module id = 865\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/transaction.js\n// module id = 866\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 RVN = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromRVN(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toRVN()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/unspentoutput.js\n// module id = 867\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/index.js\n// module id = 868\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/hdprivatekey.js\n// module id = 869\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey*/ ) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000000;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/hdpublickey.js\n// module id = 870\n// module chunks = 0","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/script/script.js\n// module id = 871\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/index.js\n// module id = 872\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/transaction.js\n// module id = 873\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 SAFE = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromSAFE(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toSAFE()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/unspentoutput.js\n// module id = 874\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/index.js\n// module id = 875\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/hdprivatekey.js\n// module id = 876\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey*/ ) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000000;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/hdpublickey.js\n// module id = 877\n// module chunks = 0","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/script/script.js\n// module id = 878\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/index.js\n// module id = 879\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/transaction.js\n// module id = 880\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/unspentoutput.js\n// module id = 881\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/index.js\n// module id = 882\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/hdprivatekey.js\n// module id = 883\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey */) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n                       \nHDPublicKey.Hardened = 0x80000000;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/hdpublickey.js\n// module id = 884\n// module chunks = 0","'use strict';\n\nvar Address = require('../address');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\n\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\n// var Signature = require('../crypto/signature');\nvar Networks = require('../networks');\n// var $ = require('../util/preconditions');\nvar _ = require('lodash');\n// var errors = require('../errors');\nvar buffer = require('buffer');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = new Buffer(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(new buffer.Buffer(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(new buffer.Buffer(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: new Buffer(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: new Buffer(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  $.checkState(this.isPublicKeyHashOut(), 'Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  return this.chunks[2].buf;\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash or P2SH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return new Buffer(0);\n    } else {\n      return new Buffer(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return new Buffer(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = new Buffer(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/script/script.js\n// module id = 885\n// module chunks = 0","module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\n// module.exports.Sighash = require('./sighash');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/index.js\n// module id = 886\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar errors = BaseBitcore.errors;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferReader = BaseBitcore.encoding.BufferReader;\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BN = BaseBitcore.crypto.BN;\nvar Sighash = BaseBitcore.Transaction.sighash;\n// var $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n// var errors = require('../errors');\n// var BufferUtil = require('../util/buffer');\n// var JSUtil = require('../util/js');\n// var BufferReader = require('../encoding/bufferreader');\n// var BufferWriter = require('../encoding/bufferwriter');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\n// var Sighash = require('./sighash');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\n// var BN = require('../crypto/bn');\n\nvar JSDescription = require('./jsdescription');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this.joinSplits = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\n\nvar CURRENT_VERSION = 1;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 15;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 10000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getHash()).readReverse().toString('hex');\n  }\n};\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer());\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' Use Transaction#uncheckedSerialize if you want to skip security checks. ' +\n      'See http://bitcore.io/guide/transaction.html#Serialization for more info.';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function() {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer).toBuffer();\n};\n\nTransaction.prototype.toBufferWriter = function(writer) {\n  writer.writeUInt32LE(this.version);\n  writer.writeVarintNum(this.inputs.length);\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n  writer.writeUInt32LE(this.nLockTime);\n  if (this.version >= 2) {\n    writer.writeVarintNum(this.joinSplits.length);\n    _.each(this.joinSplits, function(jsdesc) {\n      jsdesc.toBufferWriter(writer);\n    });\n    if (this.joinSplits.length > 0) {\n      writer.write(this.joinSplitPubKey);\n      writer.write(this.joinSplitSig);\n    }\n  }\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n  var i, sizeTxIns, sizeTxOuts, sizeJSDescs;\n\n  this.version = reader.readUInt32LE();\n  sizeTxIns = reader.readVarintNum();\n  for (i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n  sizeTxOuts = reader.readVarintNum();\n  for (i = 0; i < sizeTxOuts; i++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n  this.nLockTime = reader.readUInt32LE();\n  if (this.version >= 2) {\n    sizeJSDescs = reader.readVarintNum();\n    for (i = 0; i < sizeJSDescs; i++) {\n      this.joinSplits.push(JSDescription.fromBufferReader(reader));\n    }\n    if (sizeJSDescs > 0) {\n      this.joinSplitPubKey = reader.read(32);\n      this.joinSplitSig = reader.read(64);\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this.version >= 2) {\n    var joinSplits = [];\n    this.joinSplits.forEach(function(joinSplit) {\n      joinSplits.push(joinSplit.toObject());\n    });\n    obj.joinSplits = joinSplits;\n    if (this.joinSplits.length > 0) {\n      obj.joinSplitPubKey = BufferUtil.reverse(this.joinSplitPubKey).toString('hex');\n      obj.joinSplitSig = this.joinSplitSig.toString('hex');\n    }\n  }\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if (script.isPublicKeyHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isScriptHashOut() && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures\n      );\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  if (this.version >= 2) {\n    _.each(transaction.joinSplits, function(joinSplit) {\n      self.joinSplits.push(new JSDescription(joinSplit));\n    });\n    if (self.joinSplits.length > 0) {\n      self.joinSplitPubKey = BufferUtil.reverse(new Buffer(transaction.joinSplitPubKey, 'hex'));\n      self.joinSplitSig = new Buffer(transaction.joinSplitSig, 'hex');\n    }\n  }\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript);\n    $.checkState(this.outputs[this._changeIndex]);\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString());\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(new buffer.Buffer(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isPublicKeyHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }));\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if (utxo.script.isMultisigOut()) {\n    clazz = MultiSigInput;\n  } else if (utxo.script.isScriptHashOut()) {\n    clazz = MultiSigScriptHashInput;\n  } else {\n    throw new Error(\"@TODO\");\n  }\n  this.addInput(new clazz({\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    script: Script.empty()\n  }, pubkeys, threshold));\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.all(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    var self = this;\n    this._inputAmount = 0;\n    _.each(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      self._inputAmount += input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function() {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  return Transaction._estimateFee(estimatedSize, available, this._feePerKb);\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction._estimateFee = function(size, amountAvailable, feePerKb) {\n  var fee = Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n  if (amountAvailable > fee) {\n    size += Transaction.CHANGE_OUTPUT_MAX_SIZE;\n  }\n  return Math.ceil(size / 1000) * (feePerKb || Transaction.FEE_PER_KB);\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return result;\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    copy.sort(function(first, second) {\n      return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex;\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer());\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype) {\n  $.checkState(this.hasAllUtxoInfo());\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype), function(signature) {\n    self.applySignature(signature);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature) {\n  this.inputs[signature.inputIndex].addSignature(this, signature);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.all(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature);\n};\n\n/**\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript) {\n  return Sighash.verify(this, sig, pubkey, nin, subscript);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transaction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/transaction.js\n// module id = 887\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar JSUtil = BaseBitcore.util.js;\n// var $ = require('../util/preconditions');\n// var JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/unspentoutput.js\n// module id = 888\n// module chunks = 0","module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/index.js\n// module id = 889\n// module chunks = 0","'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PrivateKey = BaseBitcore.PrivateKey;\nvar Random = BaseBitcore.crypto.Random;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar errors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\n// var Random = require('./crypto/random');\n\n// var errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\n// var BufferUtil = require('./util/buffer');\n// var JSUtil = require('./util/js');\n\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Networks.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([new buffer.Buffer([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([new buffer.Buffer([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? BufferUtil.hexToBuffer(arg.privateKey) : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = BufferUtil.hexToBuffer(hexa);\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, new buffer.Buffer('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Networks.get(network) || Networks.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = new Buffer(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\n// HDPrivateKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/hdprivatekey.js\n// module id = 890\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar BN = BaseBitcore.crypto.BN;\nvar Base58 = BaseBitcore.encoding.Base58;\nvar Base58Check = BaseBitcore.encoding.Base58Check;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Point = BaseBitcore.crypto.Point;\n// var PublicKey = BaseBitcore.PublicKey;\nvar JSUtil = BaseBitcore.util.js;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar bitcoreErrors = BaseBitcore.errors;\n//var $ = require('./util/preconditions');\n// var BN = require('./crypto/bn');\n// var Base58 = require('./encoding/base58');\n// var Base58Check = require('./encoding/base58check');\n// var Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Networks = require('./networks');\n// var Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\n//var bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Networks.livenet.xprivkey /* || version === Networks.testnet.xprivkey */) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Networks.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Networks.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Networks.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? BufferUtil.hexToBuffer(arg.chainCode) : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? BufferUtil.hexToBuffer(arg.publicKey) :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Networks.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = new Buffer(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Networks.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000000;\n// HDPublicKey.Hardened = 0x80004add; // BIP44 coin type 19165\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/hdpublickey.js\n// module id = 891\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// path (ignored)\n// module id = 901\n// module chunks = 0","import { Component } from '@angular/core';\nimport { ActionSheetParent } from '../action-sheet/action-sheet-parent';\n\n@Component({\n  selector: 'incoming-data-menu',\n  templateUrl: 'incoming-data-menu.html'\n})\nexport class IncomingDataMenuComponent extends ActionSheetParent {\n  public https: boolean;\n  public data: string;\n  public type: string;\n  public coin: string;\n  public fromHomeCard: boolean;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.https = false;\n    this.data = this.params.data.data;\n    this.type = this.params.data.type;\n    this.coin = this.params.data.coin;\n    this.fromHomeCard = this.params.data.fromHomeCard;\n    if (this.type === 'url') {\n      this.https = this.data.indexOf('https://') === 0 ? true : false;\n    }\n  }\n\n  public close(redirTo: string, value: string) {\n    redirTo !== 'OpenExternalLink'\n      ? this.dismiss({ redirTo, value, coin: this.coin })\n      : this.dismissFunction &&\n        this.dismissFunction({ redirTo, value, coin: this.coin });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/incoming-data-menu/incoming-data-menu.ts","import { Component, HostBinding } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Observable } from 'rxjs';\nimport { DomProvider } from '../../providers/dom/dom';\n\n@Component({\n  selector: 'action-sheet',\n  templateUrl: 'action-sheet.html'\n})\nexport class ActionSheetComponent {\n  private transitionDuration: number = 250;\n  private parentComponentRef: any;\n  private deregisterBackButtonAction;\n  public dismissFunction: (data?: any) => void;\n  @HostBinding('class.open')\n  public slideIn: boolean = false;\n\n  constructor(private domProvider: DomProvider, private platform: Platform) {}\n\n  ngOnInit() {\n    this.overrideHardwareBackButton();\n  }\n\n  public async present(componentRef: any) {\n    this.parentComponentRef = componentRef;\n    await Observable.timer(50).toPromise();\n    this.slideIn = true;\n  }\n\n  public async dismiss(data?: any): Promise<void> {\n    this.slideIn = false;\n    this.dismissFunction && this.dismissFunction(data);\n    await Observable.timer(this.transitionDuration).toPromise();\n    this.domProvider.removeComponent(this.parentComponentRef);\n  }\n\n  overrideHardwareBackButton() {\n    this.deregisterBackButtonAction = this.platform.registerBackButtonAction(\n      () => this.dismiss()\n    );\n  }\n\n  ngOnDestroy() {\n    this.deregisterBackButtonAction();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/action-sheet/action-sheet.ts","import { Component, ViewChild } from '@angular/core';\nimport { ActionSheetParent } from '../action-sheet/action-sheet-parent';\nimport { InfoSheetTemplate } from './info-sheet-template';\n\n@Component({\n  selector: 'info-sheet',\n  templateUrl: 'info-sheet.html'\n})\nexport class InfoSheetComponent extends ActionSheetParent {\n  @ViewChild(InfoSheetTemplate)\n  infoSheetTemplate: InfoSheetTemplate;\n  constructor() {\n    super();\n  }\n  ngAfterViewInit() {\n    this.infoSheetTemplate.onDismiss.subscribe(option => {\n      this.dismiss(option);\n    });\n  }\n}\n\nexport const INFO_SHEET_COMPONENTS = [InfoSheetComponent, InfoSheetTemplate];\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/info-sheet/info-sheet.ts","import { Component, Input } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nexport enum AlertType {\n  info = 'info',\n  success = 'success',\n  warning = 'warning',\n  danger = 'danger',\n  love = 'love'\n}\n\n@Component({\n  selector: 'info-sheet-template',\n  templateUrl: 'info-sheet-template.html'\n})\nexport class InfoSheetTemplate {\n  @Input()\n  type: AlertType = AlertType.info;\n\n  private dismissSubject = new Subject<void>();\n  public onDismiss = this.dismissSubject.asObservable();\n\n  dismiss(option) {\n    this.dismissSubject.next(option);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/info-sheet/info-sheet-template.ts","import { Component } from '@angular/core';\nimport { ActionSheetParent } from '../action-sheet/action-sheet-parent';\n\n@Component({\n  selector: 'options-sheet',\n  templateUrl: 'options-sheet.html'\n})\nexport class OptionsSheetComponent extends ActionSheetParent {\n  constructor() {\n    super();\n  }\n\n  public optionClicked(option): void {\n    this.dismiss(option);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/options-sheet/options-sheet.ts","import { Component } from '@angular/core';\nimport { ActionSheetParent } from '../action-sheet/action-sheet-parent';\n\n@Component({\n  selector: 'wallet-selector',\n  templateUrl: 'wallet-selector.html'\n})\nexport class WalletSelectorComponent extends ActionSheetParent {\n  public wallets;\n  public walletsAll;\n  public walletsBtc;\n  public walletsBch;\n  public walletsSafe;\n  public walletsBtcz;\n  public walletsZcl;\n  public walletsAnon;\n  public walletsZel;\n  public walletsRvn;\n  public walletsLtc;\n  public title: string;\n  public selectedWalletId: string;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.wallets = this.params.wallets;\n    this.title = this.params.title;\n    this.selectedWalletId = this.params.selectedWalletId;\n    this.separateWallets();\n  }\n\n  private separateWallets(): void {\n    this.walletsAll = this.wallets;\n    this.walletsBtc = this.wallets.filter(wallet => wallet.coin === 'btc');\n    this.walletsBch = this.wallets.filter(wallet => wallet.coin === 'bch');\n    this.walletsSafe = this.wallets.filter(wallet => wallet.coin === 'safe');\n    this.walletsBtcz = this.wallets.filter(wallet => wallet.coin === 'btcz');\n    this.walletsZcl = this.wallets.filter(wallet => wallet.coin === 'zcl');\n    this.walletsAnon = this.wallets.filter(wallet => wallet.coin === 'anon');\n    this.walletsZel = this.wallets.filter(wallet => wallet.coin === 'zel');\n    this.walletsRvn = this.wallets.filter(wallet => wallet.coin === 'rvn');\n    this.walletsLtc = this.wallets.filter(wallet => wallet.coin === 'ltc');\n  }\n\n  public optionClicked(option): void {\n    this.dismiss(option);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/wallet-selector/wallet-selector.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from '../../providers/logger/logger';\n\nimport * as _ from 'lodash';\nimport encoding from 'text-encoding';\n\n// providers\nimport { OnGoingProcessProvider } from '../on-going-process/on-going-process';\nimport { ProfileProvider } from '../profile/profile';\n\n@Injectable()\nexport class PayproProvider {\n  constructor(\n    private profileProvider: ProfileProvider,\n    private logger: Logger,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private translate: TranslateService\n  ) {\n    this.logger.info('PayproProvider initialized');\n  }\n\n  public getPayProDetails(\n    uri: string,\n    coin: string,\n    disableLoader?: boolean\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let wallet = this.profileProvider.getWallets({\n        onlyComplete: true,\n        coin\n      })[0];\n\n      if (!wallet) return resolve();\n\n      this.logger.debug('Fetch PayPro Request...', uri);\n\n      if (!disableLoader) {\n        this.onGoingProcessProvider.set('fetchingPayPro');\n      }\n\n      wallet.fetchPayPro(\n        {\n          payProUrl: uri\n        },\n        (err, paypro) => {\n          if (!disableLoader) this.onGoingProcessProvider.clear();\n          if (_.isArrayBuffer(err)) {\n            const enc = new encoding.TextDecoder();\n            err = enc.decode(err);\n            return reject(err);\n          } else if (err)\n            return reject(\n              this.translate.instant(\n                'Could Not Fetch Payment: Check if it is still valid'\n              )\n            );\n          else if (!paypro.verified) {\n            this.logger.warn('Failed to verify payment protocol signatures');\n            return reject(this.translate.instant('Payment Protocol Invalid'));\n          }\n          return resolve(paypro);\n        }\n      );\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/paypro/paypro.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavParams, Platform, ViewController } from 'ionic-angular';\nimport { Subscription } from 'rxjs';\n\n// Native\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// Providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { AppProvider } from '../../../providers/app/app';\nimport { BwcErrorProvider } from '../../../providers/bwc-error/bwc-error';\nimport { Logger } from '../../../providers/logger/logger';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { PushNotificationsProvider } from '../../../providers/push-notifications/push-notifications';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-copayers',\n  templateUrl: 'copayers.html'\n})\nexport class CopayersPage {\n  public appName: string;\n  public appUrl: string;\n  public isCordova: boolean;\n\n  public wallet;\n  public copayers;\n  public secret;\n\n  private onResumeSubscription: Subscription;\n  private onPauseSubscription: Subscription;\n\n  constructor(\n    private plt: Platform,\n    private appProvider: AppProvider,\n    private bwcErrorProvider: BwcErrorProvider,\n    private events: Events,\n    private logger: Logger,\n    private navParams: NavParams,\n    private platformProvider: PlatformProvider,\n    private popupProvider: PopupProvider,\n    private profileProvider: ProfileProvider,\n    private socialSharing: SocialSharing,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private walletProvider: WalletProvider,\n    private translate: TranslateService,\n    private pushNotificationsProvider: PushNotificationsProvider,\n    private viewCtrl: ViewController,\n    private actionSheetProvider: ActionSheetProvider\n  ) {\n    this.secret = null;\n    this.appName = this.appProvider.info.userVisibleName;\n    this.appUrl = this.appProvider.info.url;\n    this.isCordova = this.platformProvider.isCordova;\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad CopayersPage');\n\n    this.onResumeSubscription = this.plt.resume.subscribe(() => {\n      this.updateWallet();\n      this.subscribeEvents();\n    });\n\n    this.onPauseSubscription = this.plt.pause.subscribe(() => {\n      this.unsubscribeEvents();\n    });\n  }\n\n  ionViewWillEnter() {\n    this.updateWallet();\n    this.subscribeEvents();\n  }\n\n  ionViewWillLeave() {\n    this.unsubscribeEvents();\n  }\n\n  ngOnDestroy() {\n    this.onResumeSubscription.unsubscribe();\n    this.onPauseSubscription.unsubscribe();\n  }\n\n  private subscribeEvents(): void {\n    this.events.subscribe('bwsEvent', (walletId, type) => {\n      if (\n        this.wallet &&\n        walletId == this.wallet.id &&\n        type == ('NewCopayer' || 'WalletComplete')\n      ) {\n        this.updateWallet();\n      }\n    });\n  }\n\n  private unsubscribeEvents(): void {\n    this.events.unsubscribe('bwsEvent');\n  }\n\n  close() {\n    this.viewCtrl.dismiss();\n  }\n\n  private updateWallet(): void {\n    this.logger.debug('Updating wallet:' + this.wallet.name);\n    this.walletProvider\n      .getStatus(this.wallet, {})\n      .then(status => {\n        this.wallet.status = status;\n        this.copayers = this.wallet.status.wallet.copayers;\n        this.secret = this.wallet.status.wallet.secret;\n        if (status.wallet.status == 'complete') {\n          this.wallet.openWallet(err => {\n            if (err) this.logger.error(err);\n\n            this.viewCtrl.dismiss().then(() => {\n              this.events.publish('OpenWallet', this.wallet);\n            });\n          });\n        }\n      })\n      .catch(err => {\n        let message = this.translate.instant('Could not update wallet');\n        this.popupProvider.ionicAlert(this.bwcErrorProvider.msg(err, message));\n        return;\n      });\n  }\n\n  public showDeletePopup(): void {\n    let title = this.translate.instant('Confirm');\n    let msg = this.translate.instant(\n      'Are you sure you want to cancel and delete this wallet?'\n    );\n    this.popupProvider.ionicConfirm(title, msg).then(res => {\n      if (res) this.deleteWallet();\n    });\n  }\n\n  private deleteWallet(): void {\n    this.onGoingProcessProvider.set('deletingWallet');\n    this.profileProvider\n      .deleteWalletClient(this.wallet)\n      .then(() => {\n        this.events.publish('status:updated');\n        this.onGoingProcessProvider.clear();\n        this.pushNotificationsProvider.unsubscribe(this.wallet);\n        this.viewCtrl.dismiss();\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        let errorText = this.translate.instant('Error');\n        this.popupProvider.ionicAlert(errorText, err.message || err);\n      });\n  }\n\n  public showFullInfo(): void {\n    const infoSheet = this.actionSheetProvider.createInfoSheet('copayers', {\n      secret: this.secret\n    });\n    infoSheet.present();\n  }\n\n  public shareAddress(): void {\n    this.socialSharing.share(this.secret);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add/copayers/copayers.ts","import { Component, NgZone, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Events,\n  ModalController,\n  NavController,\n  Platform\n} from 'ionic-angular';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { Subscription } from 'rxjs';\n\n// Pages\nimport { AddPage } from '../add/add';\n// import { AmazonPage } from '../integrations/amazon/amazon';\n// import { BitPayCardPage } from '../integrations/bitpay-card/bitpay-card';\n// import { BitPayCardIntroPage } from '../integrations/bitpay-card/bitpay-card-intro/bitpay-card-intro';\n// import { CoinbasePage } from '../integrations/coinbase/coinbase';\n// import { GlideraPage } from '../integrations/glidera/glidera';\n// import { MercadoLibrePage } from '../integrations/mercado-libre/mercado-libre';\n// import { ShapeshiftPage } from '../integrations/shapeshift/shapeshift';\nimport { PaperWalletPage } from '../paper-wallet/paper-wallet';\nimport { AmountPage } from '../send/amount/amount';\nimport { AddressbookAddPage } from '../settings/addressbook/add/add';\nimport { TxDetailsPage } from '../tx-details/tx-details';\nimport { TxpDetailsPage } from '../txp-details/txp-details';\nimport { ActivityPage } from './activity/activity';\nimport { ProposalsPage } from './proposals/proposals';\n\n// Providers\nimport { AddressBookProvider } from '../../providers/address-book/address-book';\n// import { AddressProvider } from '../../providers/address/address';\n// import { AmazonProvider } from '../../providers/amazon/amazon';\nimport { AppProvider } from '../../providers/app/app';\n// import { BitPayCardProvider } from '../../providers/bitpay-card/bitpay-card';\nimport { BwcErrorProvider } from '../../providers/bwc-error/bwc-error';\nimport { ClipboardProvider } from '../../providers/clipboard/clipboard';\nimport { ConfigProvider } from '../../providers/config/config';\nimport { EmailNotificationsProvider } from '../../providers/email-notifications/email-notifications';\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { FeedbackProvider } from '../../providers/feedback/feedback';\n// import { HomeIntegrationsProvider } from '../../providers/home-integrations/home-integrations';\nimport { IncomingDataProvider } from '../../providers/incoming-data/incoming-data';\nimport { Logger } from '../../providers/logger/logger';\nimport { OnGoingProcessProvider } from '../../providers/on-going-process/on-going-process';\nimport { PersistenceProvider } from '../../providers/persistence/persistence';\nimport { PlatformProvider } from '../../providers/platform/platform';\nimport { PopupProvider } from '../../providers/popup/popup';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { ReleaseProvider } from '../../providers/release/release';\nimport { ReplaceParametersProvider } from '../../providers/replace-parameters/replace-parameters';\nimport { WalletProvider } from '../../providers/wallet/wallet';\nimport { SettingsPage } from '../settings/settings';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  @ViewChild('showCard')\n  showCard;\n  public wallets;\n  public walletsAll;\n  public walletsBtc;\n  public walletsBch;\n  public walletsSafe;\n  public walletsBtcz;\n  public walletsZcl;\n  public walletsAnon;\n  public walletsZel;\n  public walletsRvn;\n  public walletsLtc;\n  public cachedBalanceUpdateOn: string;\n  public recentTransactionsEnabled: boolean;\n  public homepageSimpleViewEnabled: boolean;\n  public txps;\n  public txpsN: number;\n  public notifications;\n  public notificationsN: number;\n  public serverMessage;\n  public addressbook;\n  public newRelease: boolean;\n  public updateText: string;\n  public homeIntegrations;\n//  public bitpayCardItems;\n//  public showBitPayCard: boolean = false;\n//  public showAnnouncement: boolean = false;\n  public validDataFromClipboard;\n  public payProDetailsData;\n  public remainingTimeStr: string;\n\n  public showRateCard: boolean;\n  public homeTip: boolean;\n  public showReorderAll: boolean;\n  public showReorderBtc: boolean;\n  public showReorderBch: boolean;\n  public showReorderSafe: boolean;\n  public showReorderBtcz: boolean;\n  public showReorderZcl: boolean;\n  public showReorderAnon: boolean;\n  public showReorderZel: boolean;\n  public showReorderRvn: boolean;\n  public showReorderLtc: boolean;\n  public showIntegration;\n\n  private isNW: boolean;\n  private updatingWalletId: object;\n  private zone;\n  private countDown;\n  private onResumeSubscription: Subscription;\n  private onPauseSubscription: Subscription;\n\n  constructor(\n    private plt: Platform,\n    private navCtrl: NavController,\n    private profileProvider: ProfileProvider,\n    private releaseProvider: ReleaseProvider,\n    private walletProvider: WalletProvider,\n    private bwcErrorProvider: BwcErrorProvider,\n    private logger: Logger,\n    private events: Events,\n    private configProvider: ConfigProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private popupProvider: PopupProvider,\n    private modalCtrl: ModalController,\n    private addressBookProvider: AddressBookProvider,\n    private appProvider: AppProvider,\n    private platformProvider: PlatformProvider,\n//    private homeIntegrationsProvider: HomeIntegrationsProvider,\n    private persistenceProvider: PersistenceProvider,\n    private feedbackProvider: FeedbackProvider,\n//    private bitPayCardProvider: BitPayCardProvider,\n    private translate: TranslateService,\n    private emailProvider: EmailNotificationsProvider,\n    private replaceParametersProvider: ReplaceParametersProvider,\n//    private amazonProvider: AmazonProvider,\n    private clipboardProvider: ClipboardProvider,\n    private incomingDataProvider: IncomingDataProvider\n//    private addressProvider: AddressProvider\n  ) {\n    this.updatingWalletId = {};\n    this.addressbook = {};\n    this.cachedBalanceUpdateOn = '';\n    this.isNW = this.platformProvider.isNW;\n    this.showReorderAll = false;\n    this.showReorderBtc = false;\n    this.showReorderSafe = false;\n    this.showReorderBtcz = false;\n    this.showReorderZcl = false;\n    this.showReorderAnon = false;\n    this.showReorderZel = false;\n    this.showReorderRvn = false;\n    this.showReorderLtc = false;\n    this.showReorderBch = false;\n    this.zone = new NgZone({ enableLongStackTrace: false });\n    this.events.subscribe('Home/reloadStatus', () => {\n      this._willEnter();\n      this._didEnter();\n      this.subscribeBwsEvents();\n    });\n\n    if (this.isNW) {\n      let gui = (window as any).require('nw.gui');\n      let win = gui.Window.get();\n      win.on('focus', () => {\n        this.checkClipboard();\n      });\n    }\n  }\n\n  ionViewWillEnter() {\n    this._willEnter();\n  }\n\n  ionViewDidEnter() {\n    this._didEnter();\n  }\n\n  private _willEnter() {\n    this.recentTransactionsEnabled = this.configProvider.get().recentTransactions.enabled;\n    this.homepageSimpleViewEnabled = this.configProvider.get().homepageSimpleView.enabled;\n\n    // Update list of wallets, status and TXPs\n    this.setWallets();\n\n    this.addressBookProvider\n      .list()\n      .then(ab => {\n        this.addressbook = ab || {};\n      })\n      .catch(err => {\n        this.logger.error(err);\n      });\n\n    // Update Tx Notifications\n    this.getNotifications();\n  }\n\n  private _didEnter() {\n    if (this.isNW) this.checkUpdate();\n    this.checkHomeTip();\n    this.checkFeedbackInfo();\n//    this.checkAnnouncement();\n    this.checkClipboard();\n\n    this.subscribeIncomingDataMenuEvent();\n    this.subscribeBwsEvents();\n\n    // Show integrations\n//    let integrations = _.filter(this.homeIntegrationsProvider.get(), {\n//      show: true\n//    });\n\n/*    // Hide BitPay if linked\n    setTimeout(() => {\n      this.homeIntegrations = _.remove(_.clone(integrations), x => {\n        if (x.name == 'debitcard' && x.linked) return;\n        else return x;\n      });\n    }, 200);\n\n    // Only BitPay Wallet\n    this.bitPayCardProvider.get({}, (_, cards) => {\n      this.zone.run(() => {\n        this.showBitPayCard = this.appProvider.info._enabledExtensions.debitcard\n          ? true\n          : false;\n        this.bitpayCardItems = cards;\n      });\n    }); */\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad HomePage');\n\n    this.checkEmailLawCompliance();\n\n    this.subscribeStatusEvents();\n\n    this.onResumeSubscription = this.plt.resume.subscribe(() => {\n      this.getNotifications();\n      this.updateTxps();\n      this.setWallets();\n      this.subscribeIncomingDataMenuEvent();\n      this.subscribeBwsEvents();\n      this.subscribeStatusEvents();\n      this.checkClipboard();\n    });\n\n    this.onPauseSubscription = this.plt.pause.subscribe(() => {\n      this.events.unsubscribe('finishIncomingDataMenuEvent');\n      this.events.unsubscribe('bwsEvent');\n      this.events.unsubscribe('status:updated');\n    });\n  }\n\n  ngOnDestroy() {\n    this.onResumeSubscription.unsubscribe();\n    this.onPauseSubscription.unsubscribe();\n  }\n\n  ionViewWillLeave() {\n    this.events.unsubscribe('finishIncomingDataMenuEvent');\n    this.events.unsubscribe('bwsEvent');\n  }\n\n  private subscribeBwsEvents() {\n    // BWS Events: Update Status per Wallet\n    // NewBlock, NewCopayer, NewAddress, NewTxProposal, TxProposalAcceptedBy, TxProposalRejectedBy, txProposalFinallyRejected,\n    // txProposalFinallyAccepted, TxProposalRemoved, NewIncomingTx, NewOutgoingTx\n    this.events.subscribe('bwsEvent', (walletId: string) => {\n      this.getNotifications();\n      this.updateWallet(walletId);\n    });\n  }\n\n  private subscribeStatusEvents() {\n    // Create, Join, Import and Delete -> Get Wallets -> Update Status for All Wallets\n    this.events.subscribe('status:updated', () => {\n      this.updateTxps();\n      this.setWallets();\n    });\n  }\n\n  private subscribeIncomingDataMenuEvent() {\n    this.events.subscribe('finishIncomingDataMenuEvent', data => {\n      switch (data.redirTo) {\n        case 'AmountPage':\n          this.sendPaymentToAddress(data.value, data.coin);\n          break;\n        case 'AddressBookPage':\n          this.addToAddressBook(data.value);\n          break;\n        case 'OpenExternalLink':\n          this.goToUrl(data.value);\n          break;\n        case 'PaperWalletPage':\n          this.scanPaperWallet(data.value);\n          break;\n      }\n    });\n  }\n\n  private goToUrl(url: string): void {\n    this.externalLinkProvider.open(url);\n  }\n\n  private sendPaymentToAddress(bitcoinAddress: string, coin: string): void {\n    this.navCtrl.push(AmountPage, { toAddress: bitcoinAddress, coin });\n  }\n\n  private addToAddressBook(bitcoinAddress: string): void {\n    this.navCtrl.push(AddressbookAddPage, { addressbookEntry: bitcoinAddress });\n  }\n\n  private scanPaperWallet(privateKey: string) {\n    this.navCtrl.push(PaperWalletPage, { privateKey });\n  }\n\n  private openEmailDisclaimer() {\n    let message = this.translate.instant(\n      'By providing your email address, you give explicit consent to BitPay to use your email address to send you email notifications about payments.'\n    );\n    let title = this.translate.instant('Privacy Policy update');\n    let okText = this.translate.instant('Accept');\n    let cancelText = this.translate.instant('Disable notifications');\n    this.popupProvider\n      .ionicConfirm(title, message, okText, cancelText)\n      .then(ok => {\n        if (ok) {\n          // Accept new Privacy Policy\n          this.persistenceProvider.setEmailLawCompliance('accepted');\n        } else {\n          // Disable email notifications\n          this.persistenceProvider.setEmailLawCompliance('rejected');\n          this.emailProvider.updateEmail({\n            enabled: false,\n            email: 'null@email'\n          });\n        }\n      });\n  }\n\n  private checkEmailLawCompliance(): void {\n    setTimeout(() => {\n      if (this.emailProvider.getEmailIfEnabled()) {\n        this.persistenceProvider.getEmailLawCompliance().then(value => {\n          if (!value) this.openEmailDisclaimer();\n        });\n      }\n    }, 2000);\n  }\n\n  private startUpdatingWalletId(walletId: string) {\n    this.updatingWalletId[walletId] = true;\n  }\n\n  private stopUpdatingWalletId(walletId: string) {\n    setTimeout(() => {\n      this.updatingWalletId[walletId] = false;\n    }, 10000);\n  }\n\n  private setWallets = _.debounce(\n    () => {\n      this.wallets = this.profileProvider.getWallets();\n      this.walletsAll = this.wallets;\n      this.walletsBtc = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'btc';\n      });\n      this.walletsSafe = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'safe';\n      });\n      this.walletsBtcz = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'btcz';\n      });\n      this.walletsZcl = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'zcl';\n      });\n      this.walletsAnon = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'anon';\n      });\n      this.walletsZel = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'zel';\n      });\n      this.walletsRvn = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'rvn';\n      });\n      this.walletsLtc = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'ltc';\n      });\n      this.walletsBch = _.filter(this.wallets, (x: any) => {\n        return x.credentials.coin == 'bch';\n      });\n      this.updateAllWallets();\n    },\n    5000,\n    {\n      leading: true\n    }\n  );\n\n  public checkHomeTip(): void {\n    this.persistenceProvider.getHomeTipAccepted().then((value: string) => {\n      this.homeTip = value == 'accepted' ? false : true;\n    });\n  }\n\n  public hideHomeTip(): void {\n    this.persistenceProvider.setHomeTipAccepted('accepted');\n    this.homeTip = false;\n  }\n\n/*  private async checkAnnouncement() {\n    if (!this.amazonProvider.currency)\n      await this.amazonProvider.setCurrencyByLocation();\n    if (this.amazonProvider.currency == 'JPY') {\n      this.persistenceProvider.getShowAmazonJapanAnnouncement().then(value => {\n        if (!value) this.showAnnouncement = true;\n      });\n    }\n  }\n\n  public hideAnnouncement(): void {\n    this.persistenceProvider.setShowAmazonJapanAnnouncement('hide');\n    this.showAnnouncement = false;\n  }\n\n  public openAnnouncement(): void {\n    this.navCtrl.push(AmazonPage);\n  }\n*/\n  private checkFeedbackInfo() {\n    this.persistenceProvider.getFeedbackInfo().then(info => {\n      if (!info) {\n        this.initFeedBackInfo();\n      } else {\n        let feedbackInfo = info;\n        // Check if current version is greater than saved version\n        let currentVersion = this.releaseProvider.getCurrentAppVersion();\n        let savedVersion = feedbackInfo.version;\n        let isVersionUpdated = this.feedbackProvider.isVersionUpdated(\n          currentVersion,\n          savedVersion\n        );\n        if (!isVersionUpdated) {\n          this.initFeedBackInfo();\n          return;\n        }\n        let now = moment().unix();\n        let timeExceeded = now - feedbackInfo.time >= 24 * 7 * 60 * 60;\n        this.showRateCard = timeExceeded && !feedbackInfo.sent;\n        this.showCard.setShowRateCard(this.showRateCard);\n      }\n    });\n  }\n\n  public checkClipboard() {\n    return this.clipboardProvider\n      .getData()\n      .then(data => {\n        this.validDataFromClipboard = this.incomingDataProvider.parseData(data);\n        if (!this.validDataFromClipboard) {\n          return;\n        }\n        const dataToIgnore = ['BitcoinAddress', 'SafecoinAddress', 'BitcoinzAddress', 'ZclassicAddress', 'AnonymousAddress', 'ZelcashAddress', 'RavencoinAddress', 'LitecoinAddress', 'BitcoinCashAddress'];\n        if (dataToIgnore.indexOf(this.validDataFromClipboard.type) > -1) {\n          this.validDataFromClipboard = null;\n          return;\n        }\n        /* if (this.validDataFromClipboard.type === 'PayPro') {\n          this.incomingDataProvider\n            .getPayProDetails(data)\n            .then(payProDetails => {\n              this.payProDetailsData = payProDetails;\n              this.payProDetailsData.coin = this.addressProvider.getCoin(\n                this.payProDetailsData.toAddress\n              );\n              this.clearCountDownInterval();\n              this.paymentTimeControl(this.payProDetailsData.expires);\n            })\n            .catch(err => {\n              this.validDataFromClipboard = null;\n              this.logger.warn('Error in Payment Protocol', err);\n              this.logger.warn(err);\n            });\n        } */\n      })\n      .catch(() => {\n        this.logger.warn('Paste from clipboard err');\n      });\n  }\n\n  public processClipboardData(data): void {\n    this.validDataFromClipboard = null;\n    this.payProDetailsData = null;\n    this.clipboardProvider.clear();\n    this.clearCountDownInterval();\n    this.incomingDataProvider.redir(data, { fromHomeCard: true });\n  }\n\n  private clearCountDownInterval(): void {\n    if (this.countDown) clearInterval(this.countDown);\n  }\n\n/*  private paymentTimeControl(expirationTime): void {\n    let setExpirationTime = (): void => {\n      let now = Math.floor(Date.now() / 1000);\n      if (now > expirationTime) {\n        this.remainingTimeStr = this.translate.instant('Expired');\n        this.clearCountDownInterval();\n        return;\n      }\n      let totalSecs = expirationTime - now;\n      let m = Math.floor(totalSecs / 60);\n      let s = totalSecs % 60;\n      this.remainingTimeStr = ('0' + m).slice(-2) + ':' + ('0' + s).slice(-2);\n    };\n\n    setExpirationTime();\n\n    this.countDown = setInterval(() => {\n      setExpirationTime();\n    }, 1000);\n  } */\n\n  private initFeedBackInfo() {\n    this.persistenceProvider.setFeedbackInfo({\n      time: moment().unix(),\n      version: this.releaseProvider.getCurrentAppVersion(),\n      sent: false\n    });\n    this.showRateCard = false;\n  }\n\n  private updateWallet(walletId: string): void {\n    if (this.updatingWalletId[walletId]) return;\n    this.startUpdatingWalletId(walletId);\n    let wallet = this.profileProvider.getWallet(walletId);\n    this.walletProvider\n      .getStatus(wallet, {})\n      .then(status => {\n        wallet.status = status;\n        wallet.error = null;\n        this.profileProvider.setLastKnownBalance(\n          wallet.id,\n          wallet.status.availableBalanceStr\n        );\n        this.updateTxps();\n        this.stopUpdatingWalletId(walletId);\n      })\n      .catch(err => {\n        this.logger.error(err);\n        this.stopUpdatingWalletId(walletId);\n      });\n  }\n\n  private updateTxps = _.debounce(\n    () => {\n      this.profileProvider\n        .getTxps({ limit: 3 })\n        .then(data => {\n          this.zone.run(() => {\n            this.txps = data.txps;\n            this.txpsN = data.n;\n          });\n        })\n        .catch(err => {\n          this.logger.error(err);\n        });\n    },\n    5000,\n    {\n      leading: true\n    }\n  );\n\n  private getNotifications = _.debounce(\n    () => {\n      if (!this.recentTransactionsEnabled) return;\n      this.profileProvider\n        .getNotifications({ limit: 3 })\n        .then(data => {\n          this.zone.run(() => {\n            this.notifications = data.notifications;\n            this.notificationsN = data.total;\n          });\n        })\n        .catch(err => {\n          this.logger.error(err);\n        });\n    },\n    5000,\n    {\n      leading: true\n    }\n  );\n\n  private updateAllWallets(): void {\n    let foundMessage = false;\n\n    if (_.isEmpty(this.wallets)) return;\n\n    let i = this.wallets.length;\n    let j = 0;\n\n    let pr = ((wallet, cb) => {\n      this.walletProvider\n        .getStatus(wallet, {})\n        .then(status => {\n          wallet.status = status;\n          wallet.error = null;\n\n          if (!foundMessage && !_.isEmpty(status.serverMessage)) {\n            this.serverMessage = status.serverMessage;\n            foundMessage = true;\n          }\n\n          this.profileProvider.setLastKnownBalance(\n            wallet.id,\n            wallet.status.availableBalanceStr\n          );\n          return cb();\n        })\n        .catch(err => {\n          wallet.error =\n            err === 'WALLET_NOT_REGISTERED'\n              ? 'Wallet not registered'\n              : this.bwcErrorProvider.msg(err);\n          this.logger.warn(\n            this.bwcErrorProvider.msg(\n              err,\n              'Error updating status for ' + wallet.name\n            )\n          );\n          return cb();\n        });\n    }).bind(this);\n\n    _.each(this.wallets, wallet => {\n      pr(wallet, () => {\n        if (++j == i) {\n          this.updateTxps();\n        }\n      });\n    });\n  }\n\n  private checkUpdate(): void {\n    this.releaseProvider\n      .getLatestAppVersion()\n      .toPromise()\n      .then(version => {\n        this.logger.debug('Current app version:', version);\n        var result = this.releaseProvider.checkForUpdates(version);\n        this.logger.debug('Update available:', result.updateAvailable);\n        if (result.updateAvailable) {\n          this.newRelease = true;\n          this.updateText = this.replaceParametersProvider.replace(\n            this.translate.instant(\n              'There is a new version of {{nameCase}} available'\n            ),\n            { nameCase: this.appProvider.info.nameCase }\n          );\n        }\n      })\n      .catch(err => {\n        this.logger.error('Error getLatestAppVersion', err);\n      });\n  }\n\n  public openServerMessageLink(): void {\n    let url = this.serverMessage.link;\n    this.externalLinkProvider.open(url);\n  }\n\n  public goToAddView(): void {\n    this.navCtrl.push(AddPage);\n  }\n\n  public goToWalletDetails(wallet): void {\n    if (this.showReorderAll || this.showReorderBtc || this.showReorderSafe || this.showReorderBtcz || \n        this.showReorderZcl || this.showReorderAnon || this.showReorderZel || this.showReorderRvn || \n        this.showReorderLtc || this.showReorderBch) return;\n    this.events.unsubscribe('finishIncomingDataMenuEvent');\n    this.events.unsubscribe('bwsEvent');\n    this.events.publish('OpenWallet', wallet);\n  }\n\n  public openNotificationModal(n) {\n    let wallet = this.profileProvider.getWallet(n.walletId);\n\n    if (n.txid) {\n      this.navCtrl.push(TxDetailsPage, { walletId: n.walletId, txid: n.txid });\n    } else {\n      var txp = _.find(this.txps, {\n        id: n.txpId\n      });\n      if (txp) {\n        this.openTxpModal(txp);\n      } else {\n        this.onGoingProcessProvider.set('loadingTxInfo');\n        this.walletProvider\n          .getTxp(wallet, n.txpId)\n          .then(txp => {\n            var _txp = txp;\n            this.onGoingProcessProvider.clear();\n            this.openTxpModal(_txp);\n          })\n          .catch(() => {\n            this.onGoingProcessProvider.clear();\n            this.logger.warn('No txp found');\n            let title = this.translate.instant('Error');\n            let subtitle = this.translate.instant('Transaction not found');\n            return this.popupProvider.ionicAlert(title, subtitle);\n          });\n      }\n    }\n  }\n\n  public reorderAll(): void {\n    this.showReorderAll = !this.showReorderAll;\n  }\n\n  public reorderBtc(): void {\n    this.showReorderBtc = !this.showReorderBtc;\n  }\n\n  public reorderSafe(): void {\n    this.showReorderSafe = !this.showReorderSafe;\n  }\n  public reorderBtcz(): void {\n    this.showReorderBtcz = !this.showReorderBtcz;\n  }\n  public reorderZcl(): void {\n    this.showReorderZcl = !this.showReorderZcl;\n  }\n  public reorderAnon(): void {\n    this.showReorderAnon = !this.showReorderAnon;\n  }\n  public reorderZel(): void {\n    this.showReorderZel = !this.showReorderZel;\n  }\n  public reorderRvn(): void {\n    this.showReorderRvn = !this.showReorderRvn;\n  }\n  public reorderLtc(): void {\n    this.showReorderLtc = !this.showReorderLtc;\n  }\n\n  public reorderBch(): void {\n    this.showReorderBch = !this.showReorderBch;\n  }\n\n  public reorderWalletsAll(indexes): void {\n    let element = this.walletsAll[indexes.from];\n    this.walletsAll.splice(indexes.from, 1);\n    this.walletsAll.splice(indexes.to, 0, element);\n    _.each(this.walletsAll, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsBtc(indexes): void {\n    let element = this.walletsBtc[indexes.from];\n    this.walletsBtc.splice(indexes.from, 1);\n    this.walletsBtc.splice(indexes.to, 0, element);\n    _.each(this.walletsBtc, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsSafe(indexes): void {\n    let element = this.walletsSafe[indexes.from];\n    this.walletsSafe.splice(indexes.from, 1);\n    this.walletsSafe.splice(indexes.to, 0, element);\n    _.each(this.walletsSafe, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsBtcz(indexes): void {\n    let element = this.walletsBtcz[indexes.from];\n    this.walletsBtcz.splice(indexes.from, 1);\n    this.walletsBtcz.splice(indexes.to, 0, element);\n    _.each(this.walletsBtcz, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsZcl(indexes): void {\n    let element = this.walletsZcl[indexes.from];\n    this.walletsZcl.splice(indexes.from, 1);\n    this.walletsZcl.splice(indexes.to, 0, element);\n    _.each(this.walletsZcl, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsAnon(indexes): void {\n    let element = this.walletsAnon[indexes.from];\n    this.walletsAnon.splice(indexes.from, 1);\n    this.walletsAnon.splice(indexes.to, 0, element);\n    _.each(this.walletsAnon, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsZel(indexes): void {\n    let element = this.walletsZel[indexes.from];\n    this.walletsZel.splice(indexes.from, 1);\n    this.walletsZel.splice(indexes.to, 0, element);\n    _.each(this.walletsZel, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsRvn(indexes): void {\n    let element = this.walletsRvn[indexes.from];\n    this.walletsRvn.splice(indexes.from, 1);\n    this.walletsRvn.splice(indexes.to, 0, element);\n    _.each(this.walletsRvn, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n  public reorderWalletsLtc(indexes): void {\n    let element = this.walletsLtc[indexes.from];\n    this.walletsLtc.splice(indexes.from, 1);\n    this.walletsLtc.splice(indexes.to, 0, element);\n    _.each(this.walletsLtc, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n\n  public reorderWalletsBch(indexes): void {\n    let element = this.walletsBch[indexes.from];\n    this.walletsBch.splice(indexes.from, 1);\n    this.walletsBch.splice(indexes.to, 0, element);\n    _.each(this.walletsBch, (wallet, index: number) => {\n      this.profileProvider.setWalletOrder(wallet.id, index);\n    });\n  }\n\n  public goToDownload(): void {\n    let url = 'https://github.com/fair-exchange/copay-safecoin/releases/latest';\n    let optIn = true;\n    let title = this.translate.instant('Update Available');\n    let message = this.translate.instant(\n      'An update to this app is available. For your security, please update to the latest version.'\n    );\n    let okText = this.translate.instant('View Update');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public openTxpModal(tx): void {\n    let modal = this.modalCtrl.create(\n      TxpDetailsPage,\n      { tx },\n      { showBackdrop: false, enableBackdropDismiss: false }\n    );\n    modal.present();\n  }\n\n  public openProposalsPage(): void {\n    this.navCtrl.push(ProposalsPage);\n  }\n\n  public openActivityPage(): void {\n    this.navCtrl.push(ActivityPage);\n  }\n\n/*  public goTo(page: string): void {\n    const pageMap = {\n      AmazonPage,\n      BitPayCardIntroPage,\n      CoinbasePage,\n      GlideraPage,\n      MercadoLibrePage,\n      ShapeshiftPage\n    };\n\n    this.navCtrl.push(pageMap[page]);\n  }\n\n  public goToCard(cardId): void {\n    this.navCtrl.push(BitPayCardPage, { id: cardId });\n  }\n  */\n  public doRefresh(refresher) {\n    refresher.pullMin = 90;\n    this.updateAllWallets();\n    this.getNotifications();\n    setTimeout(() => {\n      refresher.complete();\n    }, 2000);\n  }\n\n  public scan() {\n    this.navCtrl.parent.select(1);\n  }\n\n  public settings() {\n    this.navCtrl.push(SettingsPage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// pages\nimport { CreateWalletPage } from './create-wallet/create-wallet';\nimport { ImportWalletPage } from './import-wallet/import-wallet';\nimport { JoinWalletPage } from './join-wallet/join-wallet';\n\n@Component({\n  selector: 'page-add',\n  templateUrl: 'add.html'\n})\nexport class AddPage {\n  constructor(private navCtrl: NavController, private logger: Logger) {}\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad AddPage');\n  }\n\n  public goToCreateWallet(isShared: boolean): void {\n    this.navCtrl.push(CreateWalletPage, { isShared });\n  }\n\n  public goToJoinWallet(): void {\n    this.navCtrl.push(JoinWalletPage);\n  }\n\n  public goToImportWallet(): void {\n    this.navCtrl.push(ImportWalletPage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add/add.ts","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Providers\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { DerivationPathHelperProvider } from '../../../providers/derivation-path-helper/derivation-path-helper';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { PushNotificationsProvider } from '../../../providers/push-notifications/push-notifications';\nimport {\n  WalletOptions,\n  WalletProvider\n} from '../../../providers/wallet/wallet';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-create-wallet',\n  templateUrl: 'create-wallet.html'\n})\nexport class CreateWalletPage implements OnInit {\n  /* For compressed keys, m*73 + n*34 <= 496 */\n  private COPAYER_PAIR_LIMITS = {\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 4,\n    6: 4,\n    7: 3,\n    8: 3,\n    9: 2,\n    10: 2,\n    11: 1,\n    12: 1\n  };\n\n  private createForm: FormGroup;\n  private defaults;\n  private tc: number;\n  private derivationPathByDefault: string;\n  private derivationPathForTestnet: string;\n  private derivationPathForLtc: string;\n  private derivationPathForZcl: string;\n  private derivationPathForRvn: string;\n  private derivationPathForSafe: string;\n\n  public copayers: number[];\n  public signatures: number[];\n  public showAdvOpts: boolean;\n  public seedOptions;\n  public isShared: boolean;\n  public title: string;\n  public okText: string;\n  public cancelText: string;\n  public coinsname: string[];\n  public coins: string[];\n\n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private fb: FormBuilder,\n    private profileProvider: ProfileProvider,\n    private configProvider: ConfigProvider,\n    private derivationPathHelperProvider: DerivationPathHelperProvider,\n    private popupProvider: PopupProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private logger: Logger,\n    private walletProvider: WalletProvider,\n    private translate: TranslateService,\n    private events: Events,\n    private pushNotificationsProvider: PushNotificationsProvider\n  ) {\n    this.okText = this.translate.instant('Ok');\n    this.cancelText = this.translate.instant('Cancel');\n\t\t    this.coins = ['safe', 'btcz', 'zel', 'zcl', 'anon', 'rvn', 'ltc', 'btc', 'bch' ];\n    this.coinsname = [\n     'Safecoin (SAFE)',\n     'BitcoinZ (BTCZ)',\n     'Anonymous (ANON)',\n     'Zelcash (ZEL)',\n     'Zclassic (ZCL)',\n     'Ravencoin (RVN)',\n     'Litecoin (LTC)',\n     'Bitcoin (BTC)',\n     'Bitcoin Cash (BCH)' ];\n\n    this.isShared = this.navParams.get('isShared');\n    this.title = this.isShared\n      ? this.translate.instant('Create shared wallet')\n      : this.translate.instant('Create personal wallet');\n    this.defaults = this.configProvider.getDefaults();\n    this.tc = this.isShared ? this.defaults.wallet.totalCopayers : 1;\n\n    this.copayers = _.range(2, this.defaults.limits.totalCopayers + 1);\n    this.derivationPathByDefault = this.derivationPathHelperProvider.default;\n    this.derivationPathForTestnet = this.derivationPathHelperProvider.defaultTestnet;\n    this.derivationPathForLtc = this.derivationPathHelperProvider.defaultLtc;\n    this.derivationPathForZcl = this.derivationPathHelperProvider.defaultZcl;\n    this.derivationPathForRvn = this.derivationPathHelperProvider.defaultRvn;\n    this.derivationPathForSafe = this.derivationPathHelperProvider.defaultSafe;\n    this.showAdvOpts = false;\n\n    this.createForm = this.fb.group({\n      walletName: [null, Validators.required],\n      myName: [null],\n      totalCopayers: [1],\n      requiredCopayers: [1],\n      bwsURL: [this.defaults.bws.url],\n      selectedSeed: ['new'],\n      recoveryPhrase: [null],\n      derivationPath: [this.derivationPathByDefault],\n      testnetEnabled: [false],\n      singleAddress: [false],\n      coin: [null, Validators.required]\n    });\n\n    this.createForm.controls['coin'].setValue(this.coins[0]);\n    this.createForm.controls['derivationPath'].setValue(this.derivationPathForSafe);\n    this.setTotalCopayers(this.tc);\n    this.updateRCSelect(this.tc);\n  }\n\n  ngOnInit() {\n    if (this.isShared) {\n      this.createForm.get('myName').setValidators([Validators.required]);\n    }\n  }\n\n  public setTotalCopayers(n: number): void {\n    this.createForm.controls['totalCopayers'].setValue(n);\n    this.updateRCSelect(n);\n    this.updateSeedSourceSelect();\n  }\n\n  private updateRCSelect(n: number): void {\n    this.createForm.controls['totalCopayers'].setValue(n);\n    var maxReq = this.COPAYER_PAIR_LIMITS[n];\n    this.signatures = _.range(1, maxReq + 1);\n    this.createForm.controls['requiredCopayers'].setValue(\n      Math.min(Math.trunc(n / 2 + 1), maxReq)\n    );\n  }\n\n  private updateSeedSourceSelect(): void {\n    this.seedOptions = [\n      {\n        id: 'new',\n        label: this.translate.instant('Random'),\n        supportsTestnet: true\n      },\n      {\n        id: 'set',\n        label: this.translate.instant('Specify Recovery Phrase'),\n        supportsTestnet: false\n      }\n    ];\n    this.createForm.controls['selectedSeed'].setValue(this.seedOptions[0].id); // new or set\n  }\n\n  public seedOptionsChange(seed): void {\n    if (seed === 'set') {\n      this.createForm\n        .get('recoveryPhrase')\n        .setValidators([Validators.required]);\n    } else {\n      this.createForm.get('recoveryPhrase').setValidators(null);\n    }\n\n/*    let path: string = this.createForm.value.coin == 'ltc'\n        ? this.derivationPathForLtc\n         : this.createForm.value.coin == 'zcl'\n          ? this.derivationPathForZcl\n           : this.createForm.value.coin == 'rvn'\n            ? this.derivationPathForRvn\n             : this.createForm.value.coin == 'safe'\n              ? this.derivationPathForSafe\n               : this.derivationPathByDefault; */\n    this.createForm.controls['selectedSeed'].setValue(seed); // new or set\n    if (this.createForm.controls['testnet'])\n      this.createForm.controls['testnet'].setValue(false);\n    this.createForm.controls['derivationPath'].setValue(this.createForm.value.derivationPath);\n    this.createForm.controls['recoveryPhrase'].setValue(null);\n  }\n\n  public setDerivationPath(): void {\n    let path: string = this.createForm.value.testnet\n      ? this.derivationPathForTestnet\n       : this.createForm.value.coin == 'ltc'\n        ? this.derivationPathForLtc\n         : this.createForm.value.coin == 'zcl'\n          ? this.derivationPathForZcl\n           : this.createForm.value.coin == 'rvn'\n            ? this.derivationPathForRvn\n             : this.createForm.value.coin == 'safe'\n              ? this.derivationPathForSafe\n               : this.derivationPathByDefault;\n    this.createForm.controls['derivationPath'].setValue(path);\n  }\n\n  public setOptsAndCreate(): void {\n    let opts: Partial<WalletOptions> = {\n      name: this.createForm.value.walletName,\n      m: this.createForm.value.requiredCopayers,\n      n: this.createForm.value.totalCopayers,\n      myName:\n        this.createForm.value.totalCopayers > 1\n          ? this.createForm.value.myName\n          : null,\n      networkName: this.createForm.value.testnetEnabled ? 'testnet' : 'livenet',\n      bwsurl: this.createForm.value.bwsURL,\n      singleAddress: this.createForm.value.singleAddress,\n      coin: this.createForm.value.coin\n    };\n\n    let setSeed = this.createForm.value.selectedSeed == 'set';\n    if (setSeed) {\n      let words = this.createForm.value.recoveryPhrase || '';\n      if (\n        words.indexOf(' ') == -1 &&\n        words.indexOf('prv') == 1 &&\n        words.length > 108\n      ) {\n        opts.extendedPrivateKey = words;\n      } else {\n        opts.mnemonic = words;\n      }\n\n/*      let pathData =this.derivationPathHelperProvider.parse(this.createForm.value.derivationPath);\n      if (this.createForm.value.coin == 'ltc') {\n        pathData = this.derivationPathHelperProvider.parse(this.derivationPathForLtc);\n      } else if (this.createForm.value.coin == 'zcl') {\n        pathData = this.derivationPathHelperProvider.parse(this.derivationPathForZcl);\n      } else if (this.createForm.value.coin == 'rvn') {\n        pathData = this.derivationPathHelperProvider.parse(this.derivationPathForRvn);\n      } else if (this.createForm.value.coin == 'safe') {\n        pathData = this.derivationPathHelperProvider.parse(this.derivationPathForSafe);\n      }\n  */\n      let pathData = this.derivationPathHelperProvider.parse(this.createForm.value.derivationPath);\n      if (!pathData) {\n        let title = this.translate.instant('Error');\n        let subtitle = this.translate.instant('Invalid derivation path');\n        this.popupProvider.ionicAlert(title, subtitle);\n        return;\n      }\n\n      opts.networkName = pathData.networkName;\n      opts.derivationStrategy = pathData.derivationStrategy;\n    }\n\n    if (setSeed && !opts.mnemonic && !opts.extendedPrivateKey) {\n      let title = this.translate.instant('Error');\n      let subtitle = this.translate.instant(\n        'Please enter the wallet recovery phrase'\n      );\n      this.popupProvider.ionicAlert(title, subtitle);\n      return;\n    }\n\n    this.create(opts);\n  }\n\n  private create(opts): void {\n    this.onGoingProcessProvider.set('creatingWallet');\n\n    this.profileProvider\n      .createWallet(opts)\n      .then(wallet => {\n        this.onGoingProcessProvider.clear();\n        this.events.publish('status:updated');\n        this.walletProvider.updateRemotePreferences(wallet);\n        this.pushNotificationsProvider.updateSubscription(wallet);\n\n        if (this.createForm.value.selectedSeed == 'set') {\n          this.profileProvider.setBackupFlag(wallet.credentials.walletId);\n        }\n        this.navCtrl.popToRoot();\n        this.events.publish('OpenWallet', wallet);\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.error('Create: could not create wallet', err);\n        let title = this.translate.instant('Error');\n        this.popupProvider.ionicAlert(title, err);\n        return;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add/create-wallet/create-wallet.ts","import { Injectable } from '@angular/core';\nimport { QRScanner } from '@ionic-native/qr-scanner';\nimport { Events } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\nimport { PlatformProvider } from '../platform/platform';\n\n@Injectable()\nexport class ScanProvider {\n  public text: string;\n  public scannerVisible: boolean;\n  public lightEnabled: boolean;\n  public frontCameraEnabled: boolean;\n  public isDesktop = !this.platform.isCordova;\n  public isAvailable: boolean = true;\n  public hasPermission: boolean = false;\n  public isDenied: boolean = false;\n  public isRestricted: boolean = false;\n  public canEnableLight: boolean = false;\n  public canChangeCamera: boolean = false;\n  public canOpenSettings: boolean = false;\n  public backCamera: boolean = true;\n  public initializeStarted: boolean = false;\n  public initializeCompleted: boolean = false;\n\n  constructor(\n    private qrScanner: QRScanner,\n    private platform: PlatformProvider,\n    private logger: Logger,\n    private events: Events\n  ) {\n    this.scannerVisible = false;\n    this.lightEnabled = false;\n    this.frontCameraEnabled = false;\n  }\n\n  private checkCapabilities(status) {\n    this.logger.debug('scannerService is reviewing platform capabilities...');\n    // Permission can be assumed on the desktop builds\n    this.hasPermission = this.isDesktop || status.authorized ? true : false;\n    this.isDenied = status.denied ? true : false;\n    this.isRestricted = status.restricted ? true : false;\n    this.canEnableLight = status.canEnableLight ? true : false;\n    this.canChangeCamera = status.canChangeCamera ? true : false;\n    this.canOpenSettings = status.canOpenSettings ? true : false;\n    this.logCapabilities();\n  }\n\n  private orIsNot(bool: boolean): string {\n    return bool ? '' : 'not ';\n  }\n\n  private logCapabilities() {\n    this.logger.debug(\n      'A camera is ' + this.orIsNot(this.isAvailable) + 'available to this app.'\n    );\n    var access = 'not authorized';\n    if (this.hasPermission) access = 'authorized';\n    if (this.isDenied) access = 'denied';\n    if (this.isRestricted) access = 'restricted';\n    this.logger.debug('Camera access is ' + access + '.');\n    this.logger.debug(\n      'Support for opening device settings is ' +\n        this.orIsNot(this.canOpenSettings) +\n        'available on this platform.'\n    );\n    this.logger.debug(\n      'A light is ' +\n        this.orIsNot(this.canEnableLight) +\n        'available on this platform.'\n    );\n    this.logger.debug(\n      'A second camera is ' +\n        this.orIsNot(this.canChangeCamera) +\n        'available on this platform.'\n    );\n  }\n\n  /**\n   * Immediately return known capabilities of the current platform.\n   */\n  public getCapabilities() {\n    return {\n      isAvailable: this.isAvailable,\n      hasPermission: this.hasPermission,\n      isDenied: this.isDenied,\n      isRestricted: this.isRestricted,\n      canEnableLight: this.canEnableLight,\n      canChangeCamera: this.canChangeCamera,\n      canOpenSettings: this.canOpenSettings\n    };\n  }\n\n  /**\n   * If camera access has been granted, pre-initialize the QRScanner. This method\n   * can be safely called before the scanner is visible to improve perceived\n   * scanner loading times.\n   *\n   * The `status` of QRScanner is returned to the callback.\n   */\n  public gentleInitialize(): Promise<any> {\n    return new Promise(resolve => {\n      if (this.initializeStarted && !this.isDesktop) {\n        this.qrScanner.getStatus().then(status => {\n          this.completeInitialization(status);\n        });\n        return resolve();\n      }\n      this.initializeStarted = true;\n      this.logger.debug('Trying to pre-initialize QRScanner.');\n      if (!this.isDesktop) {\n        this.qrScanner.getStatus().then(status => {\n          this.checkCapabilities(status);\n          if (status.authorized) {\n            this.logger.debug('Camera permission already granted.');\n            this.initialize().then(() => {\n              return resolve();\n            });\n          } else {\n            this.logger.debug(\n              'QRScanner not authorized, waiting to initalize.'\n            );\n            this.completeInitialization(status);\n            return resolve();\n          }\n        });\n      } else {\n        this.logger.debug(\n          'To avoid flashing the privacy light, we do not pre-initialize the camera on desktop.'\n        );\n        return resolve();\n      }\n    });\n  }\n\n  public reinitialize(): void {\n    this.initializeCompleted = false;\n    this.qrScanner.destroy();\n    this.initialize();\n  }\n\n  public initialize(): Promise<any> {\n    return new Promise(resolve => {\n      this.logger.debug('Initializing scanner...');\n      this.qrScanner\n        .prepare()\n        .then(status => {\n          this.completeInitialization(status);\n          return resolve();\n        })\n        .catch(err => {\n          this.isAvailable = false;\n          this.logger.error(err);\n          // does not return `status` if there is an error\n          this.qrScanner.getStatus().then(status => {\n            this.completeInitialization(status);\n            return resolve();\n          });\n        });\n    });\n  }\n\n  private completeInitialization(status): void {\n    this.checkCapabilities(status);\n    this.initializeCompleted = true;\n    this.events.publish('scannerServiceInitialized');\n  }\n\n  public isInitialized(): boolean {\n    return this.initializeCompleted;\n  }\n  public isInitializeStarted(): boolean {\n    return this.initializeStarted;\n  }\n\n  /**\n   * (Re)activate the QRScanner, and cancel the timeouts if present.\n   *\n   * The `status` of QRScanner is passed to the callback when activation\n   * is complete.\n   */\n  public activate(): Promise<any> {\n    return new Promise(resolve => {\n      this.logger.debug('Activating scanner...');\n      this.qrScanner.show().then(status => {\n        this.initializeCompleted = true;\n        this.checkCapabilities(status);\n        return resolve();\n      });\n    });\n  }\n  /**\n   * Start a new scan.\n   */\n  public scan(): Promise<any> {\n    return new Promise(resolve => {\n      this.logger.debug('Scanning...');\n      let scanSub = this.qrScanner.scan().subscribe((text: string) => {\n        this.logger.debug('Scanned something', text);\n        scanSub.unsubscribe(); // stop scanning\n        return resolve(text);\n      });\n    });\n  }\n\n  public pausePreview(): void {\n    this.qrScanner.pausePreview();\n  }\n\n  public resumePreview(): void {\n    this.qrScanner.resumePreview();\n  }\n\n  /**\n   * Deactivate the QRScanner. To balance user-perceived performance and power\n   * consumption, this kicks off a countdown which will \"sleep\" the scanner\n   * after a certain amount of time.\n   *\n   * The `status` of QRScanner is passed to the callback when deactivation\n   * is complete.\n   */\n\n  public deactivate(): void {\n    this.logger.debug('Deactivating scanner...');\n    if (this.lightEnabled) {\n      this.qrScanner.disableLight();\n      this.lightEnabled = false;\n    }\n    this.hide();\n    this.destroy();\n  }\n\n  // Natively hide the QRScanner's preview\n  // On mobile platforms, this can reduce GPU/power usage\n  // On desktop, this fully turns off the camera (and any associated privacy lights)\n  private hide() {\n    this.qrScanner.hide();\n  }\n\n  // Reduce QRScanner power/processing consumption by the maximum amount\n  private destroy() {\n    this.qrScanner.destroy();\n  }\n\n  /**\n   * Toggle the device light (if available).\n   *\n   * The callback receives a boolean which is `true` if the light is enabled.\n   */\n\n  public toggleLight(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.info('Toggling light...');\n      if (this.lightEnabled) {\n        this.qrScanner\n          .disableLight()\n          .then(() => {\n            this.lightEnabled = false;\n            return resolve(this.lightEnabled);\n          })\n          .catch(err => {\n            this.logger.error('Scan Provider Error (disableLight)', err);\n            return reject(err);\n          });\n      } else {\n        this.qrScanner\n          .enableLight()\n          .then(() => {\n            this.lightEnabled = true;\n            return resolve(this.lightEnabled);\n          })\n          .catch(err => {\n            this.logger.error('Scan Provider Error (enableLight)', err);\n            return reject(err);\n          });\n      }\n    });\n  }\n\n  /**\n   * Switch cameras (if a second camera is available).\n   *\n   * The `status` of QRScanner is passed to the callback when activation\n   * is complete.\n   */\n\n  public toggleCamera(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.logger.info('Toggling camera...');\n      if (this.frontCameraEnabled) {\n        this.qrScanner\n          .useBackCamera()\n          .then(() => {\n            this.frontCameraEnabled = false;\n            return resolve(this.frontCameraEnabled);\n          })\n          .catch(err => {\n            this.logger.error('Scan Provider Error (useBackCamera)', err);\n            return reject(err);\n          });\n      } else {\n        this.qrScanner\n          .useFrontCamera()\n          .then(() => {\n            this.frontCameraEnabled = true;\n            return resolve(this.frontCameraEnabled);\n          })\n          .catch(err => {\n            this.logger.error('Scan Provider Error (useFrontCamera)', err);\n            return reject(err);\n          });\n      }\n    });\n  }\n\n  public openSettings(): void {\n    this.logger.debug('Attempting to open device settings...');\n    this.qrScanner.openSettings();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/scan/scan.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Native\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { TxFormatProvider } from '../../../providers/tx-format/tx-format';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-custom-amount',\n  templateUrl: 'custom-amount.html'\n})\nexport class CustomAmountPage {\n  public protocolHandler: string;\n  public address: string;\n  public qrAddress: string;\n  public wallet;\n  public showShareButton: boolean;\n  public amountUnitStr: string;\n  public amountCoin: string;\n  public altAmountStr: string;\n\n  constructor(\n    private navParams: NavParams,\n    private profileProvider: ProfileProvider,\n    private platformProvider: PlatformProvider,\n    private walletProvider: WalletProvider,\n    private logger: Logger,\n    private socialSharing: SocialSharing,\n    private txFormatProvider: TxFormatProvider,\n    private actionSheetProvider: ActionSheetProvider,\n    private navCtrl: NavController\n  ) {\n    let walletId = this.navParams.data.id;\n    this.showShareButton = this.platformProvider.isCordova;\n\n    this.wallet = this.profileProvider.getWallet(walletId);\n\n    this.walletProvider.getAddress(this.wallet, false).then(addr => {\n      this.address = this.walletProvider.getAddressView(this.wallet, addr);\n\n      let parsedAmount = this.txFormatProvider.parseAmount(\n        this.wallet.coin,\n        this.navParams.data.amount,\n        this.navParams.data.currency\n      );\n\n      // Amount in USD or BTC\n      let _amount = parsedAmount.amount;\n      let _currency = parsedAmount.currency;\n      this.amountUnitStr = parsedAmount.amountUnitStr;\n\n      if (_currency != 'BTC' && _currency != 'BCH' && _currency != 'SAFE' && _currency != 'BTCZ' && \n          _currency != 'ZCL' && _currency != 'ANON' && _currency != 'ZEL' && _currency != 'RVN' && _currency != 'LTC') {\n        // Convert to BTC or BCH\n        let amountUnit = this.txFormatProvider.satToUnit(\n          parsedAmount.amountSat\n        );\n        var btcParsedAmount = this.txFormatProvider.parseAmount(\n          this.wallet.coin,\n          amountUnit,\n          this.wallet.coin.toUpperCase()\n        );\n\n        this.amountCoin = btcParsedAmount.amount;\n        this.altAmountStr = btcParsedAmount.amountUnitStr;\n      } else {\n        this.amountCoin = _amount; // BTC or BCH\n        this.altAmountStr = this.txFormatProvider.formatAlternativeStr(\n          this.wallet.coin,\n          parsedAmount.amountSat\n        );\n      }\n\n      this.updateQrAddress();\n    });\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad CustomAmountPage');\n  }\n\n  private updateQrAddress(): void {\n    this.qrAddress =\n      this.walletProvider.getProtoAddress(this.wallet, this.address) +\n      '?amount=' +\n      this.amountCoin;\n  }\n\n  public shareAddress(): void {\n    this.socialSharing.share(this.qrAddress);\n  }\n\n  public showFullInfo(): void {\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'custom-amount',\n      {\n        address: this.address,\n        amount: this.amountUnitStr\n      }\n    );\n    infoSheet.present();\n  }\n\n  public close(): void {\n    this.navCtrl.popToRoot();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/receive/custom-amount/custom-amount.ts","import { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\n\n// providers\nimport { WalletProvider } from '../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-payrpo',\n  templateUrl: 'paypro.html'\n})\nexport class PayProPage {\n  public tx;\n  public wallet;\n  public address: string;\n\n  constructor(\n    private navParams: NavParams,\n    private viewCtrl: ViewController,\n    private walletProvider: WalletProvider\n  ) {\n    this.tx = this.navParams.data.tx;\n    let wallet = this.navParams.data.wallet;\n    this.address = this.walletProvider.getAddressView(\n      wallet,\n      this.tx.paypro.toAddress\n    );\n  }\n\n  close() {\n    this.viewCtrl.dismiss();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/paypro/paypro.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ViewController } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Providers\nimport { FeeProvider } from '../../../providers/fee/fee';\nimport { PopupProvider } from '../../../providers/popup/popup';\n\n@Component({\n  selector: 'page-choose-fee-level',\n  templateUrl: 'choose-fee-level.html'\n})\nexport class ChooseFeeLevelPage {\n  private FEE_MULTIPLIER: number = 10;\n  private FEE_MIN: number = 0;\n  public maxFeeRecommended: number;\n  public minFeeRecommended: number;\n  private minFeeAllowed: number;\n  public maxFeeAllowed: number;\n\n  public network: string;\n  public feeLevel: string;\n  public customFeePerKB: string;\n  public feePerSatByte: string;\n  public selectedFee: string;\n  public feeOpts;\n  public loadingFee: boolean;\n  public feeLevels;\n  public coin: string;\n  public avgConfirmationTime: number;\n  public customSatPerByte: number;\n  public maxFee: number;\n  public minFee: number;\n  public showError: boolean;\n  public showMaxWarning: boolean;\n  public showMinWarning: boolean;\n  public okText: string;\n  public cancelText: string;\n\n  constructor(\n    private viewCtrl: ViewController,\n    private logger: Logger,\n    private popupProvider: PopupProvider,\n    private feeProvider: FeeProvider,\n    private translate: TranslateService\n  ) {\n    this.okText = this.translate.instant('Ok');\n    this.cancelText = this.translate.instant('Cancel');\n    // From parent controller\n    this.network = this.viewCtrl.data.network;\n    this.feeLevel = this.viewCtrl.data.feeLevel;\n\n    // IF usingCustomFee\n    this.customFeePerKB = this.viewCtrl.data.customFeePerKB\n      ? this.viewCtrl.data.customFeePerKB\n      : null;\n    this.feePerSatByte = this.viewCtrl.data.feePerSatByte\n      ? this.viewCtrl.data.feePerSatByte\n      : null;\n\n    if (_.isEmpty(this.feeLevel))\n      this.showErrorAndClose(\n        null,\n        this.translate.instant('Fee level is not defined')\n      );\n    this.selectedFee = this.feeLevel;\n\n    this.feeOpts = Object.keys(this.feeProvider.getFeeOpts());\n    this.loadingFee = true;\n    this.feeProvider\n      .getFeeLevels(this.coin)\n      .then(levels => {\n        this.loadingFee = false;\n        if (_.isEmpty(levels)) {\n          this.showErrorAndClose(\n            null,\n            this.translate.instant('Could not get fee levels')\n          );\n          return;\n        }\n        this.feeLevels = levels;\n        this.updateFeeRate();\n      })\n      .catch(err => {\n        this.loadingFee = false;\n        this.showErrorAndClose(null, err);\n        return;\n      });\n  }\n\n  private showErrorAndClose(title: string, msg: string): void {\n    title = title ? title : this.translate.instant('Error');\n    this.logger.error(msg);\n    this.popupProvider.ionicAlert(title, msg).then(() => {\n      this.viewCtrl.dismiss();\n    });\n  }\n\n  public updateFeeRate() {\n    let value = _.find(this.feeLevels.levels[this.network], feeLevel => {\n      return feeLevel.level == this.feeLevel;\n    });\n\n    // If no custom fee\n    if (value) {\n      this.customFeePerKB = null;\n      this.feePerSatByte = (value.feePerKb / 1000).toFixed();\n      this.avgConfirmationTime = value.nbBlocks * 10;\n    } else {\n      this.avgConfirmationTime = null;\n      this.customSatPerByte = Number(this.feePerSatByte);\n      this.customFeePerKB = (+this.feePerSatByte * 1000).toFixed();\n    }\n\n    // Warnings\n    this.setFeesRecommended();\n    this.checkFees(this.feePerSatByte);\n  }\n\n  public setFeesRecommended(): void {\n    this.maxFeeRecommended = this.getMaxRecommended();\n    this.minFeeRecommended = this.getMinRecommended();\n    this.minFeeAllowed = this.FEE_MIN;\n    this.maxFeeAllowed = this.maxFeeRecommended * this.FEE_MULTIPLIER;\n    this.maxFee =\n      this.maxFeeRecommended > this.maxFeeAllowed\n        ? this.maxFeeRecommended\n        : this.maxFeeAllowed;\n    this.minFee =\n      this.minFeeRecommended < this.minFeeAllowed\n        ? this.minFeeRecommended\n        : this.minFeeAllowed;\n  }\n\n  private getMinRecommended(): number {\n    let value = _.find(this.feeLevels.levels[this.network], feeLevel => {\n      return feeLevel.level == 'superEconomy';\n    });\n    return parseInt((value.feePerKb / 1000).toFixed(), 10);\n  }\n\n  private getMaxRecommended(): number {\n    let value = _.find(this.feeLevels.levels[this.network], feeLevel => {\n      return feeLevel.level == 'urgent';\n    });\n    return parseInt((value.feePerKb / 1000).toFixed(), 10);\n  }\n\n  public checkFees(feePerSatByte: string): void {\n    let fee = Number(feePerSatByte);\n    this.showError = fee <= this.minFeeAllowed ? true : false;\n    this.showMinWarning =\n      fee > this.minFeeAllowed && fee < this.minFeeRecommended ? true : false;\n    this.showMaxWarning =\n      fee < this.maxFeeAllowed && fee > this.maxFeeRecommended ? true : false;\n  }\n\n  public ok(): void {\n    this.customFeePerKB = this.customFeePerKB\n      ? (this.customSatPerByte * 1000).toFixed()\n      : null;\n    this.viewCtrl.dismiss({\n      newFeeLevel: this.feeLevel,\n      customFeePerKB: this.customFeePerKB\n    });\n  }\n\n  public cancel(): void {\n    this.viewCtrl.dismiss();\n  }\n\n  public changeSelectedFee(newFeeLevelValue: string): void {\n    if (this.feeLevel != newFeeLevelValue) {\n      this.logger.debug('New fee level: ' + newFeeLevelValue);\n      this.feeLevel = newFeeLevelValue;\n      this.updateFeeRate();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/send/choose-fee-level/choose-fee-level.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalController, NavController } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// providers\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\n// pages\nimport { TxDetailsPage } from '../../tx-details/tx-details';\nimport { TxpDetailsPage } from '../../txp-details/txp-details';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-activity',\n  templateUrl: 'activity.html'\n})\nexport class ActivityPage {\n  public addressbook;\n  public txps;\n  public notifications;\n\n  constructor(\n    private navCtrl: NavController,\n    private logger: Logger,\n    private profileProvider: ProfileProvider,\n    private modalCtrl: ModalController,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private walletProvider: WalletProvider,\n    private popupProvider: PopupProvider,\n    private translate: TranslateService\n  ) {}\n\n  ionViewWillEnter() {\n    let loading = this.translate.instant('Updating... Please stand by');\n    this.onGoingProcessProvider.set(loading);\n    this.profileProvider\n      .getNotifications(50)\n      .then(nData => {\n        this.onGoingProcessProvider.clear();\n        this.notifications = nData.notifications;\n        this.profileProvider\n          .getTxps({})\n          .then(txpsData => {\n            this.txps = txpsData.txps;\n          })\n          .catch(err => {\n            this.logger.error(err);\n          });\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.error(err);\n      });\n  }\n\n  public openNotificationModal(n): void {\n    let wallet = this.profileProvider.getWallet(n.walletId);\n\n    if (n.txid) {\n      this.navCtrl.push(TxDetailsPage, { txid: n.txid, walletId: n.walletId });\n    } else {\n      let txp = _.find(this.txps, {\n        id: n.txpId\n      });\n      if (txp) {\n        let modal = this.modalCtrl.create(\n          TxpDetailsPage,\n          { tx: txp },\n          { showBackdrop: false, enableBackdropDismiss: false }\n        );\n        modal.present();\n      } else {\n        this.onGoingProcessProvider.set('loadingTxInfo');\n        this.walletProvider\n          .getTxp(wallet, n.txpId)\n          .then(txp => {\n            let _txp = txp;\n            this.onGoingProcessProvider.clear();\n            let modal = this.modalCtrl.create(\n              TxpDetailsPage,\n              { tx: _txp },\n              { showBackdrop: false, enableBackdropDismiss: false }\n            );\n            modal.present();\n          })\n          .catch(() => {\n            this.onGoingProcessProvider.clear();\n            this.logger.warn('No txp found');\n            let title = this.translate.instant('Error');\n            let subtitle = this.translate.instant('Transaction not found');\n            this.popupProvider.ionicAlert(title, subtitle);\n          });\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/activity/activity.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from '../../../providers/logger/logger';\n\n// providers\nimport { AddressBookProvider } from '../../../providers/address-book/address-book';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { ProfileProvider } from '../../../providers/profile/profile';\n\n@Component({\n  selector: 'page-proposals',\n  templateUrl: 'proposals.html'\n})\nexport class ProposalsPage {\n  public addressbook;\n  public txps;\n\n  constructor(\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private addressBookProvider: AddressBookProvider,\n    private logger: Logger,\n    private profileProvider: ProfileProvider,\n    private translate: TranslateService\n  ) {}\n\n  ionViewWillEnter() {\n    this.addressBookProvider\n      .list()\n      .then(ab => {\n        this.addressbook = ab || {};\n\n        let loading = this.translate.instant(\n          'Updating pending proposals... Please stand by'\n        );\n        this.onGoingProcessProvider.set(loading);\n        this.profileProvider\n          .getTxps(50)\n          .then(txpsData => {\n            this.onGoingProcessProvider.clear();\n            this.txps = txpsData.txps;\n          })\n          .catch(err => {\n            this.onGoingProcessProvider.clear();\n            this.logger.error(err);\n          });\n      })\n      .catch(err => {\n        this.logger.error(err);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/proposals/proposals.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { AppProvider } from '../../providers/app/app';\n\n@Injectable()\nexport class ReleaseProvider {\n  private LATEST_RELEASE_URL: string;\n  private appVersion: string;\n\n  constructor(private http: HttpClient, private app: AppProvider) {\n    this.LATEST_RELEASE_URL =\n      'https://api.github.com/repos/fair-exchange/copay-safecoin/releases/latest';\n    this.appVersion = this.app.info.version;\n  }\n\n  public getCurrentAppVersion() {\n    return this.appVersion;\n  }\n\n  public getLatestAppVersion() {\n    return this.http.get(this.LATEST_RELEASE_URL).pipe(map(x => x['tag_name']));\n  }\n\n  private verifyTagFormat(tag: string) {\n    var regex = /^v?\\d+\\.\\d+\\.\\d+$/i;\n    return regex.exec(tag);\n  }\n\n  private formatTagNumber(tag: string) {\n    var formattedNumber = tag.replace(/^v/i, '').split('.');\n    return {\n      major: +formattedNumber[0],\n      minor: +formattedNumber[1],\n      patch: +formattedNumber[2]\n    };\n  }\n\n  public checkForUpdates(\n    latestVersion: string,\n    currentVersion?: string\n  ): {\n    updateAvailable: boolean | null;\n    availableVersion: string | null;\n    error: string | null;\n  } {\n    if (!currentVersion) currentVersion = this.appVersion;\n\n    let result = {\n      updateAvailable: null,\n      availableVersion: null,\n      error: null\n    };\n\n    if (!this.verifyTagFormat(currentVersion))\n      result.error =\n        'Cannot verify the format of version tag: ' + currentVersion;\n    if (!this.verifyTagFormat(latestVersion))\n      result.error =\n        'Cannot verify the format of latest release tag: ' + latestVersion;\n\n    let current = this.formatTagNumber(currentVersion);\n    let latest = this.formatTagNumber(latestVersion);\n\n    if (\n      latest.major > current.major ||\n      (latest.major == current.major && latest.minor > current.minor) ||\n      (latest.minor == current.minor && latest.patch > current.patch)\n    ) {\n      result.updateAvailable = true;\n      result.availableVersion = latestVersion;\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/release/release.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalController, NavController } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\nimport * as _ from 'lodash';\n\n// providers\nimport { AppProvider } from '../../providers/app/app';\n// import { BitPayCardProvider } from '../../providers/bitpay-card/bitpay-card';\nimport { ConfigProvider } from '../../providers/config/config';\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { HomeIntegrationsProvider } from '../../providers/home-integrations/home-integrations';\nimport { LanguageProvider } from '../../providers/language/language';\nimport { PlatformProvider } from '../../providers/platform/platform';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { TouchIdProvider } from '../../providers/touchid/touchid';\n\n// pages\nimport { SendFeedbackPage } from '../feedback/send-feedback/send-feedback';\n// import { AmazonSettingsPage } from '../integrations/amazon/amazon-settings/amazon-settings';\n// import { BitPaySettingsPage } from '../integrations/bitpay-card/bitpay-settings/bitpay-settings';\n// import { CoinbaseSettingsPage } from '../integrations/coinbase/coinbase-settings/coinbase-settings';\n// import { GlideraSettingsPage } from '../integrations/glidera/glidera-settings/glidera-settings';\n// import { MercadoLibreSettingsPage } from '../integrations/mercado-libre/mercado-libre-settings/mercado-libre-settings';\n// import { ShapeshiftSettingsPage } from '../integrations/shapeshift/shapeshift-settings/shapeshift-settings';\nimport { PinModalPage } from '../pin/pin-modal/pin-modal';\nimport { AboutPage } from './about/about';\nimport { AddressbookPage } from './addressbook/addressbook';\nimport { AdvancedPage } from './advanced/advanced';\nimport { AltCurrencyPage } from './alt-currency/alt-currency';\nimport { FeePolicyPage } from './fee-policy/fee-policy';\nimport { LanguagePage } from './language/language';\nimport { LockPage } from './lock/lock';\nimport { NotificationsPage } from './notifications/notifications';\nimport { SharePage } from './share/share';\nimport { WalletSettingsPage } from './wallet-settings/wallet-settings';\n\n@Component({\n  selector: 'page-settings',\n  templateUrl: 'settings.html'\n})\nexport class SettingsPage {\n  public appName: string;\n  public currentLanguageName: string;\n  public languages;\n  public walletsAll;\n  public walletsBtc;\n  public walletsBch;\n  public walletsSafe;\n  public walletsBtcz;\n  public walletsZcl;\n  public walletsAnon;\n  public walletsZel;\n  public walletsRvn;\n  public walletsLtc;\n  public config;\n  public selectedAlternative;\n  public isCordova: boolean;\n  public lockMethod: string;\n  public integrationServices = [];\n  public bitpayCardItems = [];\n  public showBitPayCard: boolean = false;\n\n  constructor(\n    private navCtrl: NavController,\n    private app: AppProvider,\n    private language: LanguageProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private profileProvider: ProfileProvider,\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private homeIntegrationsProvider: HomeIntegrationsProvider,\n//    private bitPayCardProvider: BitPayCardProvider,\n    private platformProvider: PlatformProvider,\n    private translate: TranslateService,\n    private modalCtrl: ModalController,\n    private touchid: TouchIdProvider\n  ) {\n    this.appName = this.app.info.nameCase;\n    this.walletsAll = [];\n    this.walletsBch = [];\n    this.walletsBtc = [];\n    this.walletsSafe = [];\n    this.walletsBtcz = [];\n    this.walletsZcl = [];\n    this.walletsAnon = [];\n    this.walletsZel = [];\n    this.walletsRvn = [];\n    this.walletsLtc = [];\n    this.isCordova = this.platformProvider.isCordova;\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad SettingsPage');\n  }\n\n  ionViewWillEnter() {\n    this.currentLanguageName = this.language.getName(\n      this.language.getCurrent()\n    );\n    this.walletsAll = this.profileProvider.getWallets();\n    this.walletsBtc = this.profileProvider.getWallets({\n      coin: 'btc'\n    });\n    this.walletsSafe = this.profileProvider.getWallets({\n      coin: 'safe'\n    });\n    this.walletsBtcz = this.profileProvider.getWallets({\n      coin: 'btcz'\n    });\n    this.walletsZcl = this.profileProvider.getWallets({\n      coin: 'zcl'\n    });\n    this.walletsAnon = this.profileProvider.getWallets({\n      coin: 'anon'\n    });\n    this.walletsZel = this.profileProvider.getWallets({\n      coin: 'zel'\n    });\n    this.walletsRvn = this.profileProvider.getWallets({\n      coin: 'rvn'\n    });\n    this.walletsLtc = this.profileProvider.getWallets({\n      coin: 'ltc'\n    });\n    this.walletsBch = this.profileProvider.getWallets({\n      coin: 'bch'\n    });\n    this.config = this.configProvider.get();\n    this.selectedAlternative = {\n      name: this.config.wallet.settings.alternativeName,\n      isoCode: this.config.wallet.settings.alternativeIsoCode\n    };\n    this.lockMethod =\n      this.config && this.config.lock && this.config.lock.method\n        ? this.config.lock.method.toLowerCase()\n        : null;\n  }\n\n  ionViewDidEnter() {\n    // Show integrations\n    let integrations = this.homeIntegrationsProvider.get();\n\n    // Hide BitPay if linked\n    setTimeout(() => {\n      this.integrationServices = _.remove(_.clone(integrations), x => {\n        if (x.name == 'debitcard' && x.linked) return;\n        else return x;\n      });\n    }, 200);\n\n    // Only BitPay Wallet\n/*    this.bitPayCardProvider.get({}, (_, cards) => {\n      this.showBitPayCard = this.app.info._enabledExtensions.debitcard\n        ? true\n        : false;\n      this.bitpayCardItems = cards;\n    }); */\n  }\n\n  public openAltCurrencyPage(): void {\n    this.navCtrl.push(AltCurrencyPage);\n  }\n\n  public openLanguagePage(): void {\n    this.navCtrl.push(LanguagePage);\n  }\n\n  public openAdvancedPage(): void {\n    this.navCtrl.push(AdvancedPage);\n  }\n\n  public openAboutPage(): void {\n    this.navCtrl.push(AboutPage);\n  }\n\n  public openLockPage(): void {\n    let config = this.configProvider.get();\n    let lockMethod =\n      config && config.lock && config.lock.method\n        ? config.lock.method.toLowerCase()\n        : null;\n    if (!lockMethod || lockMethod == 'disabled') this.navCtrl.push(LockPage);\n    if (lockMethod == 'pin') this.openPinModal('lockSetUp');\n    if (lockMethod == 'fingerprint') this.checkFingerprint();\n  }\n\n  public openAddressBookPage(): void {\n    this.navCtrl.push(AddressbookPage);\n  }\n\n  public openNotificationsPage(): void {\n    this.navCtrl.push(NotificationsPage);\n  }\n\n  public openFeePolicyPage(): void {\n    this.navCtrl.push(FeePolicyPage);\n  }\n\n  public openWalletSettingsPage(walletId: string): void {\n    this.navCtrl.push(WalletSettingsPage, { walletId });\n  }\n\n  public openSendFeedbackPage(): void {\n    this.navCtrl.push(SendFeedbackPage);\n  }\n\n  public openSharePage(): void {\n    this.navCtrl.push(SharePage);\n  }\n\n/*  public openSettingIntegration(name: string): void {\n    switch (name) {\n      case 'amazon':\n        this.navCtrl.push(AmazonSettingsPage);\n        break;\n      case 'coinbase':\n        this.navCtrl.push(CoinbaseSettingsPage);\n        break;\n      case 'debitcard':\n        this.navCtrl.push(BitPaySettingsPage);\n        break;\n      case 'glidera':\n        this.navCtrl.push(GlideraSettingsPage);\n        break;\n      case 'mercadolibre':\n        this.navCtrl.push(MercadoLibreSettingsPage);\n        break;\n      case 'shapeshift':\n        this.navCtrl.push(ShapeshiftSettingsPage);\n        break;\n    }\n  }\n\n  public openCardSettings(id): void {\n    this.navCtrl.push(BitPaySettingsPage, { id });\n  }\n\n  public openHelpExternalLink(): void {\n    let url = 'https://discord.gg/vKdaEBq';\n      this.appName == 'Copay'\n        ? 'https://github.com/bitpay/copay/issues'\n        : 'https://help.bitpay.com/bitpay-app';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant(\n      'Help and support information is available in discord.'\n    );\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  } */\n\n  public openExternalLink(sorce: string): void {\n    let url = '';\n    let message = '';\n    switch (sorce) {\n      case 'help':\n        url = 'https://discord.gg/vKdaEBq';\n        message = this.translate.instant(\n          'Help and support information is available in discord.'\n        );\n        break;\n      case 'safecoin':\n        url = 'https://safecoin.org';\n        message = this.translate.instant(\n          'More about the Safecoin project.'\n        );\n        break;\n      case 'safetrade':\n        url = 'https://safe.trade';\n        message = this.translate.instant(\n          'Trade safely with SafeTrade.'\n        );\n        break;\n      case 'discord':\n        url = 'https://discord.gg/vKdaEBq';\n        message = this.translate.instant(\n          'Join our Discord community.'\n        );\n        break;\n    }\n    let optIn = true;\n    let title = null;\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  private openPinModal(action): void {\n    const modal = this.modalCtrl.create(\n      PinModalPage,\n      { action },\n      { cssClass: 'fullscreen-modal' }\n    );\n    modal.present();\n    modal.onDidDismiss(cancelClicked => {\n      if (!cancelClicked) this.navCtrl.push(LockPage);\n    });\n  }\n\n  private checkFingerprint(): void {\n    this.touchid.check().then(() => {\n      this.navCtrl.push(LockPage);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\nimport * as _ from 'lodash';\n\nconst exchangeList: object[] = [{ name: 'coinbase' }, { name: 'glidera' }];\n\n@Injectable()\nexport class HomeIntegrationsProvider {\n  public services;\n  constructor(public http: HttpClient, private logger: Logger) {\n    this.logger.info('HomeIntegrationsProviders initialized.');\n    this.services = [];\n  }\n\n  public register(serviceInfo) {\n    // Check if already exists\n    if (_.find(this.services, { name: serviceInfo.name })) return;\n    this.logger.info('Adding home Integrations entry:' + serviceInfo.name);\n    this.services.push(serviceInfo);\n  }\n\n  public unregister(serviceName) {\n    this.services = _.filter(this.services, x => {\n      return x.name != serviceName;\n    });\n  }\n\n  public updateLink(serviceName, token) {\n    this.services = _.filter(this.services, x => {\n      if (x.name == serviceName) x.linked = !!token;\n      return x;\n    });\n  }\n\n  public updateConfig(serviceName, show) {\n    this.services = _.filter(this.services, x => {\n      if (x.name == serviceName) x.show = !!show;\n      return x;\n    });\n  }\n\n  public get() {\n    return _.orderBy(this.services, ['name'], ['asc']);\n  }\n\n  public getAvailableExchange() {\n    let exchangeServices = _.intersectionBy(\n      this.services,\n      exchangeList,\n      'name'\n    );\n    return _.filter(exchangeServices, { linked: true, show: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/home-integrations/home-integrations.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 942;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bindings\n// module id = 942\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n// Providers\nimport { AppProvider } from '../../providers/app/app';\nimport { BwcProvider } from '../../providers/bwc/bwc';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { ConfigProvider } from '../config/config';\n\n@Injectable()\nexport class BackupProvider {\n  constructor(\n    private appProvider: AppProvider,\n    private bwcProvider: BwcProvider,\n    private logger: Logger,\n    private profileProvider: ProfileProvider,\n    private configProvider: ConfigProvider\n  ) {\n    this.logger.info('BackupProvider initialized.');\n  }\n\n  public walletDownload(password, opts, walletId: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let config = this.configProvider.get();\n\n      let wallet = this.profileProvider.getWallet(walletId);\n      let ew = this.walletExport(password, opts, walletId);\n      if (!ew) return reject('Could not create backup');\n\n      let walletName =\n        wallet.credentials.walletName || wallet.credentials.walletId;\n\n      let alias =\n        config.aliasFor && config.aliasFor[wallet.credentials.walletId];\n\n      if (alias) {\n        walletName = alias + ' [' + walletName + ']';\n      }\n\n      if (opts.noSign) walletName = walletName + '-noSign';\n      let filename =\n        walletName + '-' + this.appProvider.info.nameCase + 'backup.aes.json';\n      this._download(ew, filename).then(() => {\n        return resolve();\n      });\n    });\n  }\n\n  public walletExport(password: string, opts, walletId: string) {\n    if (!password) {\n      return null;\n    }\n    let wallet = this.profileProvider.getWallet(walletId);\n    try {\n      opts = opts ? opts : {};\n      let b = wallet.export(opts);\n      if (opts.addressBook) b = this.addMetadata(b, opts);\n\n      let e = this.bwcProvider.getSJCL().encrypt(password, b, {\n        iter: 10000\n      });\n      return e;\n    } catch (err) {\n      this.logger.debug('Error exporting wallet: ', err);\n      return null;\n    }\n  }\n\n  private addMetadata(b, opts): string {\n    b = JSON.parse(b);\n    if (opts.addressBook) b.addressBook = opts.addressBook;\n    return JSON.stringify(b);\n  }\n\n  private _download(ew, fileName: string): Promise<any> {\n    return new Promise(resolve => {\n      let a = document.createElement('a');\n      let blob = this.NewBlob(ew, 'text/plain;charset=utf-8');\n      let url = window.URL.createObjectURL(blob);\n\n      document.body.appendChild(a);\n\n      a.href = url;\n      a.download = fileName;\n      a.click();\n      window.URL.revokeObjectURL(url);\n\n      return resolve();\n    });\n  }\n\n  private NewBlob(data, datatype: string) {\n    let out;\n    try {\n      out = new Blob([data], {\n        type: datatype\n      });\n      this.logger.debug('case 1');\n    } catch (e) {\n      if (e.name == 'InvalidStateError') {\n        // InvalidStateError (tested on FF13 WinXP)\n        out = new Blob([data], {\n          type: datatype\n        });\n        this.logger.debug('case 2');\n      } else {\n        // We're screwed, blob constructor unsupported entirely\n        this.logger.debug('Error');\n      }\n    }\n    return out;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/backup/backup.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// pages\nimport { SessionLogPage } from './session-log/session-log';\n\n// providers\nimport { AppProvider } from '../../../providers/app/app';\nimport { ExternalLinkProvider } from '../../../providers/external-link/external-link';\nimport { ReplaceParametersProvider } from '../../../providers/replace-parameters/replace-parameters';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n  public version: string;\n  public commitHash: string;\n  public title: string;\n\n  constructor(\n    private navCtrl: NavController,\n    private appProvider: AppProvider,\n    private logger: Logger,\n    private externalLinkProvider: ExternalLinkProvider,\n    private replaceParametersProvider: ReplaceParametersProvider,\n    private translate: TranslateService\n  ) {}\n\n  ionViewDidLoad() {\n    this.logger.debug('ionViewDidLoad AboutPage');\n    this.commitHash = this.appProvider.info.commitHash;\n    this.version = this.appProvider.info.version;\n    this.title = this.replaceParametersProvider.replace(\n      this.translate.instant('About {{appName}}'),\n      { appName: this.appProvider.info.nameCase }\n    );\n  }\n\n  public openExternalLink(): void {\n    let url =\n      'https://github.com/fair-exchange/' +\n      this.appProvider.info.gitHubRepoName +\n      '/tree/' +\n      this.appProvider.info.commitHash +\n      '';\n    let optIn = true;\n    let title = this.translate.instant('Open GitHub Project');\n    let message = this.translate.instant(\n      'You can see the latest developments and contribute to this open source app by visiting our project on GitHub.'\n    );\n    let okText = this.translate.instant('Open GitHub');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public openTermsOfUse() {\n    let url = 'https://safecoin.org/terms_copay';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('View Wallet Terms of Use');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public openPrivacyPolicy() {\n    let url = 'https://safecoin.org/privacy_copay';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('View Privacy Policy');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public openSessionLog(): void {\n    this.navCtrl.push(SessionLogPage);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/about/about.ts","import { Component, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActionSheetController } from 'ionic-angular';\n\n// native\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// providers\nimport { ActionSheetProvider } from '../../../../providers/action-sheet/action-sheet';\nimport { ConfigProvider } from '../../../../providers/config/config';\nimport { Logger } from '../../../../providers/logger/logger';\nimport { PlatformProvider } from '../../../../providers/platform/platform';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-session-log',\n  templateUrl: 'session-log.html'\n})\nexport class SessionLogPage {\n  private config;\n  private dom: Document;\n\n  public logOptions;\n  public filteredLogs;\n  public filterValue: number;\n  public isCordova: boolean;\n\n  constructor(\n    @Inject(DOCUMENT) dom: Document,\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private socialSharing: SocialSharing,\n    private actionSheetCtrl: ActionSheetController,\n    private platformProvider: PlatformProvider,\n    private translate: TranslateService,\n    private actionSheetProvider: ActionSheetProvider\n  ) {\n    this.dom = dom;\n    this.config = this.configProvider.get();\n    this.isCordova = this.platformProvider.isCordova;\n    let logLevels = this.logger.getLevels();\n    this.logOptions = _.keyBy(logLevels, 'weight');\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad SessionLogPage');\n  }\n\n  ionViewWillEnter() {\n    let selectedLevel = _.has(this.config, 'log.weight')\n      ? this.logger.getWeight(this.config.log.weight)\n      : this.logger.getDefaultWeight();\n    this.filterValue = selectedLevel.weight;\n    this.setOptionSelected(selectedLevel.weight);\n    this.filterLogs(selectedLevel.weight);\n  }\n\n  private filterLogs(weight: number): void {\n    this.filteredLogs = this.logger.get(weight);\n  }\n\n  public setOptionSelected(weight: number): void {\n    this.filterLogs(weight);\n    let opts = {\n      log: {\n        weight\n      }\n    };\n    this.configProvider.set(opts);\n  }\n\n  public prepareLogs() {\n    let log =\n      'Copay Session Logs\\n Be careful, this could contain sensitive private data\\n\\n';\n    log += '\\n\\n';\n    log += this.logger\n      .get()\n      .map(v => {\n        return '[' + v.timestamp + '][' + v.level + ']' + v.msg;\n      })\n      .join('\\n');\n\n    return log;\n  }\n\n  private copyToClipboard() {\n    let textarea = this.dom.createElement('textarea');\n    this.dom.body.appendChild(textarea);\n    textarea.value = this.prepareLogs();\n    textarea.select();\n    this.dom.execCommand('copy');\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'copy-to-clipboard',\n      { msg: this.translate.instant('Session Log') }\n    );\n    infoSheet.present();\n  }\n\n  private sendLogs(): void {\n    let body = this.prepareLogs();\n\n    this.socialSharing.shareViaEmail(\n      body,\n      'Copay Logs',\n      null, // TO: must be null or an array\n      null, // CC: must be null or an array\n      null, // BCC: must be null or an array\n      null // FILES: can be null, a string, or an array\n    );\n  }\n\n  public showOptionsMenu(): void {\n    let copyText = this.translate.instant('Copy to clipboard');\n    let emailText = this.translate.instant('Send by email');\n    let button = [];\n\n    if (this.isCordova) {\n      button = [\n        {\n          text: emailText,\n          handler: () => {\n            this.showWarningModal();\n          }\n        }\n      ];\n    } else {\n      button = [\n        {\n          text: copyText,\n          handler: () => {\n            this.showWarningModal();\n          }\n        }\n      ];\n    }\n\n    let actionSheet = this.actionSheetCtrl.create({\n      title: '',\n      buttons: button\n    });\n    actionSheet.present();\n  }\n\n  private showWarningModal() {\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'sensitive-info'\n    );\n    infoSheet.present();\n    infoSheet.onDidDismiss(option => {\n      if (option) this.isCordova ? this.sendLogs() : this.copyToClipboard();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/about/session-log/session-log.ts","import { Component } from '@angular/core';\nimport { AlertController, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { AddressBookProvider } from '../../../providers/address-book/address-book';\nimport { Logger } from '../../../providers/logger/logger';\nimport { AddressbookAddPage } from './add/add';\nimport { AddressbookViewPage } from './view/view';\n\n@Component({\n  selector: 'page-addressbook',\n  templateUrl: 'addressbook.html'\n})\nexport class AddressbookPage {\n  private cache: boolean = false;\n  public addressbook: object[] = [];\n  public filteredAddressbook: object[] = [];\n\n  public isEmptyList: boolean;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public alertCtrl: AlertController,\n    private logger: Logger,\n    private addressbookProvider: AddressBookProvider\n  ) {\n    this.initAddressbook();\n  }\n\n  ionViewDidEnter() {\n    if (this.cache) this.initAddressbook();\n    this.cache = true;\n  }\n\n  private initAddressbook(): void {\n    this.addressbookProvider\n      .list()\n      .then(addressBook => {\n        this.isEmptyList = _.isEmpty(addressBook);\n\n        let contacts: object[] = [];\n        _.each(addressBook, (contact, k: string) => {\n          contacts.push({\n            name: _.isObject(contact) ? contact.name : contact,\n            address: k,\n            coin: _.isObject(contact) ? contact.coin : '???',\n            email: _.isObject(contact) ? contact.email : null,\n            note: _.isObject(contact) ? contact.note : null,\n            network: _.isObject(contact) ? contact.network : null\n          });\n        });\n        this.addressbook = _.clone(contacts);\n        this.filteredAddressbook = _.clone(this.addressbook);\n      })\n      .catch(err => {\n        this.logger.error(err);\n        let alertError = this.alertCtrl.create({\n          title: err,\n          buttons: [\n            {\n              text: 'Go back',\n              handler: () => {\n                this.navCtrl.pop();\n              }\n            }\n          ]\n        });\n        alertError.present();\n      });\n  }\n\n  public addEntry(): void {\n    this.navCtrl.push(AddressbookAddPage);\n  }\n\n  public viewEntry(contact): void {\n    this.navCtrl.push(AddressbookViewPage, { contact });\n  }\n\n  public getItems(event): void {\n    // set val to the value of the searchbar\n    let val = event.target.value;\n\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      let result = _.filter(this.addressbook, item => {\n        let name = item['name'];\n        return _.includes(name.toLowerCase(), val.toLowerCase());\n      });\n      this.filteredAddressbook = result;\n    } else {\n      // Reset items back to all of the items\n      this.initAddressbook();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/addressbook/addressbook.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n// Pages\nimport { AmountPage } from '../../../../pages/send/amount/amount';\n\n// Providers\nimport { AddressBookProvider } from '../../../../providers/address-book/address-book';\n// import { AddressProvider } from '../../../../providers/address/address';\nimport { BwcProvider } from '../../../../providers/bwc/bwc';\nimport { PopupProvider } from '../../../../providers/popup/popup';\n\n@Component({\n  selector: 'page-addressbook-view',\n  templateUrl: 'view.html'\n})\nexport class AddressbookViewPage {\n  public contact;\n  public address: string;\n  public name: string;\n  public note: string;\n  public email: string;\n  public coinname: string;\n  public coin: string;\n  public network: string;\n\n  private bitcore;\n  private bitcoreCash;\n  private bitcoreSafe;\n  private bitcoreBtcz;\n  private bitcoreZcl;\n  private bitcoreAnon;\n  private bitcoreZel;\n  private bitcoreRvn;\n  private bitcoreLtc;\n//  private coin: string;\n\n  constructor(\n    private addressBookProvider: AddressBookProvider,\n//    private addressProvider: AddressProvider,\n    private bwcProvider: BwcProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private popupProvider: PopupProvider,\n    private translate: TranslateService\n  ) {\n    this.bitcore = this.bwcProvider.getBitcore();\n    this.bitcoreCash = this.bwcProvider.getBitcoreCash();\n    this.bitcoreSafe = this.bwcProvider.getBitcoreSafe();\n    this.bitcoreBtcz = this.bwcProvider.getBitcoreBtcz();\n    this.bitcoreZcl = this.bwcProvider.getBitcoreZcl();\n    this.bitcoreAnon = this.bwcProvider.getBitcoreAnon();\n    this.bitcoreZel = this.bwcProvider.getBitcoreZel();\n    this.bitcoreRvn = this.bwcProvider.getBitcoreRvn();\n    this.bitcoreLtc = this.bwcProvider.getBitcoreLtc();\n    this.address = this.navParams.data.contact.address;\n    this.name = this.navParams.data.contact.name;\n    this.email = this.navParams.data.contact.email;\n    this.coinname = this.navParams.data.contact.coin;\n    this.note = this.navParams.data.contact.note;\n    this.network = this.navParams.data.contact.network || 'livenet';\n\n    const btcAddress = this.bitcore.Address.isValid(\n      this.address, this.network);\n    const cashAddress = this.bitcoreCash.Address.isValid(\n      this.address, this.network);\n    const safeAddress = this.bitcoreSafe.Address.isValid(\n      this.address, this.network);\n    const btczAddress = this.bitcoreBtcz.Address.isValid(\n      this.address, this.network);\n    const zclAddress = this.bitcoreZcl.Address.isValid(\n      this.address, this.network);\n    const anonAddress = this.bitcoreAnon.Address.isValid(\n      this.address, this.network);\n    const zelAddress = this.bitcoreZel.Address.isValid(\n      this.address, this.network);\n    const rvnAddress = this.bitcoreRvn.Address.isValid(\n      this.address, this.network);\n    const ltcAddress = this.bitcoreLtc.Address.isValid(\n      this.address, this.network);\n    if (this.coinname == 'Bitcoin Cash (BCH)' && cashAddress){\n      this.coin = 'bch';\n    } else  if (this.coinname == 'Safecoin (SAFE)' && safeAddress ){\n      this.coin = 'safe';\n    } else  if (this.coinname == 'BitcoinZ (BTCZ)' && btczAddress){\n      this.coin = 'btcz';\n    } else  if (this.coinname == 'Zelcash (ZEL)' &&  zelAddress){\n      this.coin = 'zel';\n    } else  if (this.coinname == 'Zclassic (ZCL)' && zclAddress){\n      this.coin = 'zcl';\n    } else  if (this.coinname == 'Anonymous (ANON)' && anonAddress){\n      this.coin = 'anon';\n    } else  if (this.coinname == 'Ravencoin (RVN)' && rvnAddress){\n      this.coin = 'rvn';\n    } else  if (this.coinname == 'Litecoin (LTC)' && ltcAddress){\n      this.coin = 'ltc';\n    } else  if (this.coinname == 'Bitcoin (BTC)' && btcAddress){\n      this.coin = 'btc';\n    }\n  }\n\n\n  ionViewDidLoad() {}\n\n  public sendTo(): void {\n    this.navCtrl.push(AmountPage, {\n      toAddress: this.address,\n      name: this.name,\n      email: this.email,\n      coin: this.coin,\n      recipientType: 'contact',\n      network: this.network\n    });\n  }\n\n  public remove(addr: string, network: string): void {\n    var title = this.translate.instant('Warning!');\n    var message = this.translate.instant(\n      'Are you sure you want to delete this contact?'\n    );\n    this.popupProvider.ionicConfirm(title, message, null, null).then(res => {\n      if (!res) return;\n      this.addressBookProvider\n        .remove(addr, network)\n        .then(() => {\n          this.navCtrl.pop();\n        })\n        .catch(err => {\n          this.popupProvider.ionicAlert(this.translate.instant('Error'), err);\n          return;\n        });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/addressbook/view/view.ts","import { Component } from '@angular/core';\nimport { Logger } from '../../../providers/logger/logger';\n\n// providers\nimport { ConfigProvider } from '../../../providers/config/config';\n\n@Component({\n  selector: 'page-advanced',\n  templateUrl: 'advanced.html'\n})\nexport class AdvancedPage {\n  public spendUnconfirmed: boolean;\n  public recentTransactionsEnabled: boolean;\n  public homepageSimpleViewEnabled: boolean;\n  public useLegacyAddress: boolean;\n\n  constructor(private configProvider: ConfigProvider, private logger: Logger) {}\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad AdvancedPage');\n  }\n\n  ionViewWillEnter() {\n    let config = this.configProvider.get();\n\n    this.spendUnconfirmed = config.wallet.spendUnconfirmed;\n    this.recentTransactionsEnabled = config.recentTransactions.enabled;\n    this.homepageSimpleViewEnabled = config.homepageSimpleView.enabled;\n    this.useLegacyAddress = config.wallet.useLegacyAddress;\n  }\n\n  public spendUnconfirmedChange(): void {\n    let opts = {\n      wallet: {\n        spendUnconfirmed: this.spendUnconfirmed\n      }\n    };\n    this.configProvider.set(opts);\n  }\n\n  public recentTransactionsChange(): void {\n    let opts = {\n      recentTransactions: {\n        enabled: this.recentTransactionsEnabled\n      }\n    };\n    this.configProvider.set(opts);\n  }\n\n  public homepageSimpleViewChange(): void {\n    let opts = {\n      homepageSimpleView: {\n        enabled: this.homepageSimpleViewEnabled\n      }\n    };\n    this.configProvider.set(opts);\n  }\n\n  public useLegacyAddressChange(): void {\n    let opts = {\n      wallet: {\n        useLegacyAddress: this.useLegacyAddress\n      }\n    };\n    this.configProvider.set(opts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/advanced/advanced.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Providers\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { PersistenceProvider } from '../../../providers/persistence/persistence';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { RateProvider } from '../../../providers/rate/rate';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-alt-currency',\n  templateUrl: 'alt-currency.html'\n})\nexport class AltCurrencyPage {\n  public completeAlternativeList;\n  public searchedAltCurrency: string;\n  public altCurrencyList;\n  public loading;\n  public currentCurrency;\n  public lastUsedAltCurrencyList;\n\n  private PAGE_COUNTER: number = 3;\n  private SHOW_LIMIT: number = 10;\n  private unusedCurrencyList;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private navCtrl: NavController,\n    private rate: RateProvider,\n    private profileProvider: ProfileProvider,\n    private persistenceProvider: PersistenceProvider,\n    private walletProvider: WalletProvider\n  ) {\n    this.completeAlternativeList = [];\n    this.altCurrencyList = [];\n    this.unusedCurrencyList = [\n      {\n        isoCode: 'LTL'\n      },\n      {\n        isoCode: 'BTC'\n      }\n    ];\n  }\n\n  ionViewWillEnter() {\n    this.rate\n      .whenRatesAvailable('btc')\n      .then(() => {\n        this.completeAlternativeList = this.rate.listAlternatives(true);\n        let idx = _.keyBy(this.unusedCurrencyList, 'isoCode');\n        let idx2 = _.keyBy(this.lastUsedAltCurrencyList, 'isoCode');\n\n        this.completeAlternativeList = _.reject(\n          this.completeAlternativeList,\n          c => {\n            return idx[c.isoCode] || idx2[c.isoCode];\n          }\n        );\n        this.altCurrencyList = this.completeAlternativeList.slice(0, 20);\n      })\n      .catch(err => {\n        this.logger.error(err);\n      });\n\n    let config = this.configProvider.get();\n    this.currentCurrency = config.wallet.settings.alternativeIsoCode;\n\n    this.persistenceProvider\n      .getLastCurrencyUsed()\n      .then(lastUsedAltCurrency => {\n        this.lastUsedAltCurrencyList = lastUsedAltCurrency\n          ? lastUsedAltCurrency\n          : [];\n      })\n      .catch(err => {\n        this.logger.error(err);\n      });\n  }\n\n  public loadAltCurrencies(loading): void {\n    if (this.altCurrencyList.length === this.completeAlternativeList.length) {\n      loading.complete();\n      return;\n    }\n    setTimeout(() => {\n      this.altCurrencyList = this.completeAlternativeList.slice(\n        0,\n        this.PAGE_COUNTER * this.SHOW_LIMIT\n      );\n      this.PAGE_COUNTER++;\n      loading.complete();\n    }, 300);\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad AltCurrencyPage');\n  }\n\n  public save(newAltCurrency): void {\n    var opts = {\n      wallet: {\n        settings: {\n          alternativeName: newAltCurrency.name,\n          alternativeIsoCode: newAltCurrency.isoCode\n        }\n      }\n    };\n\n    this.configProvider.set(opts);\n    this.saveLastUsed(newAltCurrency);\n    this.walletProvider.updateRemotePreferences(\n      this.profileProvider.getWallets()\n    );\n    this.navCtrl.pop();\n  }\n\n  private saveLastUsed(newAltCurrency): void {\n    this.lastUsedAltCurrencyList.unshift(newAltCurrency);\n    this.lastUsedAltCurrencyList = _.uniqBy(\n      this.lastUsedAltCurrencyList,\n      'isoCode'\n    );\n    this.lastUsedAltCurrencyList = this.lastUsedAltCurrencyList.slice(0, 3);\n    this.persistenceProvider\n      .setLastCurrencyUsed(JSON.stringify(this.lastUsedAltCurrencyList))\n      .then(() => {});\n  }\n\n  public findCurrency(searchedAltCurrency: string): void {\n    this.altCurrencyList = _.filter(this.completeAlternativeList, item => {\n      var val = item.name;\n      var val2 = item.isoCode;\n      return (\n        _.includes(val.toLowerCase(), searchedAltCurrency.toLowerCase()) ||\n        _.includes(val2.toLowerCase(), searchedAltCurrency.toLowerCase())\n      );\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/alt-currency/alt-currency.ts","import { Component } from '@angular/core';\nimport * as _ from 'lodash';\nimport { Logger } from '../../../providers/logger/logger';\n\n// Providers\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { FeeProvider } from '../../../providers/fee/fee';\n\nconst COIN = 'btc';\nconst NETWORK = 'livenet';\n\n@Component({\n  selector: 'page-fee-policy',\n  templateUrl: 'fee-policy.html'\n})\nexport class FeePolicyPage {\n  public feeLevels: object;\n  public feeOpts: object;\n  public currentFeeLevel: string;\n\n  public error;\n\n  public feePerSatByte;\n  public avgConfirmationTime;\n\n  constructor(\n    private logger: Logger,\n    private feeProvider: FeeProvider,\n    private configProvider: ConfigProvider\n  ) {\n    this.feeOpts = this.feeProvider.getFeeOpts();\n    delete this.feeOpts['custom']; // Remove custom level\n    this.currentFeeLevel = this.feeProvider.getCurrentFeeLevel();\n  }\n\n  ionViewDidEnter() {\n    this.error = null;\n    return this.feeProvider\n      .getFeeLevels(COIN)\n      .then(data => {\n        this.feeLevels = data['levels'];\n        this.updateCurrentValues();\n      })\n      .catch(err => {\n        this.logger.error(err);\n        this.error = err;\n      });\n  }\n\n  public save() {\n    if (\n      _.isEmpty(this.currentFeeLevel) ||\n      this.currentFeeLevel == this.feeProvider.getCurrentFeeLevel()\n    )\n      return;\n    this.logger.debug('New fee level: ' + this.currentFeeLevel);\n    this.updateCurrentValues();\n    this.setFee();\n  }\n\n  private updateCurrentValues() {\n    if (_.isEmpty(this.feeLevels) || _.isEmpty(this.currentFeeLevel)) return;\n\n    let value = _.find(this.feeLevels[NETWORK], {\n      level: this.currentFeeLevel\n    });\n\n    if (_.isEmpty(value)) return;\n\n    this.feePerSatByte = (value['feePerKb'] / 1000).toFixed();\n    this.avgConfirmationTime = value['nbBlocks'] * 10;\n  }\n\n  private setFee() {\n    let opts = {\n      wallet: {\n        settings: {\n          feeLevel: this.currentFeeLevel\n        }\n      }\n    };\n\n    this.configProvider.set(opts);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/fee-policy/fee-policy.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController } from 'ionic-angular';\n\n// providers\nimport { ExternalLinkProvider } from '../../../providers/external-link/external-link';\nimport { LanguageProvider } from '../../../providers/language/language';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-language',\n  templateUrl: 'language.html'\n})\nexport class LanguagePage {\n  public currentLanguage;\n  public languages;\n\n  constructor(\n    private navCtrl: NavController,\n    private languageProvider: LanguageProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private translate: TranslateService\n  ) {\n    this.currentLanguage = this.languageProvider.getCurrent();\n    this.languages = this.languageProvider.getAvailables();\n  }\n\n  public openExternalLink(): void {\n    let url = 'https://crowdin.com/project/copay';\n    let optIn = true;\n    let title = this.translate.instant('Open Translation Community');\n    let message = this.translate.instant(\n      'You can make contributions by signing up on our Crowdin community translation website. We’re looking forward to hearing from you!'\n    );\n    let okText = this.translate.instant('Open Crowdin');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public save(newLang: string): void {\n    this.languageProvider.set(newLang);\n    this.navCtrl.pop();\n    setTimeout(() => {\n      let wallets = this.profileProvider.getWallets();\n      this.walletProvider.updateRemotePreferences(wallets);\n    }, 1000);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/language/language.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalController } from 'ionic-angular';\n\n// pages\nimport { PinModalPage } from '../../pin/pin-modal/pin-modal';\n\n// providers\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { TouchIdProvider } from '../../../providers/touchid/touchid';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-lock',\n  templateUrl: 'lock.html'\n})\nexport class LockPage {\n  public options: Array<{\n    label: string;\n    method: string;\n    enabled: boolean;\n    disabled: boolean;\n  }> = [];\n  public lockOptions;\n  public needsBackupMsg: string;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private modalCtrl: ModalController,\n    private touchIdProvider: TouchIdProvider,\n    private profileProvider: ProfileProvider,\n    private translate: TranslateService\n  ) {\n    this.checkLockOptions();\n  }\n\n  private checkLockOptions() {\n    this.lockOptions = this.configProvider.get().lock;\n    this.touchIdProvider.isAvailable().then((isAvailable: boolean) => {\n      let needsBackup = this.needsBackup();\n      this.options = [\n        {\n          label: this.translate.instant('Disabled'),\n          method: 'disabled',\n          enabled:\n            !this.lockOptions.method ||\n            (this.lockOptions.method &&\n            this.lockOptions.method.toLowerCase() == 'disabled'\n              ? true\n              : false),\n          disabled: false\n        },\n        {\n          label: this.translate.instant('PIN'),\n          method: 'pin',\n          enabled:\n            this.lockOptions.method &&\n            this.lockOptions.method.toLowerCase() == 'pin'\n              ? true\n              : false,\n          disabled: needsBackup\n        },\n        {\n          label: this.translate.instant('Fingerprint'),\n          method: 'fingerprint',\n          enabled:\n            this.lockOptions.method &&\n            this.lockOptions.method.toLowerCase() == 'fingerprint'\n              ? true\n              : false,\n          disabled: !isAvailable || needsBackup\n        }\n      ];\n    });\n  }\n\n  public select(method): void {\n    switch (method) {\n      case 'disabled':\n        this.removeLockMethod();\n        break;\n      case 'pin':\n        this.openPinModal('pinSetUp');\n        break;\n      case 'fingerprint':\n        this.lockByFingerprint();\n        break;\n    }\n  }\n\n  private removeLockMethod(): void {\n    let lock = { method: 'disabled', value: null, bannedUntil: null };\n    this.configProvider.set({ lock });\n    this.checkLockOptions();\n  }\n\n  private openPinModal(action): void {\n    const modal = this.modalCtrl.create(\n      PinModalPage,\n      { action },\n      { cssClass: 'fullscreen-modal' }\n    );\n    modal.present();\n    modal.onDidDismiss(() => {\n      this.checkLockOptions();\n    });\n  }\n\n  public lockByFingerprint(): void {\n    let lock = { method: 'fingerprint', value: null, bannedUntil: null };\n    this.configProvider.set({ lock });\n    this.checkLockOptions();\n  }\n\n  private needsBackup() {\n    let wallets = this.profileProvider.getWallets();\n    let singleLivenetWallet =\n      wallets.length == 1 &&\n      wallets[0].network == 'livenet' &&\n      wallets[0].needsBackup;\n    let atLeastOneLivenetWallet = _.find(wallets, w => {\n      return w.network == 'livenet' && w.needsBackup;\n    });\n\n    if (singleLivenetWallet) {\n      this.needsBackupMsg = this.translate.instant(\n        'Backup your wallet before using this function'\n      );\n      return true;\n    } else if (atLeastOneLivenetWallet) {\n      this.needsBackupMsg = this.translate.instant(\n        'Backup all your wallets before using this function'\n      );\n      return true;\n    } else {\n      this.needsBackupMsg = null;\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/lock/lock.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// providers\nimport { AppProvider } from '../../../providers/app/app';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { EmailNotificationsProvider } from '../../../providers/email-notifications/email-notifications';\nimport { ExternalLinkProvider } from '../../../providers/external-link/external-link';\nimport { PersistenceProvider } from '../../../providers/persistence/persistence';\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { PushNotificationsProvider } from '../../../providers/push-notifications/push-notifications';\n\n// validators\nimport { EmailValidator } from '../../../validators/email';\n\n@Component({\n  selector: 'page-notifications',\n  templateUrl: 'notifications.html'\n})\nexport class NotificationsPage {\n  public emailForm: FormGroup;\n\n  public appName: string;\n  public usePushNotifications: boolean;\n  public isIOSApp: boolean;\n\n  public pushNotifications: boolean;\n  public confirmedTxsNotifications: boolean;\n\n  public emailNotifications: boolean;\n\n  constructor(\n    private navCtrl: NavController,\n    private formBuilder: FormBuilder,\n    private configProvider: ConfigProvider,\n    private appProvider: AppProvider,\n    private platformProvider: PlatformProvider,\n    private pushProvider: PushNotificationsProvider,\n    private emailProvider: EmailNotificationsProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider,\n    private translate: TranslateService\n  ) {\n    this.emailForm = this.formBuilder.group({\n      email: [\n        '',\n        Validators.compose([\n          Validators.required,\n          new EmailValidator(configProvider, emailProvider).isValid\n        ])\n      ]\n    });\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad NotificationsPage');\n    this.updateConfig();\n  }\n\n  private updateConfig() {\n    let config = this.configProvider.get();\n    this.appName = this.appProvider.info.nameCase;\n    this.usePushNotifications = this.platformProvider.isCordova;\n    this.isIOSApp =\n      this.platformProvider.isIOS && this.platformProvider.isCordova;\n\n    this.pushNotifications = config.pushNotificationsEnabled;\n    this.confirmedTxsNotifications = config.confirmedTxsNotifications\n      ? config.confirmedTxsNotifications.enabled\n      : false;\n\n    this.emailForm.setValue({\n      email: this.emailProvider.getEmailIfEnabled(config) || ''\n    });\n\n    this.emailNotifications = config.emailNotifications\n      ? config.emailNotifications.enabled\n      : false;\n  }\n\n  public pushNotificationsChange() {\n    let opts = {\n      pushNotificationsEnabled: this.pushNotifications\n    };\n\n    this.configProvider.set(opts);\n\n    if (opts.pushNotificationsEnabled) this.pushProvider.init();\n    else this.pushProvider.disable();\n  }\n\n  public confirmedTxsNotificationsChange() {\n    let opts = {\n      confirmedTxsNotifications: {\n        enabled: this.confirmedTxsNotifications\n      }\n    };\n    this.configProvider.set(opts);\n  }\n\n  public emailNotificationsChange() {\n    let opts = {\n      enabled: this.emailNotifications,\n      email: this.emailForm.value.email\n    };\n    this.emailProvider.updateEmail(opts);\n  }\n\n  public saveEmail() {\n    this.persistenceProvider.setEmailLawCompliance('accepted');\n    this.emailProvider.updateEmail({\n      enabled: this.emailNotifications,\n      email: this.emailForm.value.email\n    });\n    this.navCtrl.pop();\n  }\n\n  public openPrivacyPolicy() {\n    let url = 'https://bitpay.com/about/privacy';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('View Privacy Policy');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/notifications/notifications.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Logger } from '../../../providers/logger/logger';\n\n// native\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// providers\nimport { AppProvider } from '../../../providers/app/app';\nimport { ConfigProvider } from '../../../providers/config/config';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ReplaceParametersProvider } from '../../../providers/replace-parameters/replace-parameters';\n\n@Component({\n  selector: 'page-share',\n  templateUrl: 'share.html'\n})\nexport class SharePage {\n  public facebook: boolean;\n  public twitter: boolean;\n  public googleplus: boolean;\n  public email: boolean;\n  public whatsapp: boolean;\n  public title: string;\n\n  private downloadUrl: string;\n  private shareFacebookVia: string;\n  private shareTwitterVia: string;\n\n  constructor(\n    private logger: Logger,\n    private socialSharing: SocialSharing,\n    private appProvider: AppProvider,\n    private configProvider: ConfigProvider,\n    private replaceParametersProvider: ReplaceParametersProvider,\n    private translate: TranslateService,\n    private popupProvider: PopupProvider\n  ) {\n    this.title = this.replaceParametersProvider.replace(\n      this.translate.instant('Share {{appName}}'),\n      { appName: this.appProvider.info.nameCase }\n    );\n    let defaults = this.configProvider.getDefaults();\n    this.downloadUrl =\n      this.appProvider.info.name == 'copay'\n        ? defaults.download.copay.url\n        : defaults.download.bitpay.url;\n  }\n\n  ionViewWillEnter() {\n    this.socialSharing\n      .canShareVia('com.apple.social.facebook', 'msg', null, null, null)\n      .then(() => {\n        this.shareFacebookVia = 'com.apple.social.facebook';\n        this.facebook = true;\n      })\n      .catch(() => {\n        this.socialSharing\n          .canShareVia('com.facebook.katana', 'msg', null, null, null)\n          .then(() => {\n            this.shareFacebookVia = 'com.facebook.katana';\n            this.facebook = true;\n          })\n          .catch(e => {\n            this.logger.debug('facebook error: ' + e);\n            this.facebook = false;\n          });\n      });\n    this.socialSharing\n      .canShareVia('com.apple.social.twitter', 'msg', null, null, null)\n      .then(() => {\n        this.shareTwitterVia = 'com.apple.social.twitter';\n        this.twitter = true;\n      })\n      .catch(() => {\n        this.socialSharing\n          .canShareVia('com.twitter.android', 'msg', null, null, null)\n          .then(() => {\n            this.shareTwitterVia = 'com.twitter.android';\n            this.twitter = true;\n          })\n          .catch(e => {\n            this.logger.debug('twitter error: ' + e);\n            this.twitter = false;\n          });\n      });\n    this.socialSharing\n      .canShareVia('whatsapp', 'msg', null, null, null)\n      .then(() => {\n        this.whatsapp = true;\n      })\n      .catch(e => {\n        this.logger.debug('whatsapp error: ' + e);\n        this.whatsapp = false;\n      });\n  }\n\n  public shareFacebook() {\n    if (!this.facebook) {\n      this.showError();\n      return;\n    }\n    this.socialSharing.shareVia(\n      this.shareFacebookVia,\n      null,\n      null,\n      null,\n      this.downloadUrl\n    );\n  }\n\n  public shareTwitter() {\n    if (!this.twitter) {\n      this.showError();\n      return;\n    }\n    this.socialSharing.shareVia(\n      this.shareTwitterVia,\n      null,\n      null,\n      null,\n      this.downloadUrl\n    );\n  }\n\n  public shareWhatsapp() {\n    if (!this.whatsapp) {\n      this.showError();\n      return;\n    }\n    this.socialSharing.shareViaWhatsApp(this.downloadUrl);\n  }\n\n  private showError() {\n    let msg = this.translate.instant(\n      'This app is not available for your device.'\n    );\n    this.popupProvider.ionicAlert(this.translate.instant('Error'), msg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/share/share.ts","import { Component, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  Events,\n  Navbar,\n  NavController,\n  NavParams,\n  Slides\n} from 'ionic-angular';\nimport * as _ from 'lodash';\nimport { Logger } from '../../../providers/logger/logger';\n\n// pages\nimport { DisclaimerPage } from '../../onboarding/disclaimer/disclaimer';\n\n// providers\nimport { ActionSheetProvider } from '../../../providers/action-sheet/action-sheet';\nimport { BwcProvider } from '../../../providers/bwc/bwc';\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { WalletProvider } from '../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-backup-game',\n  templateUrl: 'backup-game.html'\n})\nexport class BackupGamePage {\n  @ViewChild(Slides)\n  slides: Slides;\n  @ViewChild(Navbar)\n  navBar: Navbar;\n\n  private fromOnboarding: boolean;\n\n  public currentIndex: number;\n  public deleted: boolean;\n  public mnemonicWords: string[];\n  public shuffledMnemonicWords;\n  public password: string;\n  public customWords;\n  public selectComplete: boolean;\n  public error: boolean;\n  public credentialsEncrypted: boolean;\n\n  private mnemonicHasPassphrase;\n  private walletId: string;\n  private wallet;\n  private keys;\n  private useIdeograms;\n\n  constructor(\n    private events: Events,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private logger: Logger,\n    private profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private bwcProvider: BwcProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private translate: TranslateService,\n    public actionSheetProvider: ActionSheetProvider\n  ) {\n    this.walletId = this.navParams.get('walletId');\n    this.fromOnboarding = this.navParams.get('fromOnboarding');\n    this.wallet = this.profileProvider.getWallet(this.walletId);\n    this.credentialsEncrypted = this.wallet.isPrivKeyEncrypted();\n  }\n\n  ionViewDidEnter() {\n    this.deleted = this.isDeletedSeed();\n    if (this.deleted) {\n      this.logger.debug('no mnemonics');\n      return;\n    }\n\n    this.walletProvider\n      .getKeys(this.wallet)\n      .then(keys => {\n        if (_.isEmpty(keys)) {\n          this.logger.warn('Empty keys');\n        }\n        this.credentialsEncrypted = false;\n        this.keys = keys;\n        this.setFlow();\n      })\n      .catch(err => {\n        if (err && err.message != 'FINGERPRINT_CANCELLED') {\n          let title = this.translate.instant('Could not decrypt wallet');\n          this.showErrorInfoSheet(err, title);\n        }\n        this.navCtrl.pop();\n      });\n  }\n\n  ngOnInit() {\n    this.currentIndex = 0;\n    this.navBar.backButtonClick = () => {\n      if (this.slides) this.slidePrev();\n      else this.navCtrl.pop();\n    };\n  }\n\n  ionViewDidLoad() {\n    if (this.slides) this.slides.lockSwipes(true);\n  }\n\n  private showErrorInfoSheet(\n    err: Error | string,\n    infoSheetTitle: string\n  ): void {\n    if (!err) return;\n    this.logger.warn('Could not get keys:', err);\n    const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'default-error',\n      { msg: err, title: infoSheetTitle }\n    );\n    errorInfoSheet.present();\n  }\n\n  private shuffledWords(words: string[]) {\n    var sort = _.sortBy(words);\n\n    return _.map(sort, w => {\n      return {\n        word: w,\n        selected: false\n      };\n    });\n  }\n\n  public addButton(index: number, item): void {\n    var newWord = {\n      word: item.word,\n      prevIndex: index\n    };\n    this.customWords.push(newWord);\n    this.shuffledMnemonicWords[index].selected = true;\n    this.shouldContinue();\n  }\n\n  public removeButton(index: number, item): void {\n    // if ($scope.loading) return;\n    this.customWords.splice(index, 1);\n    this.shuffledMnemonicWords[item.prevIndex].selected = false;\n    this.shouldContinue();\n  }\n\n  private shouldContinue(): void {\n    this.selectComplete =\n      this.customWords.length === this.shuffledMnemonicWords.length\n        ? true\n        : false;\n  }\n\n  private isDeletedSeed(): boolean {\n    if (\n      !this.wallet.credentials.mnemonic &&\n      !this.wallet.credentials.mnemonicEncrypted\n    )\n      return true;\n\n    return false;\n  }\n\n  private slidePrev(): void {\n    this.slides.lockSwipes(false);\n    if (this.currentIndex == 0) this.navCtrl.pop();\n    else {\n      this.slides.slidePrev();\n      this.currentIndex = this.slides.getActiveIndex();\n    }\n    this.slides.lockSwipes(true);\n  }\n\n  public slideNext(reset: boolean): void {\n    if (reset) {\n      this.resetGame();\n    }\n\n    if (this.currentIndex == 1 && !this.mnemonicHasPassphrase) this.finalStep();\n    else {\n      this.slides.lockSwipes(false);\n      this.slides.slideNext();\n    }\n\n    this.currentIndex = this.slides.getActiveIndex();\n    this.slides.lockSwipes(true);\n  }\n\n  private resetGame() {\n    this.customWords = [];\n    this.shuffledMnemonicWords.forEach(word => {\n      word.selected = false;\n    });\n    this.selectComplete = false;\n  }\n\n  private setFlow(): void {\n    if (!this.keys) return;\n\n    let words = this.keys.mnemonic;\n\n    this.mnemonicWords = words.split(/[\\u3000\\s]+/);\n    this.shuffledMnemonicWords = this.shuffledWords(this.mnemonicWords);\n    this.mnemonicHasPassphrase = this.wallet.mnemonicHasPassphrase();\n    this.useIdeograms = words.indexOf('\\u3000') >= 0;\n    this.password = '';\n    this.customWords = [];\n    this.selectComplete = false;\n    this.error = false;\n\n    words = _.repeat('x', 300);\n\n    if (this.currentIndex == 2) this.slidePrev();\n  }\n\n  private confirm(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.error = false;\n\n      let customWordList = _.map(this.customWords, 'word');\n\n      if (!_.isEqual(this.mnemonicWords, customWordList)) {\n        return reject('Mnemonic string mismatch');\n      }\n\n      if (this.mnemonicHasPassphrase) {\n        let walletClient = this.bwcProvider.getClient();\n        let separator = this.useIdeograms ? '\\u3000' : ' ';\n        let customSentence = customWordList.join(separator);\n        let password = this.password || '';\n\n        try {\n          walletClient.seedFromMnemonic(customSentence, {\n            network: this.wallet.credentials.network,\n            password,\n            account: this.wallet.credentials.account\n          });\n        } catch (err) {\n          walletClient.credentials.xPrivKey = _.repeat('x', 64);\n          return reject(err);\n        }\n\n        if (\n          walletClient.credentials.xPrivKey.substr(\n            walletClient.credentials.xPrivKey\n          ) != this.keys.xPrivKey\n        ) {\n          delete walletClient.credentials;\n          return reject('Private key mismatch');\n        }\n      }\n\n      this.profileProvider.setBackupFlag(this.wallet.credentials.walletId);\n      return resolve();\n    });\n  }\n\n  private finalStep(): void {\n    this.onGoingProcessProvider.set('validatingWords');\n    this.confirm()\n      .then(() => {\n        this.onGoingProcessProvider.clear();\n        const walletType =\n          this.wallet.coin === 'btc' \n           ? 'bitcoin' \n            : this.wallet.coin === 'safe' \n              ? 'safecoin'\n               : this.wallet.coin === 'btcz' \n                 ? 'bitcoinz'\n                  : this.wallet.coin === 'zcl' \n                   ? 'zclassic'\n                  : this.wallet.coin === 'anon' \n                   ? 'anonymous'\n                  : this.wallet.coin === 'zel' \n                   ? 'zelcash'\n                    : this.wallet.coin === 'rvn' \n                     ? 'ravencoin'\n                      : this.wallet.coin === 'ltc' \n                       ? 'litecoin'\n                        : 'bitcoin cash';\n        const infoSheet = this.actionSheetProvider.createInfoSheet(\n          'backup-ready',\n          { walletType }\n        );\n        infoSheet.present();\n        infoSheet.onDidDismiss(() => {\n          if (this.fromOnboarding) {\n            this.navCtrl.push(DisclaimerPage);\n          } else {\n            this.navCtrl.popToRoot();\n            this.events.publish('Wallet/setAddress');\n          }\n        });\n      })\n      .catch(err => {\n        this.onGoingProcessProvider.clear();\n        this.logger.warn('Failed to verify backup: ', err);\n        this.error = true;\n        const infoSheet = this.actionSheetProvider.createInfoSheet(\n          'backup-failed'\n        );\n        infoSheet.present();\n        infoSheet.onDidDismiss(() => {\n          this.setFlow();\n        });\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/backup/backup-game/backup-game.ts","import { Component } from '@angular/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../providers/logger/logger';\n\n// providers\nimport { ConfigProvider } from '../../../../providers/config/config';\nimport { ProfileProvider } from '../../../../providers/profile/profile';\n\n@Component({\n  selector: 'page-wallet-color',\n  templateUrl: 'wallet-color.html'\n})\nexport class WalletColorPage {\n  public wallet;\n  public colorCount: number[];\n  public currentColorIndex: number;\n  private retries: number;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private events: Events\n  ) {\n    this.retries = 3;\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletColorPage');\n  }\n\n  ionViewWillEnter() {\n    const COLOR_COUNT = 14;\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.colorCount = Array(COLOR_COUNT)\n      .fill(0)\n      .map((_, i) => i);\n    this.setCurrentColorIndex();\n  }\n\n  public save(i): void {\n    let color = this.indexToColor(i);\n    if (!color) return;\n\n    let opts = {\n      colorFor: {}\n    };\n    opts.colorFor[this.wallet.credentials.walletId] = color;\n\n    this.configProvider.set(opts);\n    this.events.publish('wallet:updated', this.wallet.credentials.walletId);\n    this.navCtrl.pop();\n  }\n\n  private setCurrentColorIndex(): void {\n    try {\n      this.currentColorIndex = this.colorToIndex(this.wallet.color);\n    } catch (e) {\n      // Wait for DOM to render and try again.\n      setTimeout(() => {\n        if (this.retries > 0) {\n          this.retries -= 1;\n          this.setCurrentColorIndex();\n        }\n      }, 100);\n    }\n  }\n\n  private colorToIndex(color: string) {\n    for (let i = 0; i < this.colorCount.length; i++) {\n      if (this.indexToColor(i) == color.toLowerCase()) {\n        return i;\n      }\n    }\n    return undefined;\n  }\n\n  private indexToColor(i: number): string {\n    // Expect an exception to be thrown if can't getComputedStyle().\n    return this.rgb2hex(\n      (window as any).getComputedStyle(\n        document.getElementsByClassName('wallet-color-' + i)[0]\n      ).backgroundColor\n    );\n  }\n\n  private rgb2hex(rgb): string {\n    rgb = rgb.match(\n      /^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i\n    );\n    return rgb && rgb.length === 4\n      ? '#' +\n          ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) +\n          ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) +\n          ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2)\n      : '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-color/wallet-color.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../providers/logger/logger';\n\n// providers\nimport { ConfigProvider } from '../../../../providers/config/config';\nimport { ProfileProvider } from '../../../../providers/profile/profile';\nimport { ReplaceParametersProvider } from '../../../../providers/replace-parameters/replace-parameters';\n\n@Component({\n  selector: 'page-wallet-name',\n  templateUrl: 'wallet-name.html'\n})\nexport class WalletNamePage {\n  public wallet;\n  public walletName: string;\n  public walletNameForm: FormGroup;\n  public description: string;\n\n  private config;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private configProvider: ConfigProvider,\n    private formBuilder: FormBuilder,\n    private events: Events,\n    private logger: Logger,\n    private replaceParametersProvider: ReplaceParametersProvider,\n    private translate: TranslateService\n  ) {\n    this.walletNameForm = this.formBuilder.group({\n      walletName: [\n        '',\n        Validators.compose([Validators.minLength(1), Validators.required])\n      ]\n    });\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletNamePage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.config = this.configProvider.get();\n    let alias =\n      this.config.aliasFor &&\n      this.config.aliasFor[this.wallet.credentials.walletId];\n    this.walletNameForm.value.walletName = alias\n      ? alias\n      : this.wallet.credentials.walletName;\n    this.walletName = this.wallet.credentials.walletName;\n    this.description = this.replaceParametersProvider.replace(\n      this.translate.instant(\n        'When this wallet was created, it was called \"{{walletName}}\". You can change the name displayed on this device below.'\n      ),\n      { walletName: this.walletName }\n    );\n  }\n\n  public save(): void {\n    let opts = {\n      aliasFor: {}\n    };\n    opts.aliasFor[\n      this.wallet.credentials.walletId\n    ] = this.walletNameForm.value.walletName;\n    this.configProvider.set(opts);\n    this.events.publish('wallet:updated', this.wallet.credentials.walletId);\n    this.navCtrl.pop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-name/wallet-name.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport * as lodash from 'lodash';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// Providers\nimport { BwcErrorProvider } from '../../../../../providers/bwc-error/bwc-error';\nimport { BwcProvider } from '../../../../../providers/bwc/bwc';\nimport { ExternalLinkProvider } from '../../../../../providers/external-link/external-link';\nimport { OnGoingProcessProvider } from '../../../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\nimport { PushNotificationsProvider } from '../../../../../providers/push-notifications/push-notifications';\nimport { TxFormatProvider } from '../../../../../providers/tx-format/tx-format';\nimport {\n  Coin,\n  WalletOptions,\n  WalletProvider\n} from '../../../../../providers/wallet/wallet';\nimport { WalletTabsChild } from '../../../../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../../../../wallet-tabs/wallet-tabs.provider';\n\n@Component({\n  selector: 'page-bitcoin-cash',\n  templateUrl: 'bitcoin-cash.html'\n})\nexport class BitcoinCashPage extends WalletTabsChild {\n  private errors;\n\n  public availableWallet;\n  public nonEligibleWallet;\n  public error;\n  public wallet;\n\n  constructor(\n    private walletProvider: WalletProvider,\n    public profileProvider: ProfileProvider,\n    private txFormatProvider: TxFormatProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private popupProvider: PopupProvider,\n    private pushNotificationsProvider: PushNotificationsProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private bwcErrorProvider: BwcErrorProvider,\n    private bwcProvider: BwcProvider,\n    private logger: Logger,\n    private translate: TranslateService,\n    private events: Events,\n    private navParams: NavParams,\n    public navCtrl: NavController,\n    public walletTabsProvider: WalletTabsProvider\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n    this.errors = this.bwcProvider.getErrors();\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n\n    // Filter out already duplicated wallets\n    let walletsBCH = this.profileProvider.getWallets({\n      coin: 'bch',\n      network: 'livenet'\n    });\n\n    let xPubKeyIndex = lodash.keyBy(walletsBCH, 'credentials.xPubKey');\n\n    if (xPubKeyIndex[this.wallet.credentials.xPubKey]) {\n      this.wallet.excludeReason = this.translate.instant('Already duplicated');\n      this.nonEligibleWallet = this.wallet;\n    } else if (this.wallet.credentials.derivationStrategy != 'BIP44') {\n      this.wallet.excludeReason = this.translate.instant('Non BIP44 wallet');\n      this.nonEligibleWallet = this.wallet;\n    } else if (!this.wallet.canSign()) {\n      this.wallet.excludeReason = this.translate.instant('Read only wallet');\n      this.nonEligibleWallet = this.wallet;\n    } else if (this.wallet.needsBackup) {\n      this.wallet.excludeReason = this.translate.instant('Needs backup');\n      this.nonEligibleWallet = this.wallet;\n    } else {\n      this.availableWallet = this.wallet;\n    }\n\n    if (!this.availableWallet) return;\n\n    this.walletProvider\n      .getBalance(this.availableWallet, { coin: 'bch' })\n      .then(balance => {\n        this.availableWallet.bchBalance = this.txFormatProvider.formatAmountStr(\n          'bch',\n          balance.availableAmount\n        );\n        this.availableWallet.error = null;\n      })\n      .catch(err => {\n        this.availableWallet.error =\n          err === 'WALLET_NOT_REGISTERED'\n            ? this.translate.instant('Wallet not registered')\n            : this.bwcErrorProvider.msg(err);\n        this.logger.error(err);\n      });\n  }\n\n  public duplicate(wallet) {\n    this.logger.debug(\n      'Duplicating wallet for BCH: ' + wallet.id + ': ' + wallet.name\n    );\n\n    let opts: Partial<WalletOptions> = {\n      name: wallet.name + '[BCH]',\n      m: wallet.m,\n      n: wallet.n,\n      myName: wallet.credentials.copayerName,\n      networkName: wallet.network,\n      coin: Coin.BCH,\n      walletPrivKey: wallet.credentials.walletPrivKey,\n      compliantDerivation: wallet.credentials.compliantDerivation\n    };\n\n    const setErr = err => {\n      this.bwcErrorProvider.cb(err, 'Could not duplicate').then(errorMsg => {\n        this.logger.warn('Duplicate BCH', errorMsg);\n        this.popupProvider.ionicAlert(errorMsg, null, 'OK');\n        return;\n      });\n    };\n\n    const importOrCreate: () => Promise<{\n      newWallet: any;\n      isNew?: boolean;\n    }> = () => {\n      return new Promise((resolve, reject) => {\n        this.walletProvider\n          .getStatus(wallet, {})\n          .then(status => {\n            opts.singleAddress = status.wallet.singleAddress;\n\n            // first try to import\n            this.profileProvider\n              .importExtendedPrivateKey(opts.extendedPrivateKey, opts)\n              .then(newWallet => {\n                return resolve({ newWallet });\n              })\n              .catch(err => {\n                if (!(err instanceof this.errors.NOT_AUTHORIZED)) {\n                  return reject(err);\n                }\n                // create and store a wallet\n                this.profileProvider\n                  .createWallet(opts)\n                  .then(newWallet => {\n                    return resolve({ newWallet, isNew: true });\n                  })\n                  .catch(err => {\n                    return reject(err);\n                  });\n              });\n          })\n          .catch(err => {\n            return reject(err);\n          });\n      });\n    };\n\n    // Multisig wallets? add Copayers\n    function addCopayers(newWallet, isNew, cb) {\n      if (!isNew) return cb();\n      if (wallet.n == 1) return cb();\n\n      this.logger.info(\n        'Adding copayers for BCH wallet config:' + wallet.m + '-' + wallet.n\n      );\n\n      this.walletProvider.copyCopayers(wallet, newWallet, err => {\n        if (err) {\n          return cb(err);\n        }\n        return cb();\n      });\n    }\n\n    this.walletProvider\n      .getKeys(wallet)\n      .then(keys => {\n        opts.extendedPrivateKey = keys.xPrivKey;\n        this.onGoingProcessProvider.set('duplicatingWallet');\n        importOrCreate()\n          .then(result => {\n            let newWallet = result.newWallet;\n            let isNew = result.isNew;\n\n            this.walletProvider.updateRemotePreferences(newWallet);\n            this.pushNotificationsProvider.updateSubscription(newWallet);\n\n            addCopayers(newWallet, isNew, err => {\n              this.onGoingProcessProvider.clear();\n              if (err) {\n                return setErr(err);\n              }\n              if (isNew) {\n                this.walletProvider.startScan(newWallet);\n              }\n\n              this.events.publish('status:updated');\n              this.close();\n            });\n          })\n          .catch(err => {\n            this.onGoingProcessProvider.clear();\n            setErr(err);\n          });\n      })\n      .catch(err => {\n        if (err && err.message != 'FINGERPRINT_CANCELLED') {\n          setErr(err);\n        }\n      });\n  }\n\n  public openHelpExternalLink(): void {\n    let url =\n      'https://support.bitpay.com/hc/en-us/articles/115005019583-How-Can-I-Recover-Bitcoin-Cash-BCH-from-My-Wallet-';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant(\n      'Help and support information is available at the website'\n    );\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/bitcoin-cash/bitcoin-cash.ts","import { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\nimport { Logger } from '../../../../../../providers/logger/logger';\n\n// native\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// providers\nimport { AppProvider } from '../../../../../../providers/app/app';\nimport { OnGoingProcessProvider } from '../../../../../../providers/on-going-process/on-going-process';\nimport { PlatformProvider } from '../../../../../../providers/platform/platform';\n\n@Component({\n  selector: 'page-all-addresses',\n  templateUrl: 'all-addresses.html'\n})\nexport class AllAddressesPage {\n  public noBalance;\n  public withBalance;\n  public coin: string;\n  public isCordova: boolean;\n  public walletColor: string;\n\n  private allAddresses;\n  private walletName: string;\n\n  constructor(\n    private navParams: NavParams,\n    private viewCtrl: ViewController,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private socialSharing: SocialSharing,\n    private appProvider: AppProvider,\n    private logger: Logger,\n    private platformProvider: PlatformProvider\n  ) {\n    this.walletName = this.navParams.data.walletName;\n    this.walletColor = this.navParams.data.walletColor;\n    this.noBalance = this.navParams.data.noBalance;\n    this.withBalance = this.navParams.data.withBalance;\n    this.coin = this.navParams.data.coin;\n    this.allAddresses = this.noBalance.concat(this.withBalance);\n    this.isCordova = this.platformProvider.isCordova;\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss();\n  }\n\n  private formatDate(ts: number) {\n    var dateObj = new Date(ts * 1000);\n    if (!dateObj) {\n      this.logger.debug('Error formating a date');\n      return 'DateError';\n    }\n    if (!dateObj.toJSON()) {\n      return '';\n    }\n    return dateObj.toJSON();\n  }\n\n  public sendByEmail() {\n    this.onGoingProcessProvider.set('sendingByEmail');\n    setTimeout(() => {\n      this.onGoingProcessProvider.clear();\n      let appName = this.appProvider.info.nameCase;\n\n      let body: string =\n        appName +\n        ' Wallet \"' +\n        this.walletName +\n        '\" Addresses\\n  Only Main Addresses are  shown.\\n\\n';\n      body += '\\n';\n      body += this.allAddresses\n        .map(v => {\n          return (\n            '* ' +\n            v.address +\n            ' xpub' +\n            v.path.substring(1) +\n            ' ' +\n            this.formatDate(v.createdOn)\n          );\n        })\n        .join('\\n');\n\n      this.socialSharing.shareViaEmail(\n        body,\n        appName + ' Addresses',\n        null, // TO: must be null or an array\n        null, // CC: must be null or an array\n        null, // BCC: must be null or an array\n        null // FILES: can be null, a string, or an array\n      );\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/all-addresses/all-addresses.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// providers\nimport { OnGoingProcessProvider } from '../../../../../providers/on-going-process/on-going-process';\nimport { PopupProvider } from '../../../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\nimport { PushNotificationsProvider } from '../../../../../providers/push-notifications/push-notifications';\nimport { WalletTabsChild } from '../../../../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../../../../wallet-tabs/wallet-tabs.provider';\n\n@Component({\n  selector: 'page-wallet-delete',\n  templateUrl: 'wallet-delete.html'\n})\nexport class WalletDeletePage extends WalletTabsChild {\n  public wallet;\n\n  constructor(\n    public profileProvider: ProfileProvider,\n    public navCtrl: NavController,\n    private navParams: NavParams,\n    private popupProvider: PopupProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private pushNotificationsProvider: PushNotificationsProvider,\n    private logger: Logger,\n    private events: Events,\n    private translate: TranslateService,\n    public walletTabsProvider: WalletTabsProvider\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletDeletePage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n  }\n\n  public showDeletePopup(): void {\n    let title = this.translate.instant('Warning!');\n    let message = this.translate.instant(\n      'Are you sure you want to delete this wallet?'\n    );\n    this.popupProvider.ionicConfirm(title, message, null, null).then(res => {\n      if (res) this.deleteWallet();\n    });\n  }\n\n  public deleteWallet(): void {\n    this.onGoingProcessProvider.set('deletingWallet');\n    this.profileProvider\n      .deleteWalletClient(this.wallet)\n      .then(() => {\n        this.events.publish('status:updated');\n        this.onGoingProcessProvider.clear();\n        this.pushNotificationsProvider.unsubscribe(this.wallet);\n        this.close();\n      })\n      .catch(err => {\n        this.popupProvider.ionicAlert(\n          this.translate.instant('Error'),\n          err.message || err\n        );\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-delete/wallet-delete.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController, NavParams, ToastController } from 'ionic-angular';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// native\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// providers\nimport { ActionSheetProvider } from '../../../../../providers/action-sheet/action-sheet';\nimport { AppProvider } from '../../../../../providers/app/app';\nimport { BackupProvider } from '../../../../../providers/backup/backup';\nimport { ConfigProvider } from '../../../../../providers/config/config';\nimport { PersistenceProvider } from '../../../../../providers/persistence/persistence';\nimport { PlatformProvider } from '../../../../../providers/platform/platform';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\nimport { WalletProvider } from '../../../../../providers/wallet/wallet';\nimport { WalletTabsChild } from '../../../../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../../../../wallet-tabs/wallet-tabs.provider';\n\n@Component({\n  selector: 'page-wallet-export',\n  templateUrl: 'wallet-export.html'\n})\nexport class WalletExportPage extends WalletTabsChild {\n  public wallet;\n  public segments: string = 'file/text';\n  public password: string = '';\n  public result: string = '';\n  public exportWalletForm: FormGroup;\n  public showAdv: boolean = false;\n  public isEncrypted: boolean;\n  public showAdvanced: boolean = false;\n  public canSign: boolean;\n  public backupWalletPlainText;\n  public isCordova: boolean;\n  public isSafari: boolean;\n  public isIOS: boolean;\n  public exportWalletInfo;\n  public supported: boolean;\n  public showQrCode: boolean;\n\n  constructor(\n    public profileProvider: ProfileProvider,\n    public navCtrl: NavController,\n    private walletProvider: WalletProvider,\n    private navParams: NavParams,\n    private formBuilder: FormBuilder,\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider,\n    private backupProvider: BackupProvider,\n    private platformProvider: PlatformProvider,\n    private socialSharing: SocialSharing,\n    private appProvider: AppProvider,\n    private clipboard: Clipboard,\n    public toastCtrl: ToastController,\n    private translate: TranslateService,\n    private actionSheetProvider: ActionSheetProvider,\n    public walletTabsProvider: WalletTabsProvider,\n    private configProvider: ConfigProvider\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n    this.exportWalletForm = this.formBuilder.group(\n      {\n        password: ['', Validators.required],\n        confirmPassword: ['', Validators.required],\n        noSignEnabled: [false]\n      },\n      { validator: this.matchingPasswords('password', 'confirmPassword') }\n    );\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletExportPage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.isEncrypted = this.wallet.isPrivKeyEncrypted();\n    this.canSign = this.wallet.canSign();\n    this.isCordova = this.platformProvider.isCordova;\n    this.isSafari = this.platformProvider.isSafari;\n    this.isIOS = this.platformProvider.isIOS;\n  }\n\n  private matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\n    return (group: FormGroup) => {\n      let password = group.controls[passwordKey];\n      let confirmPassword = group.controls[confirmPasswordKey];\n      if (password.value !== confirmPassword.value) {\n        return {\n          mismatchedPasswords: true\n        };\n      }\n      return undefined;\n    };\n  }\n\n  public showAdvChange(): void {\n    this.showAdv = !this.showAdv;\n  }\n\n  public getPassword(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (this.password) return resolve(this.password);\n\n      this.walletProvider\n        .prepare(this.wallet)\n        .then(password => {\n          this.password = password;\n          return resolve(password);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  public generateQrCode() {\n    if (this.exportWalletInfo || !this.isEncrypted) {\n      this.segments = 'qr-code';\n    }\n\n    this.showQrCode = false;\n\n    this.getPassword()\n      .then((password: string) => {\n        this.walletProvider\n          .getEncodedWalletInfo(this.wallet, password)\n          .then(code => {\n            this.showQrCode = true;\n            if (!code) this.supported = false;\n            else {\n              this.supported = true;\n              this.exportWalletInfo = code;\n            }\n\n            this.segments = 'qr-code';\n          })\n          .catch((err: string) => {\n            this.supported = false;\n            if (err) this.showErrorInfoSheet(err);\n          });\n      })\n      .catch(err => {\n        this.showQrCode = false;\n        this.segments = 'file/text';\n        if (err && err.message != 'FINGERPRINT_CANCELLED')\n          this.showErrorInfoSheet(err);\n      });\n  }\n\n  /*\n    EXPORT WITHOUT PRIVATE KEY - PENDING\n  */\n\n  public noSignEnabledChange(): void {\n    if (!this.supported) return;\n\n    this.walletProvider\n      .getEncodedWalletInfo(this.wallet)\n      .then((code: string) => {\n        this.supported = true;\n        this.exportWalletInfo = code;\n      })\n      .catch(err => {\n        this.logger.error(err);\n        this.supported = false;\n        this.exportWalletInfo = null;\n      });\n  }\n\n  public downloadWalletBackup(): void {\n    this.getPassword()\n      .then((password: string) => {\n        this.getAddressBook()\n          .then(localAddressBook => {\n            let opts = {\n              noSign: this.exportWalletForm.value.noSignEnabled,\n              addressBook: localAddressBook,\n              password\n            };\n\n            this.backupProvider\n              .walletDownload(\n                this.exportWalletForm.value.password,\n                opts,\n                this.navParams.data.walletId\n              )\n              .then(() => {\n                this.close();\n              })\n              .catch(() => {\n                this.showErrorInfoSheet();\n              });\n          })\n          .catch(() => {\n            this.showErrorInfoSheet();\n          });\n      })\n      .catch(err => {\n        if (err && err.message != 'FINGERPRINT_CANCELLED')\n          this.showErrorInfoSheet(err);\n      });\n  }\n\n  public getAddressBook(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.persistenceProvider\n        .getAddressBook(this.wallet.credentials.network)\n        .then(addressBook => {\n          let localAddressBook = [];\n          try {\n            localAddressBook = JSON.parse(addressBook);\n          } catch (ex) {\n            this.logger.warn(\n              'Wallet Export: JSON Parse addressBook is not necessary',\n              ex\n            );\n          }\n\n          return resolve(localAddressBook);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  private getBackup(): Promise<any> {\n    return new Promise(resolve => {\n      this.getPassword()\n        .then((password: string) => {\n          this.getAddressBook()\n            .then(localAddressBook => {\n              let opts = {\n                noSign: this.exportWalletForm.value.noSignEnabled,\n                addressBook: localAddressBook,\n                password\n              };\n\n              var ew = this.backupProvider.walletExport(\n                this.exportWalletForm.value.password,\n                opts,\n                this.navParams.data.walletId\n              );\n              if (!ew) {\n                this.showErrorInfoSheet();\n              }\n              return resolve(ew);\n            })\n            .catch(() => {\n              this.showErrorInfoSheet();\n              return resolve();\n            });\n        })\n        .catch(err => {\n          if (err && err.message != 'FINGERPRINT_CANCELLED')\n            this.showErrorInfoSheet(err);\n          return resolve();\n        });\n    });\n  }\n\n  public viewWalletBackup(): void {\n    this.getBackup().then(backup => {\n      var ew = backup;\n      if (!ew) return;\n      this.backupWalletPlainText = ew;\n    });\n  }\n\n  public copyWalletBackup(): void {\n    this.getBackup().then(backup => {\n      var ew = backup;\n      if (!ew) return;\n      this.clipboard.copy(ew);\n      let copyMessage = this.translate.instant('Copied to clipboard');\n      let showSuccess = this.toastCtrl.create({\n        message: copyMessage,\n        duration: 1000\n      });\n      showSuccess.present();\n    });\n  }\n\n  public sendWalletBackup(): void {\n    let preparingMessage = this.translate.instant('Preparing backup...');\n    let showSuccess = this.toastCtrl.create({\n      message: preparingMessage,\n      duration: 1000\n    });\n    showSuccess.present();\n    let name =\n      this.wallet.credentials.walletName || this.wallet.credentials.walletId;\n\n    let config = this.configProvider.get();\n\n    let alias =\n      config.aliasFor && config.aliasFor[this.wallet.credentials.walletId];\n\n    if (alias) {\n      name = alias + ' [' + name + ']';\n    }\n    this.getBackup().then(backup => {\n      let ew = backup;\n      if (!ew) return;\n\n      if (this.exportWalletForm.value.noSignEnabled)\n        name = name + '(No Private Key)';\n\n      let subject = this.appProvider.info.nameCase + ' Wallet Backup: ' + name;\n      let body =\n        'Here is the encrypted backup of the wallet ' +\n        name +\n        ': \\n\\n' +\n        ew +\n        '\\n\\n To import this backup, copy all text between {...}, including the symbols {}';\n      this.socialSharing.shareViaEmail(\n        body,\n        subject,\n        null, // TO: must be null or an array\n        null, // CC: must be null or an array\n        null, // BCC: must be null or an array\n        null // FILES: can be null, a string, or an array\n      );\n    });\n  }\n\n  private showErrorInfoSheet(err?: Error | string): void {\n    let title = this.translate.instant('Error');\n    let msg = err ? err : this.translate.instant('Failed to export');\n    this.logger.warn(err);\n    const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'default-error',\n      { msg, title }\n    );\n    errorInfoSheet.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-export/wallet-export.ts","import { Component } from '@angular/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// providers\nimport { ConfigProvider } from '../../../../../providers/config/config';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\n\n// pages\nimport { WalletExtendedPrivateKeyPage } from './wallet-extended-private-key/wallet-extended-private-key';\n\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'page-wallet-information',\n  templateUrl: 'wallet-information.html'\n})\nexport class WalletInformationPage {\n  public wallet;\n  public walletId: string;\n  public walletName: string;\n  public N: number;\n  public M: number;\n  public copayers;\n  public copayerId;\n  public balanceByAddress;\n  public account: number;\n  public coin: string;\n  public network: string;\n  public addressType: string;\n  public derivationStrategy: string;\n  public basePath: string;\n  public pubKeys;\n  public externalSource: string;\n  public canSign: boolean;\n  public needsBackup: boolean;\n  private colorCounter = 1;\n  private BLACK_WALLET_COLOR = '#202020';\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private configProvider: ConfigProvider,\n    private navParams: NavParams,\n    private navCtrl: NavController,\n    private events: Events,\n    private logger: Logger\n  ) {}\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletInformationPage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.walletName = this.wallet.name;\n    this.coin = this.wallet.coin;\n    this.walletId = this.wallet.credentials.walletId;\n    this.N = this.wallet.credentials.n;\n    this.M = this.wallet.credentials.m;\n    this.copayers = this.wallet.cachedStatus.wallet.copayers;\n    this.copayerId = this.wallet.credentials.copayerId;\n    this.balanceByAddress = this.wallet.balanceByAddress;\n    this.account = this.wallet.credentials.account;\n    this.network = this.wallet.credentials.network;\n    this.addressType = this.wallet.credentials.addressType || 'P2SH';\n    this.derivationStrategy =\n      this.wallet.credentials.derivationStrategy || 'BIP45';\n    this.basePath = this.wallet.credentials.getBaseAddressDerivationPath(this.coin);\n    this.pubKeys = _.map(this.wallet.credentials.publicKeyRing, 'xPubKey');\n    this.externalSource = null;\n    this.canSign = this.wallet.canSign();\n    this.needsBackup = this.wallet.needsBackup;\n  }\n\n  public saveBlack(): void {\n    if (this.colorCounter != 5) {\n      this.colorCounter++;\n      return;\n    }\n    this.save(this.BLACK_WALLET_COLOR);\n  }\n\n  private save(color): void {\n    let opts = {\n      colorFor: {}\n    };\n    opts.colorFor[this.wallet.credentials.walletId] = color;\n    this.configProvider.set(opts);\n    this.events.publish('wallet:updated', this.wallet.credentials.walletId);\n    this.navCtrl.popToRoot();\n  }\n\n  public openWalletExtendedPrivateKey(): void {\n    this.navCtrl.push(WalletExtendedPrivateKeyPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-information/wallet-information.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../../../providers/logger/logger';\n\n// providers\nimport { TranslateService } from '@ngx-translate/core';\nimport { ActionSheetProvider } from '../../../../../../providers/action-sheet/action-sheet';\nimport { ProfileProvider } from '../../../../../../providers/profile/profile';\nimport { WalletProvider } from '../../../../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-wallet-extended-private-key',\n  templateUrl: 'wallet-extended-private-key.html'\n})\nexport class WalletExtendedPrivateKeyPage {\n  public wallet;\n  public credentialsEncrypted: boolean;\n  public xPrivKey: string;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private logger: Logger,\n    private navParams: NavParams,\n    private navCtrl: NavController,\n    private actionSheetProvider: ActionSheetProvider,\n    private translate: TranslateService\n  ) {}\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletExtendedPrivateKeyPage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.credentialsEncrypted = this.wallet.isPrivKeyEncrypted();\n  }\n\n  ionViewDidEnter() {\n    this.walletProvider\n      .getKeys(this.wallet)\n      .then(k => {\n        this.xPrivKey = k.xPrivKey;\n        this.credentialsEncrypted = false;\n      })\n      .catch(err => {\n        if (err && err.message != 'FINGERPRINT_CANCELLED') {\n          let title = this.translate.instant('Could not decrypt wallet');\n          this.showErrorInfoSheet(err, title);\n        }\n        this.navCtrl.pop();\n      });\n  }\n\n  private showErrorInfoSheet(\n    err: Error | string,\n    infoSheetTitle: string\n  ): void {\n    if (!err) return;\n    this.logger.error('Could not get keys:', err);\n    const errorInfoSheet = this.actionSheetProvider.createInfoSheet(\n      'default-error',\n      { msg: err, title: infoSheetTitle }\n    );\n    errorInfoSheet.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-information/wallet-extended-private-key/wallet-extended-private-key.ts","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// native\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n// providers\nimport { AppProvider } from '../../../../../providers/app/app';\nimport { ConfigProvider } from '../../../../../providers/config/config';\nimport { PersistenceProvider } from '../../../../../providers/persistence/persistence';\nimport { PlatformProvider } from '../../../../../providers/platform/platform';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\nimport { ReplaceParametersProvider } from '../../../../../providers/replace-parameters/replace-parameters';\n\n@Component({\n  selector: 'page-wallet-service-url',\n  templateUrl: 'wallet-service-url.html'\n})\nexport class WalletServiceUrlPage {\n  public success: boolean = false;\n  public wallet;\n  public comment: string;\n  public walletServiceForm: FormGroup;\n  private config;\n  private defaults;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private configProvider: ConfigProvider,\n    private app: AppProvider,\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider,\n    private formBuilder: FormBuilder,\n    private events: Events,\n    private splashScreen: SplashScreen,\n    private platformProvider: PlatformProvider,\n    private replaceParametersProvider: ReplaceParametersProvider,\n    private translate: TranslateService\n  ) {\n    this.walletServiceForm = this.formBuilder.group({\n      bwsurl: [\n        '',\n        Validators.compose([Validators.minLength(1), Validators.required])\n      ]\n    });\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletServiceUrlPage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.defaults = this.configProvider.getDefaults();\n    this.config = this.configProvider.get();\n    let appName = this.app.info.nameCase;\n    this.comment = this.replaceParametersProvider.replace(\n      this.translate.instant(\n        \"{{appName}} depends on Bitcore Wallet Service (BWS) for blockchain information, networking and Copayer synchronization. The default configuration points to https://bws.bitpay.com (BitPay's public BWS instance).\"\n      ),\n      { appName }\n    );\n    this.walletServiceForm.value.bwsurl =\n      (this.config.bwsFor &&\n        this.config.bwsFor[this.wallet.credentials.walletId]) ||\n      this.defaults.bws.url;\n  }\n\n  public resetDefaultUrl(): void {\n    this.walletServiceForm.value.bwsurl = this.defaults.bws.url;\n  }\n\n  public save(): void {\n    let bws;\n    switch (this.walletServiceForm.value.bwsurl) {\n      case 'prod':\n      case 'production':\n//        bws = 'http://192.168.91.206:3232/bws/api';\n        bws = 'https://api.safecoin.org:3232/bwss/api';\n        break;\n      case 'sta':\n      case 'staging':\n        bws = 'http://192.168.91.206:3232/bws/api';\n        break;\n      case 'loc':\n      case 'local':\n        bws = 'http://192.168.91.206:3232/bws/api';\n        break;\n    }\n    if (bws) {\n      this.logger.info('Using BWS URL Alias to ' + bws);\n      this.walletServiceForm.value.bwsurl = bws;\n    }\n\n    let opts = {\n      bwsFor: {}\n    };\n    opts.bwsFor[\n      this.wallet.credentials.walletId\n    ] = this.walletServiceForm.value.bwsurl;\n\n    this.configProvider.set(opts);\n    this.persistenceProvider.setCleanAndScanAddresses(\n      this.wallet.credentials.walletId\n    );\n    this.events.publish('wallet:updated', this.wallet.credentials.walletId);\n    this.navCtrl.popToRoot().then(() => {\n      this.reload();\n    });\n  }\n\n  private reload(): void {\n    window.location.reload();\n    if (this.platformProvider.isCordova) this.splashScreen.show();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-service-url/wallet-service-url.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\nimport * as papa from 'papaparse';\nimport { Logger } from '../../../../../providers/logger/logger';\n\n// Providers\nimport { AppProvider } from '../../../../../providers/app/app';\nimport { ConfigProvider } from '../../../../../providers/config/config';\nimport { PlatformProvider } from '../../../../../providers/platform/platform';\nimport { ProfileProvider } from '../../../../../providers/profile/profile';\nimport { WalletProvider } from '../../../../../providers/wallet/wallet';\n\n@Component({\n  selector: 'page-wallet-transaction-history',\n  templateUrl: 'wallet-transaction-history.html'\n})\nexport class WalletTransactionHistoryPage {\n  public wallet;\n  public csvReady: boolean;\n  public appName: string;\n  public isCordova: boolean;\n  public err;\n  public config;\n  public csvContent;\n  public csvFilename;\n  public csvHeader: string[];\n  public unitToSatoshi: number;\n  public unitDecimals: number;\n  public satToUnit: number;\n  public satToBtc: number;\n\n  private currency: string;\n\n  constructor(\n    private profileProvider: ProfileProvider,\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private configProvider: ConfigProvider,\n    private logger: Logger,\n    private platformProvider: PlatformProvider,\n    private appProvider: AppProvider,\n    private walletProvider: WalletProvider\n  ) {\n    this.csvReady = false;\n    this.csvContent = [];\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletTransactionHistoryPage');\n  }\n\n  ionViewWillEnter() {\n    this.wallet = this.profileProvider.getWallet(this.navParams.data.walletId);\n    this.currency = this.wallet.coin.toUpperCase();\n    this.isCordova = this.platformProvider.isCordova;\n    this.appName = this.appProvider.info.nameCase;\n    this.config = this.configProvider.get();\n    this.unitToSatoshi = this.config.wallet.settings.unitToSatoshi;\n    this.unitDecimals = this.config.wallet.settings.unitDecimals;\n    this.satToUnit = 1 / this.unitToSatoshi;\n    this.satToBtc = 1 / 100000000;\n    this.csvHistory();\n  }\n\n  private formatDate(date): string {\n    var dateObj = new Date(date);\n    if (!dateObj) {\n      this.logger.debug('Error formating a date');\n      return 'DateError';\n    }\n    if (!dateObj.toJSON()) {\n      return '';\n    }\n    return dateObj.toJSON();\n  }\n\n  // TODO : move this to walletService.\n  public csvHistory() {\n    this.logger.debug('Generating CSV from History');\n    this.walletProvider\n      .getTxHistory(this.wallet, {})\n      .then(txs => {\n        if (_.isEmpty(txs)) {\n          this.logger.warn('Failed to generate CSV: no transactions');\n          this.err = 'no transactions';\n          return;\n        }\n\n        this.logger.debug('Wallet Transaction History Length:', txs.length);\n\n        var data = txs;\n        this.csvFilename = this.appName + '-' + this.wallet.name + '.csv';\n        this.csvHeader = [\n          'Date',\n          'Destination',\n          'Description',\n          'Amount',\n          'Currency',\n          'Txid',\n          'Creator',\n          'Copayers',\n          'Comment'\n        ];\n\n        var _amount, _note, _copayers, _creator, _comment;\n\n        data.forEach(it => {\n          var amount = it.amount;\n\n          if (it.action == 'moved') amount = 0;\n\n          _copayers = '';\n          _creator = '';\n\n          if (it.actions && it.actions.length > 1) {\n            for (var i = 0; i < it.actions.length; i++) {\n              _copayers +=\n                it.actions[i].copayerName + ':' + it.actions[i].type + ' - ';\n            }\n            _creator =\n              it.creatorName && it.creatorName != 'undefined'\n                ? it.creatorName\n                : '';\n          }\n          _amount =\n            (it.action == 'sent' ? '-' : '') +\n            (amount * this.satToBtc).toFixed(8);\n          _note = it.message || '';\n          _comment = it.note ? it.note.body : '';\n\n          if (it.action == 'moved')\n            _note += ' Moved:' + (it.amount * this.satToBtc).toFixed(8);\n\n          this.csvContent.push({\n            Date: this.formatDate(it.time * 1000),\n            Destination: it.addressTo || '',\n            Description: _note,\n            Amount: _amount,\n            Currency: this.currency,\n            Txid: it.txid,\n            Creator: _creator,\n            Copayers: _copayers,\n            Comment: _comment\n          });\n\n          if (it.fees && (it.action == 'moved' || it.action == 'sent')) {\n            var _fee = (it.fees * this.satToBtc).toFixed(8);\n            this.csvContent.push({\n              Date: this.formatDate(it.time * 1000),\n              Destination: 'Bitcoin Network Fees',\n              Description: '',\n              Amount: '-' + _fee,\n              Currency: this.currency,\n              Txid: '',\n              Creator: '',\n              Copayers: ''\n            });\n          }\n        });\n        this.csvReady = true;\n      })\n      .catch(err => {\n        this.logger.warn('Failed to generate CSV:', err);\n        this.err = err;\n      });\n  }\n\n  public downloadCSV() {\n    if (!this.csvReady) return;\n    let csv = papa.unparse({\n      fields: this.csvHeader,\n      data: this.csvContent\n    });\n\n    var blob = new Blob([csv]);\n    var a = window.document.createElement('a');\n    a.href = window.URL.createObjectURL(blob);\n    a.download = this.csvFilename;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  public async clearTransactionHistory(): Promise<void> {\n    this.logger.info('Removing Transaction history ' + this.wallet.id);\n    this.walletProvider.clearTxHistory(this.wallet);\n    this.logger.info('Transaction history cleared for :' + this.wallet.id);\n    return this.navCtrl.popToRoot();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/wallet-settings/wallet-settings-advanced/wallet-transaction-history/wallet-transaction-history.ts","import { Component } from '@angular/core';\nimport { NavController, Platform } from 'ionic-angular';\n\n// Providers\nimport { TouchIdProvider } from '../../providers/touchid/touchid';\n\n@Component({\n  selector: 'page-fingerprint',\n  templateUrl: 'fingerprint.html'\n})\nexport class FingerprintModalPage {\n  public unregister;\n\n  constructor(\n    private touchid: TouchIdProvider,\n    private platform: Platform,\n    private navCtrl: NavController\n  ) {\n    this.unregister = this.platform.registerBackButtonAction(() => {});\n    this.checkFingerprint();\n  }\n\n  public checkFingerprint(): void {\n    this.touchid.check().then(() => {\n      this.unregister();\n      this.navCtrl.pop({ animate: true });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/fingerprint/fingerprint.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { AppProvider } from '../../providers/app/app';\n\nimport { ImportWalletPage } from '../add/import-wallet/import-wallet';\nimport { TourPage } from './tour/tour';\n\n@Component({\n  selector: 'page-onboarding',\n  templateUrl: 'onboarding.html'\n})\nexport class OnboardingPage {\n  public isCopay: boolean;\n\n  constructor(\n    public navCtrl: NavController,\n    private logger: Logger,\n    private app: AppProvider\n  ) {\n    this.isCopay = this.app.info.nameCase == 'Copay' ? true : false;\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad OnboardingPage');\n  }\n\n  public getStarted(): void {\n    this.navCtrl.push(TourPage);\n  }\n\n  public restoreFromBackup(): void {\n    this.navCtrl.push(ImportWalletPage, { fromOnboarding: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/onboarding/onboarding.ts","import { Component, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  LoadingController,\n  Navbar,\n  NavController,\n  Slides\n} from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// pages\n// import { CollectEmailPage } from '../collect-email/collect-email';\nimport { BackupRequestPage } from '../backup-request/backup-request';\n\n// providers\nimport { OnGoingProcessProvider } from '../../../providers/on-going-process/on-going-process';\nimport { PersistenceProvider } from '../../../providers/persistence/persistence';\nimport { PopupProvider } from '../../../providers/popup/popup';\nimport { ProfileProvider } from '../../../providers/profile/profile';\nimport { RateProvider } from '../../../providers/rate/rate';\nimport { TxFormatProvider } from '../../../providers/tx-format/tx-format';\n\n@Component({\n  selector: 'page-tour',\n  templateUrl: 'tour.html'\n})\nexport class TourPage {\n  @ViewChild(Slides)\n  slides: Slides;\n  @ViewChild(Navbar)\n  navBar: Navbar;\n\n  public localCurrencySymbol: string;\n  public localCurrencyPerBtc: string;\n  public currentIndex: number;\n\n  private retryCount: number = 0;\n\n  constructor(\n    public navCtrl: NavController,\n    public loadingCtrl: LoadingController,\n    private logger: Logger,\n    private translate: TranslateService,\n    private profileProvider: ProfileProvider,\n    private rateProvider: RateProvider,\n    private txFormatProvider: TxFormatProvider,\n    private onGoingProcessProvider: OnGoingProcessProvider,\n    private persistenceProvider: PersistenceProvider,\n    private popupProvider: PopupProvider\n  ) {\n    this.currentIndex = 0;\n    this.rateProvider.whenRatesAvailable('btc').then(() => {\n      let btcAmount = 1;\n      this.localCurrencySymbol = '$';\n      this.localCurrencyPerBtc = this.txFormatProvider.formatAlternativeStr(\n        'btc',\n        btcAmount * 1e8\n      );\n    });\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad TourPage');\n  }\n\n  ionViewWillEnter() {\n    this.navBar.backButtonClick = () => {\n      this.slidePrev();\n    };\n  }\n\n  public slideChanged(): void {\n    this.currentIndex = this.slides.getActiveIndex();\n  }\n\n  public slidePrev(): void {\n    if (this.currentIndex == 0) this.navCtrl.pop();\n    else {\n      this.slides.slidePrev();\n    }\n  }\n\n  public slideNext(): void {\n    this.slides.slideNext();\n  }\n\n  public createDefaultWallet(): void {\n    this.onGoingProcessProvider.set('creatingWallet');\n    this.profileProvider\n      .createDefaultWallet()\n      .then(wallet => {\n        this.onGoingProcessProvider.clear();\n        this.persistenceProvider.setOnboardingCompleted();\n        this.navCtrl.push(BackupRequestPage, { walletId: wallet.id });\n//        this.navCtrl.push(CollectEmailPage, { walletId: wallet.id });\n      })\n      .catch(err => {\n        setTimeout(() => {\n          this.logger.warn(\n            'Retrying to create default wallet.....:' + ++this.retryCount\n          );\n          if (this.retryCount > 3) {\n            this.onGoingProcessProvider.clear();\n            let title = this.translate.instant('Cannot create wallet');\n            let okText = this.translate.instant('Retry');\n            this.popupProvider.ionicAlert(title, err, okText).then(() => {\n              this.retryCount = 0;\n              this.createDefaultWallet();\n            });\n          } else {\n            this.createDefaultWallet();\n          }\n        }, 2000);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/onboarding/tour/tour.ts","import { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\nimport * as _ from 'lodash';\n\n// Providers\nimport { PlatformProvider } from '../../../providers/platform/platform';\nimport { TimeProvider } from '../../../providers/time/time';\n\n@Component({\n  selector: 'page-search-tx-modal',\n  templateUrl: 'search-tx-modal.html'\n})\nexport class SearchTxModalPage {\n  private HISTORY_SHOW_LIMIT: number;\n  private currentTxHistoryPage: number;\n\n  public wallet;\n  public isCordova: boolean;\n  public filteredTxHistory;\n  public txHistorySearchResults;\n  public txHistoryShowMore: boolean;\n  public completeTxHistory;\n  public addressbook;\n\n  constructor(\n    private navParams: NavParams,\n    private platformProvider: PlatformProvider,\n    private timeProvider: TimeProvider,\n    private viewCtrl: ViewController\n  ) {\n    this.HISTORY_SHOW_LIMIT = 10;\n    this.currentTxHistoryPage = 0;\n    this.txHistorySearchResults = [];\n    this.isCordova = this.platformProvider.isCordova;\n    this.addressbook = this.navParams.data.addressbook;\n    this.completeTxHistory = this.navParams.data.completeHistory;\n    this.wallet = this.navParams.data.wallet;\n  }\n\n  public close(txid: string): void {\n    this.viewCtrl.dismiss({ txid });\n  }\n\n  public updateSearchInput(search: string): void {\n    this.currentTxHistoryPage = 0;\n    this.throttleSearch(search);\n  }\n\n  private throttleSearch = _.throttle((search: string) => {\n    this.txHistorySearchResults = this.filter(search).slice(\n      0,\n      this.HISTORY_SHOW_LIMIT\n    );\n  }, 1000);\n\n  private filter(search: string) {\n    this.filteredTxHistory = [];\n\n    if (_.isEmpty(search)) {\n      this.txHistoryShowMore = false;\n      return [];\n    }\n\n    this.filteredTxHistory = _.filter(this.completeTxHistory, tx => {\n      if (!tx.searcheableString)\n        tx.searcheableString = this.computeSearchableString(tx);\n      return _.includes(tx.searcheableString, search.toLowerCase());\n    });\n\n    this.txHistoryShowMore =\n      this.filteredTxHistory.length > this.HISTORY_SHOW_LIMIT ? true : false;\n\n    return this.filteredTxHistory;\n  }\n\n  private computeSearchableString(tx) {\n    let addressBook = '';\n    if (tx.addressTo && this.addressbook && this.addressbook[tx.addressTo])\n      addressBook =\n        this.addressbook[tx.addressTo].name ||\n        this.addressbook[tx.addressTo] ||\n        '';\n    let searchableDate = this.computeSearchableDate(new Date(tx.time * 1000));\n    let message = tx.message ? tx.message : '';\n    let comment = tx.note ? tx.note.body : '';\n    let addressTo = tx.addressTo ? tx.addressTo : '';\n    let txid = tx.txid ? tx.txid : '';\n    return (\n      tx.amountStr +\n      message +\n      addressTo +\n      addressBook +\n      searchableDate +\n      comment +\n      txid\n    )\n      .toString()\n      .toLowerCase();\n  }\n\n  private computeSearchableDate(date: Date): string {\n    let day = ('0' + date.getDate()).slice(-2).toString();\n    let month = ('0' + (date.getMonth() + 1)).slice(-2).toString();\n    let year = date.getFullYear();\n    return [month, day, year].join('/');\n  }\n\n  public moreSearchResults(loading): void {\n    setTimeout(() => {\n      this.currentTxHistoryPage++;\n      this.showHistory();\n      loading.complete();\n    }, 100);\n  }\n\n  public showHistory(): void {\n    this.txHistorySearchResults = this.filteredTxHistory\n      ? this.filteredTxHistory.slice(\n          0,\n          (this.currentTxHistoryPage + 1) * this.HISTORY_SHOW_LIMIT\n        )\n      : [];\n    this.txHistoryShowMore =\n      this.filteredTxHistory.length > this.txHistorySearchResults.length;\n  }\n\n  public trackByFn(index: number): number {\n    return index;\n  }\n\n  public createdWithinPastDay(time): boolean {\n    return this.timeProvider.withinPastDay(time);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-details/search-tx-modal/search-tx-modal.ts","import { Component } from '@angular/core';\nimport { NavParams } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n@Component({\n  selector: 'page-wallet-balance',\n  templateUrl: 'wallet-balance.html'\n})\nexport class WalletBalancePage {\n  public status;\n  public color: string;\n\n  constructor(private logger: Logger, private navParams: NavParams) {\n    this.status = this.navParams.data.status;\n    this.color = this.navParams.data.color;\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad WalletBalancePage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-details/wallet-balance/wallet-balance.ts","import { Component, ViewChild } from '@angular/core';\nimport { Events, NavParams } from 'ionic-angular';\nimport { ReceivePage } from '../receive/receive';\nimport { SendPage } from '../send/send';\nimport { WalletDetailsPage } from '../wallet-details/wallet-details';\nimport { WalletTabsProvider } from './wallet-tabs.provider';\n\n@Component({\n  template: `\n  <ion-tabs selectedIndex=\"1\" #tabs>\n    <ion-tab [root]=\"receiveRoot\" tabTitle=\"{{'Receive'|translate}}\" tabIcon=\"tab-receive\"></ion-tab>\n    <ion-tab [root]=\"activityRoot\" tabTitle=\"{{'Activity'|translate}}\" tabIcon=\"tab-activity\"></ion-tab>\n    <ion-tab [root]=\"sendRoot\" tabTitle=\"{{'Send'|translate}}\" tabIcon=\"tab-send\"></ion-tab>\n  </ion-tabs>\n  `\n})\nexport class WalletTabsPage {\n  @ViewChild('tabs')\n  walletTabs: any;\n\n  receiveRoot = ReceivePage;\n  activityRoot = WalletDetailsPage;\n  sendRoot = SendPage;\n\n  walletId: string;\n\n  constructor(\n    private navParams: NavParams,\n    private walletTabsProvider: WalletTabsProvider,\n    private events: Events\n  ) {}\n\n  ionViewDidLoad() {\n    this.walletId = this.navParams.get('walletId');\n  }\n\n  ionViewWillEnter() {\n    this.events.subscribe('bwsEvent', (walletId, type) => {\n      // Update current address\n      if (this.walletId == walletId && type == 'NewIncomingTx')\n        this.events.publish('Wallet/setAddress');\n      // Update wallet details\n      if (this.walletId == walletId && type != 'NewAddress')\n        this.events.publish('Wallet/updateAll');\n    });\n    this.events.subscribe('Local/TxAction', walletId => {\n      if (this.walletId == walletId) this.events.publish('Wallet/updateAll');\n    });\n  }\n\n  ionViewWillLeave() {\n    this.events.publish('Wallet/disableHardwareKeyboard');\n    this.events.unsubscribe('bwsEvent');\n    this.events.unsubscribe('Local/TxAction');\n    this.events.unsubscribe('Wallet/updateAll');\n    this.events.unsubscribe('Wallet/setAddress');\n    this.events.unsubscribe('Wallet/disableHardwareKeyboard');\n  }\n\n  ngAfterViewInit() {\n    this.walletTabsProvider.setTabNav(this.walletTabs);\n  }\n\n  ngOnDestroy() {\n    this.walletTabsProvider.clear();\n    this.events.publish('Home/reloadStatus');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-tabs/wallet-tabs.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Events, NavController } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// Native\nimport { SocialSharing } from '@ionic-native/social-sharing';\n\n// Pages\nimport { BackupWarningPage } from '../backup/backup-warning/backup-warning';\nimport { AmountPage } from '../send/amount/amount';\n\n// Providers\nimport { ActionSheetProvider } from '../../providers/action-sheet/action-sheet';\nimport { AddressProvider } from '../../providers/address/address';\nimport { BwcErrorProvider } from '../../providers/bwc-error/bwc-error';\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { PlatformProvider } from '../../providers/platform/platform';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { WalletProvider } from '../../providers/wallet/wallet';\n\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { WalletTabsChild } from '../wallet-tabs/wallet-tabs-child';\nimport { WalletTabsProvider } from '../wallet-tabs/wallet-tabs.provider';\n\n@Component({\n  selector: 'page-receive',\n  templateUrl: 'receive.html'\n})\nexport class ReceivePage extends WalletTabsChild {\n  public protocolHandler: string;\n  public address: string;\n  public qrAddress: string;\n  public wallets = [];\n  public wallet;\n  public showShareButton: boolean;\n  public loading: boolean;\n  public playAnimation: boolean;\n\n  constructor(\n    private actionSheetProvider: ActionSheetProvider,\n    navCtrl: NavController,\n    private logger: Logger,\n    profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private platformProvider: PlatformProvider,\n    private events: Events,\n    private socialSharing: SocialSharing,\n    private bwcErrorProvider: BwcErrorProvider,\n    private translate: TranslateService,\n    private externalLinkProvider: ExternalLinkProvider,\n    private addressProvider: AddressProvider,\n    walletTabsProvider: WalletTabsProvider\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n    this.showShareButton = this.platformProvider.isCordova;\n  }\n\n  ionViewDidLoad() {\n    this.setAddress();\n    this.events.subscribe('Wallet/setAddress', () => {\n      this.setAddress(true);\n    });\n  }\n\n  public requestSpecificAmount(): void {\n    this.navCtrl.push(AmountPage, {\n      toAddress: this.address,\n      id: this.wallet.credentials.walletId,\n      recipientType: 'wallet',\n      name: this.wallet.name,\n      color: this.wallet.color,\n      coin: this.wallet.coin,\n      nextPage: 'CustomAmountPage',\n      network: this.addressProvider.validateAddress(this.address, this.wallet.coin).network\n    });\n  }\n\n  private async setAddress(\n    newAddr?: boolean,\n    changingWallet?: boolean\n  ): Promise<void> {\n    this.loading =\n      newAddr || _.isEmpty(this.address) || changingWallet ? true : false;\n\n    let addr: string = (await this.walletProvider\n      .getAddress(this.wallet, newAddr)\n      .catch(err => {\n        this.loading = false;\n        this.logger.warn(this.bwcErrorProvider.msg(err, 'Server Error'));\n      })) as string;\n    this.loading = false;\n    let address = await this.walletProvider.getAddressView(this.wallet, addr);\n    if (this.address && this.address != address) {\n      this.playAnimation = true;\n    }\n    this.updateQrAddress(address, newAddr);\n  }\n\n  private async updateQrAddress(address?, newAddr?: boolean): Promise<void> {\n    let qrAddress = await this.walletProvider.getProtoAddress(\n      this.wallet,\n      address\n    );\n    if (newAddr) {\n      await Observable.timer(400).toPromise();\n    }\n    this.address = address;\n    this.qrAddress = qrAddress;\n    await Observable.timer(200).toPromise();\n    this.playAnimation = false;\n  }\n\n  public shareAddress(): void {\n    if (!this.showShareButton) return;\n    this.socialSharing.share(this.address);\n  }\n\n  public goToBackup(): void {\n    this.navCtrl.push(BackupWarningPage, {\n      walletId: this.wallet.credentials.walletId\n    });\n  }\n\n  public openWikiBackupNeeded(): void {\n    let url =\n      'https://support.bitpay.com/hc/en-us/articles/115002989283-Why-don-t-I-have-an-online-account-for-my-BitPay-wallet-';\n    let optIn = true;\n    let title = null;\n    let message = this.translate.instant('Read more in our Wiki');\n    let okText = this.translate.instant('Open');\n    let cancelText = this.translate.instant('Go Back');\n    this.externalLinkProvider.open(\n      url,\n      optIn,\n      title,\n      message,\n      okText,\n      cancelText\n    );\n  }\n\n  public showMoreOptions(): void {\n    const showShare =\n      this.showShareButton &&\n      this.wallet &&\n      this.wallet.isComplete() &&\n      !this.wallet.needsBackup;\n    const optionsSheet = this.actionSheetProvider.createOptionsSheet(\n      'address-options',\n      { showShare }\n    );\n    optionsSheet.present();\n\n    optionsSheet.onDidDismiss(option => {\n      if (option == 'request-amount') this.requestSpecificAmount();\n      if (option == 'share-address') this.shareAddress();\n    });\n  }\n\n  public showFullAddr(): void {\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'address-copied',\n      { address: this.address, coin: this.wallet.coin }\n    );\n    infoSheet.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/receive/receive.ts","import { Component } from '@angular/core';\nimport { Events, NavController, NavParams } from 'ionic-angular';\nimport * as _ from 'lodash';\n\n// Providers\nimport { ActionSheetProvider } from '../../providers/action-sheet/action-sheet';\nimport { AddressBookProvider } from '../../providers/address-book/address-book';\nimport { AddressProvider } from '../../providers/address/address';\nimport { AppProvider } from '../../providers/app/app';\nimport { ExternalLinkProvider } from '../../providers/external-link/external-link';\nimport { IncomingDataProvider } from '../../providers/incoming-data/incoming-data';\nimport { Logger } from '../../providers/logger/logger';\nimport { PopupProvider } from '../../providers/popup/popup';\nimport { ProfileProvider } from '../../providers/profile/profile';\nimport { Coin, WalletProvider } from '../../providers/wallet/wallet';\nimport { WalletTabsProvider } from '../wallet-tabs/wallet-tabs.provider';\n\n// Pages\nimport { Observable } from 'rxjs/Observable';\nimport { WalletTabsChild } from '../wallet-tabs/wallet-tabs-child';\nimport { AmountPage } from './amount/amount';\n\nexport interface FlatWallet {\n  color: string;\n  name: string;\n  recipientType: 'wallet';\n  coin: Coin;\n  network: 'testnet' | 'mainnet';\n  m: number;\n  n: number;\n  needsBackup: boolean;\n  isComplete: () => boolean;\n  getAddress: () => Promise<string>;\n}\n\n@Component({\n  selector: 'page-send',\n  templateUrl: 'send.html'\n})\nexport class SendPage extends WalletTabsChild {\n  public search: string = '';\n  public walletsBtc;\n  public walletsBch;\n  public walletsSafe;\n  public walletsBtcz;\n  public walletsZcl;\n  public walletsAnon;\n  public walletsZel;\n  public walletsRvn;\n  public walletsLtc;\n  public walletBchList: FlatWallet[];\n  public walletBtcList: FlatWallet[];\n  public walletSafeList: FlatWallet[];\n  public walletBtczList: FlatWallet[];\n  public walletZclList: FlatWallet[];\n  public walletAnonList: FlatWallet[];\n  public walletZelList: FlatWallet[];\n  public walletRvnList: FlatWallet[];\n  public walletLtcList: FlatWallet[];\n  public contactsList = [];\n  public filteredContactsList = [];\n  public filteredWallets = [];\n  public hasBtcWallets: boolean;\n  public hasBchWallets: boolean;\n  public hasSafeWallets: boolean;\n  public hasBtczWallets: boolean;\n  public hasZclWallets: boolean;\n  public hasAnonWallets: boolean;\n  public hasZelWallets: boolean;\n  public hasRvnWallets: boolean;\n  public hasLtcWallets: boolean;\n  public hasWallets: boolean;\n  public hasContacts: boolean;\n  public contactsShowMore: boolean;\n  private CONTACTS_SHOW_LIMIT: number = 10;\n  private currentContactsPage: number = 0;\n  private scannerOpened: boolean;\n\n  public amount: string;\n  public fiatAmount: number;\n  public fiatCode: string;\n  public invalidAddress: boolean;\n\n  constructor(\n    navCtrl: NavController,\n    private navParams: NavParams,\n    profileProvider: ProfileProvider,\n    private walletProvider: WalletProvider,\n    private addressBookProvider: AddressBookProvider,\n    private logger: Logger,\n    private incomingDataProvider: IncomingDataProvider,\n    private popupProvider: PopupProvider,\n    private addressProvider: AddressProvider,\n    private events: Events,\n    walletTabsProvider: WalletTabsProvider,\n    private actionSheetProvider: ActionSheetProvider,\n    private externalLinkProvider: ExternalLinkProvider,\n    private appProvider: AppProvider\n  ) {\n    super(navCtrl, profileProvider, walletTabsProvider);\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad SendPage');\n\n    this.events.subscribe('update:address', data => {\n      this.search = data.value;\n      this.processInput();\n    });\n  }\n\n  ionViewWillEnter() {\n    this.walletsBtc = this.profileProvider.getWallets({ coin: 'btc' });\n    this.walletsBch = this.profileProvider.getWallets({ coin: 'bch' });\n    this.walletsSafe = this.profileProvider.getWallets({ coin: 'safe' });\n    this.walletsBtcz = this.profileProvider.getWallets({ coin: 'btcz' });\n    this.walletsZcl = this.profileProvider.getWallets({ coin: 'zcl' });\n    this.walletsAnon = this.profileProvider.getWallets({ coin: 'anon' });\n    this.walletsZel = this.profileProvider.getWallets({ coin: 'zel' });\n    this.walletsRvn = this.profileProvider.getWallets({ coin: 'rvn' });\n    this.walletsLtc = this.profileProvider.getWallets({ coin: 'ltc' });\n    this.hasBtcWallets = !_.isEmpty(this.walletsBtc);\n    this.hasBchWallets = !_.isEmpty(this.walletsBch);\n    this.hasSafeWallets = !_.isEmpty(this.walletsSafe);\n    this.hasBtczWallets = !_.isEmpty(this.walletsBtcz);\n    this.hasZclWallets = !_.isEmpty(this.walletsZcl);\n    this.hasAnonWallets = !_.isEmpty(this.walletsAnon);\n    this.hasZelWallets = !_.isEmpty(this.walletsZel);\n    this.hasRvnWallets = !_.isEmpty(this.walletsRvn);\n    this.hasLtcWallets = !_.isEmpty(this.walletsLtc);\n    this.walletBchList = this.getBchWalletsList();\n    this.walletBtcList = this.getBtcWalletsList();\n    this.walletSafeList = this.getSafeWalletsList();\n    this.walletBtczList = this.getBtczWalletsList();\n    this.walletZclList = this.getZclWalletsList();\n    this.walletAnonList = this.getAnonWalletsList();\n    this.walletZelList = this.getZelWalletsList();\n    this.walletRvnList = this.getRvnWalletsList();\n    this.walletLtcList = this.getLtcWalletsList();\n    this.updateContactsList();\n  }\n\n  ngOnDestroy() {\n    this.events.unsubscribe('update:address');\n  }\n\n  private getBchWalletsList(): FlatWallet[] {\n    return this.hasBchWallets ? this.getRelevantWallets(this.walletsBch) : [];\n  }\n\n  private getBtcWalletsList(): FlatWallet[] {\n    return this.hasBtcWallets ? this.getRelevantWallets(this.walletsBtc) : [];\n  }\n\n  private getSafeWalletsList(): FlatWallet[] {\n    return this.hasSafeWallets ? this.getRelevantWallets(this.walletsSafe) : [];\n  }\n\n  private getBtczWalletsList(): FlatWallet[] {\n    return this.hasBtczWallets ? this.getRelevantWallets(this.walletsBtcz) : [];\n  }\n\n  private getZclWalletsList(): FlatWallet[] {\n    return this.hasZclWallets ? this.getRelevantWallets(this.walletsZcl) : [];\n  }\n\n  private getAnonWalletsList(): FlatWallet[] {\n    return this.hasAnonWallets ? this.getRelevantWallets(this.walletsAnon) : [];\n  }\n\n  private getZelWalletsList(): FlatWallet[] {\n    return this.hasZelWallets ? this.getRelevantWallets(this.walletsZel) : [];\n  }\n\n  private getRvnWalletsList(): FlatWallet[] {\n    return this.hasRvnWallets ? this.getRelevantWallets(this.walletsRvn) : [];\n  }\n\n  private getLtcWalletsList(): FlatWallet[] {\n    return this.hasLtcWallets ? this.getRelevantWallets(this.walletsLtc) : [];\n  }\n\n  private getRelevantWallets(rawWallets): FlatWallet[] {\n    return rawWallets\n      .map(wallet => this.flattenWallet(wallet))\n      .filter(wallet => this.filterIrrelevantRecipients(wallet));\n  }\n\n  private updateContactsList(): void {\n    this.addressBookProvider.list().then(ab => {\n      this.hasContacts = _.isEmpty(ab) ? false : true;\n      if (!this.hasContacts) return;\n\n      let contactsList = [];\n      _.each(ab, (v, k: string) => {\n        contactsList.push({\n          name: _.isObject(v) ? v.name : v,\n          address: k,\n          network: this.addressProvider.validateAddress(k, v.coin).network,\n          email: _.isObject(v) ? v.email : null,\n          recipientType: 'contact',\n          coin: this.addressProvider.validateAddress(k, v.coin).coin,\n          getAddress: () => Promise.resolve(k)\n        });\n      });\n      this.contactsList = contactsList.filter(c =>\n        this.filterIrrelevantRecipients(c)\n      );\n      let shortContactsList = _.clone(\n        this.contactsList.slice(\n          0,\n          (this.currentContactsPage + 1) * this.CONTACTS_SHOW_LIMIT\n        )\n      );\n      this.filteredContactsList = _.clone(shortContactsList);\n      this.contactsShowMore =\n        this.contactsList.length > shortContactsList.length;\n    });\n  }\n\n  private flattenWallet(wallet): FlatWallet {\n    return {\n      color: wallet.color,\n      name: wallet.name,\n      recipientType: 'wallet',\n      coin: wallet.coin,\n      network: wallet.network,\n      m: wallet.credentials.m,\n      n: wallet.credentials.n,\n      isComplete: wallet.isComplete(),\n      needsBackup: wallet.needsBackup,\n      getAddress: () => this.walletProvider.getAddress(wallet, false)\n    };\n  }\n\n  private filterIrrelevantRecipients(recipient: {\n    coin: string;\n    network: string;\n  }): boolean {\n    return this.wallet\n      ? this.wallet.coin === recipient.coin &&\n          this.wallet.network === recipient.network\n      : true;\n  }\n\n  public shouldShowZeroState() {\n    return (\n      this.wallet && this.wallet.status && !this.wallet.status.totalBalanceSat\n    );\n  }\n\n  public async goToReceive() {\n    await this.walletTabsProvider.goToTabIndex(0);\n    const coinName = \n     this.wallet.coin === Coin.BTC \n      ? 'bitcoin' \n       : this.wallet.coin === Coin.SAFE \n        ? 'safecoin' \n         : this.wallet.coin === Coin.BTCZ \n          ? 'bitcoinz' \n           : this.wallet.coin === Coin.ZCL \n            ? 'zclassic' \n           : this.wallet.coin === Coin.ANON \n            ? 'anonymous' \n           : this.wallet.coin === Coin.ZEL \n            ? 'zelcash' \n             : this.wallet.coin === Coin.RVN \n              ? 'ravencoin' \n               : this.wallet.coin === Coin.LTC \n                ? 'litecoin' \n                 : 'bitcoin cash';\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'receiving-bitcoin',\n      { coinName }\n    );\n    await Observable.timer(250).toPromise();\n    infoSheet.present();\n  }\n\n  public showMore(): void {\n    this.currentContactsPage++;\n    this.updateContactsList();\n  }\n\n  public openScanner(): void {\n    this.scannerOpened = true;\n    this.walletTabsProvider.setSendParams({\n      amount: this.navParams.get('amount'),\n      coin: this.navParams.get('coin')\n    });\n    this.walletTabsProvider.setFromPage({ fromSend: true });\n    this.events.publish('ScanFromWallet');\n  }\n\n  private checkIfValidAddress(address): void {\n    const validAddress = this.addressProvider.checkCoinAndNetwork(\n      this.wallet.coin,\n      this.wallet.network,\n      address\n    );\n    if (validAddress) {\n      this.invalidAddress = false;\n      this.incomingDataProvider.redir(this.search, {\n        amount: this.navParams.get('amount'),\n        coin: this.navParams.get('coin')\n      });\n      this.search = '';\n    } else {\n      this.invalidAddress = true;\n      if (this.wallet.coin === 'bch') this.checkIfLegacy();\n    }\n  }\n\n  public processInput(): void {\n    if (this.search && this.search.trim() != '') {\n      this.searchWallets();\n      this.searchContacts();\n\n      if (\n        this.filteredContactsList.length === 0 &&\n        this.filteredWallets.length === 0\n      ) {\n        const validData = this.incomingDataProvider.parseData(this.search);\n        if (validData && validData.type == 'PayPro') {\n          this.incomingDataProvider\n            .getPayProDetails(this.search)\n            .then(payProDetails => {\n              this.checkIfValidAddress(payProDetails.toAddress);\n            })\n            .catch(err => {\n              this.logger.warn(err);\n            });\n        } else {\n          this.checkIfValidAddress(this.search);\n        }\n      } else {\n        this.invalidAddress = false;\n      }\n    } else {\n      this.updateContactsList();\n      this.filteredWallets = [];\n    }\n  }\n\n  private checkIfLegacy() {\n    let usingLegacyAddress =\n      this.incomingDataProvider.isValidBitcoinCashLegacyAddress(this.search) ||\n      this.incomingDataProvider.isValidBitcoinCashUriWithLegacyAddress(\n        this.search\n      );\n\n    if (usingLegacyAddress) {\n      let appName = this.appProvider.info.nameCase;\n      const infoSheet = this.actionSheetProvider.createInfoSheet(\n        'legacy-address-info',\n        { appName }\n      );\n      infoSheet.present();\n      infoSheet.onDidDismiss(option => {\n        if (option) {\n          let url = 'https://bitpay.github.io/address-translator/';\n          this.externalLinkProvider.open(url);\n        }\n        this.search = '';\n      });\n    }\n  }\n\n  public searchWallets(): void {\n    if (this.hasBchWallets && this.wallet.coin === 'bch') {\n      this.filteredWallets = this.walletBchList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasBtcWallets && this.wallet.coin === 'btc') {\n      this.filteredWallets = this.walletBtcList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasSafeWallets && this.wallet.coin === 'safe') {\n      this.filteredWallets = this.walletSafeList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasBtczWallets && this.wallet.coin === 'btcz') {\n      this.filteredWallets = this.walletBtczList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasZclWallets && this.wallet.coin === 'zcl') {\n      this.filteredWallets = this.walletZclList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasAnonWallets && this.wallet.coin === 'anon') {\n      this.filteredWallets = this.walletAnonList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasZelWallets && this.wallet.coin === 'zel') {\n      this.filteredWallets = this.walletZelList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasRvnWallets && this.wallet.coin === 'rvn') {\n      this.filteredWallets = this.walletRvnList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n    if (this.hasLtcWallets && this.wallet.coin === 'ltc') {\n      this.filteredWallets = this.walletLtcList.filter(wallet => {\n        return _.includes(wallet.name.toLowerCase(), this.search.toLowerCase());\n      });\n    }\n  }\n\n  public searchContacts(): void {\n    this.filteredContactsList = _.filter(this.contactsList, item => {\n      let val = item.name;\n      return _.includes(val.toLowerCase(), this.search.toLowerCase());\n    });\n  }\n\n  public goToAmount(item): void {\n    item\n      .getAddress()\n      .then((addr: string) => {\n        if (!addr) {\n          // Error is already formated\n          this.popupProvider.ionicAlert('Error - no address');\n          return;\n        }\n        this.logger.debug('Got address:' + addr + ' | ' + item.name);\n        this.navCtrl.push(AmountPage, {\n          recipientType: item.recipientType,\n          amount: parseInt(this.navParams.data.amount, 10),\n          toAddress: addr,\n          name: item.name,\n          email: item.email,\n          color: item.color,\n          coin: item.coin,\n          network: item.network\n        });\n      })\n      .catch(err => {\n        this.logger.error('Send: could not getAddress', err);\n      });\n  }\n\n  public closeCam(): void {\n    if (this.scannerOpened) this.events.publish('ExitScan');\n    else this.getParentTabs().dismiss();\n    this.scannerOpened = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/send/send.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\n/* Modules */\nimport { TranslatePoHttpLoader } from '@biesbjerg/ngx-translate-po-http-loader';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\nimport { MomentModule } from 'angular2-moment';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\n\n/* Copay App */\nimport env from '../environments';\nimport { CopayApp } from './app.component';\n\nimport { PAGES } from './../pages/pages';\n\n/* Pipes */\nimport { FiatToUnitPipe } from '../pipes/fiatToUnit';\nimport { KeysPipe } from '../pipes/keys';\nimport { OrderByPipe } from '../pipes/order-by';\nimport { SatToFiatPipe } from '../pipes/satToFiat';\nimport { SatToUnitPipe } from '../pipes/satToUnit';\n\n/* Directives */\nimport { Animate } from '../directives/animate/animate';\nimport { CopyToClipboard } from '../directives/copy-to-clipboard/copy-to-clipboard';\nimport { IosScrollBgColor } from '../directives/ios-scroll-bg-color/ios-scroll-bg-color';\nimport { LongPress } from '../directives/long-press/long-press';\nimport { NavbarBg } from '../directives/navbar-bg/navbar-bg';\nimport { NoLowFee } from '../directives/no-low-fee/no-low-fee';\nimport { RevealAtScrollPosition } from '../directives/reveal-at-scroll-pos/reveal-at-scroll-pos';\n\n/* Components */\nimport { COMPONENTS } from './../components/components';\n\n/* Providers */\nimport { ProvidersModule } from './../providers/providers.module';\n\n/* Read translation files */\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslatePoHttpLoader(http, 'assets/i18n/po', '.po');\n}\n\n@NgModule({\n  declarations: [\n    CopayApp,\n    ...PAGES,\n    ...COMPONENTS,\n    /* Directives */\n    CopyToClipboard,\n    IosScrollBgColor,\n    LongPress,\n    NavbarBg,\n    NoLowFee,\n    Animate,\n    RevealAtScrollPosition,\n    /* Pipes */\n    SatToUnitPipe,\n    SatToFiatPipe,\n    FiatToUnitPipe,\n    KeysPipe,\n    OrderByPipe\n  ],\n  imports: [\n    IonicModule.forRoot(CopayApp, {\n      animate: env.enableAnimations,\n      tabsHideOnSubPages: true,\n      tabsPlacement: 'bottom',\n      backButtonIcon: 'arrow-round-back',\n      backButtonText: ''\n    }),\n    BrowserModule,\n    HttpClientModule,\n    MomentModule,\n    NgxQRCodeModule,\n    ProvidersModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    ZXingScannerModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [CopayApp, ...PAGES, ...COMPONENTS],\n  providers: [\n    {\n      provide: ErrorHandler,\n      useClass: IonicErrorHandler\n    }\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./streams (ignored)\n// module id = 1037\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./extend-node (ignored)\n// module id = 1038\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1040;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/encoding/lib\n// module id = 1040\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1041\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1043\n// module chunks = 0","var map = {\n\t\"./af\": 656,\n\t\"./af.js\": 656,\n\t\"./ar\": 657,\n\t\"./ar-dz\": 658,\n\t\"./ar-dz.js\": 658,\n\t\"./ar-kw\": 659,\n\t\"./ar-kw.js\": 659,\n\t\"./ar-ly\": 660,\n\t\"./ar-ly.js\": 660,\n\t\"./ar-ma\": 661,\n\t\"./ar-ma.js\": 661,\n\t\"./ar-sa\": 662,\n\t\"./ar-sa.js\": 662,\n\t\"./ar-tn\": 663,\n\t\"./ar-tn.js\": 663,\n\t\"./ar.js\": 657,\n\t\"./az\": 664,\n\t\"./az.js\": 664,\n\t\"./be\": 665,\n\t\"./be.js\": 665,\n\t\"./bg\": 666,\n\t\"./bg.js\": 666,\n\t\"./bm\": 667,\n\t\"./bm.js\": 667,\n\t\"./bn\": 668,\n\t\"./bn.js\": 668,\n\t\"./bo\": 669,\n\t\"./bo.js\": 669,\n\t\"./br\": 670,\n\t\"./br.js\": 670,\n\t\"./bs\": 671,\n\t\"./bs.js\": 671,\n\t\"./ca\": 672,\n\t\"./ca.js\": 672,\n\t\"./cs\": 673,\n\t\"./cs.js\": 673,\n\t\"./cv\": 674,\n\t\"./cv.js\": 674,\n\t\"./cy\": 675,\n\t\"./cy.js\": 675,\n\t\"./da\": 676,\n\t\"./da.js\": 676,\n\t\"./de\": 677,\n\t\"./de-at\": 678,\n\t\"./de-at.js\": 678,\n\t\"./de-ch\": 679,\n\t\"./de-ch.js\": 679,\n\t\"./de.js\": 677,\n\t\"./dv\": 680,\n\t\"./dv.js\": 680,\n\t\"./el\": 681,\n\t\"./el.js\": 681,\n\t\"./en-au\": 682,\n\t\"./en-au.js\": 682,\n\t\"./en-ca\": 683,\n\t\"./en-ca.js\": 683,\n\t\"./en-gb\": 684,\n\t\"./en-gb.js\": 684,\n\t\"./en-ie\": 685,\n\t\"./en-ie.js\": 685,\n\t\"./en-il\": 686,\n\t\"./en-il.js\": 686,\n\t\"./en-nz\": 687,\n\t\"./en-nz.js\": 687,\n\t\"./eo\": 688,\n\t\"./eo.js\": 688,\n\t\"./es\": 689,\n\t\"./es-do\": 690,\n\t\"./es-do.js\": 690,\n\t\"./es-us\": 691,\n\t\"./es-us.js\": 691,\n\t\"./es.js\": 689,\n\t\"./et\": 692,\n\t\"./et.js\": 692,\n\t\"./eu\": 693,\n\t\"./eu.js\": 693,\n\t\"./fa\": 694,\n\t\"./fa.js\": 694,\n\t\"./fi\": 695,\n\t\"./fi.js\": 695,\n\t\"./fo\": 696,\n\t\"./fo.js\": 696,\n\t\"./fr\": 697,\n\t\"./fr-ca\": 698,\n\t\"./fr-ca.js\": 698,\n\t\"./fr-ch\": 699,\n\t\"./fr-ch.js\": 699,\n\t\"./fr.js\": 697,\n\t\"./fy\": 700,\n\t\"./fy.js\": 700,\n\t\"./gd\": 701,\n\t\"./gd.js\": 701,\n\t\"./gl\": 702,\n\t\"./gl.js\": 702,\n\t\"./gom-latn\": 703,\n\t\"./gom-latn.js\": 703,\n\t\"./gu\": 704,\n\t\"./gu.js\": 704,\n\t\"./he\": 705,\n\t\"./he.js\": 705,\n\t\"./hi\": 706,\n\t\"./hi.js\": 706,\n\t\"./hr\": 707,\n\t\"./hr.js\": 707,\n\t\"./hu\": 708,\n\t\"./hu.js\": 708,\n\t\"./hy-am\": 709,\n\t\"./hy-am.js\": 709,\n\t\"./id\": 710,\n\t\"./id.js\": 710,\n\t\"./is\": 711,\n\t\"./is.js\": 711,\n\t\"./it\": 712,\n\t\"./it.js\": 712,\n\t\"./ja\": 713,\n\t\"./ja.js\": 713,\n\t\"./jv\": 714,\n\t\"./jv.js\": 714,\n\t\"./ka\": 715,\n\t\"./ka.js\": 715,\n\t\"./kk\": 716,\n\t\"./kk.js\": 716,\n\t\"./km\": 717,\n\t\"./km.js\": 717,\n\t\"./kn\": 718,\n\t\"./kn.js\": 718,\n\t\"./ko\": 719,\n\t\"./ko.js\": 719,\n\t\"./ky\": 720,\n\t\"./ky.js\": 720,\n\t\"./lb\": 721,\n\t\"./lb.js\": 721,\n\t\"./lo\": 722,\n\t\"./lo.js\": 722,\n\t\"./lt\": 723,\n\t\"./lt.js\": 723,\n\t\"./lv\": 724,\n\t\"./lv.js\": 724,\n\t\"./me\": 725,\n\t\"./me.js\": 725,\n\t\"./mi\": 726,\n\t\"./mi.js\": 726,\n\t\"./mk\": 727,\n\t\"./mk.js\": 727,\n\t\"./ml\": 728,\n\t\"./ml.js\": 728,\n\t\"./mn\": 729,\n\t\"./mn.js\": 729,\n\t\"./mr\": 730,\n\t\"./mr.js\": 730,\n\t\"./ms\": 731,\n\t\"./ms-my\": 732,\n\t\"./ms-my.js\": 732,\n\t\"./ms.js\": 731,\n\t\"./mt\": 733,\n\t\"./mt.js\": 733,\n\t\"./my\": 734,\n\t\"./my.js\": 734,\n\t\"./nb\": 735,\n\t\"./nb.js\": 735,\n\t\"./ne\": 736,\n\t\"./ne.js\": 736,\n\t\"./nl\": 737,\n\t\"./nl-be\": 738,\n\t\"./nl-be.js\": 738,\n\t\"./nl.js\": 737,\n\t\"./nn\": 739,\n\t\"./nn.js\": 739,\n\t\"./pa-in\": 740,\n\t\"./pa-in.js\": 740,\n\t\"./pl\": 741,\n\t\"./pl.js\": 741,\n\t\"./pt\": 742,\n\t\"./pt-br\": 743,\n\t\"./pt-br.js\": 743,\n\t\"./pt.js\": 742,\n\t\"./ro\": 744,\n\t\"./ro.js\": 744,\n\t\"./ru\": 745,\n\t\"./ru.js\": 745,\n\t\"./sd\": 746,\n\t\"./sd.js\": 746,\n\t\"./se\": 747,\n\t\"./se.js\": 747,\n\t\"./si\": 748,\n\t\"./si.js\": 748,\n\t\"./sk\": 749,\n\t\"./sk.js\": 749,\n\t\"./sl\": 750,\n\t\"./sl.js\": 750,\n\t\"./sq\": 751,\n\t\"./sq.js\": 751,\n\t\"./sr\": 752,\n\t\"./sr-cyrl\": 753,\n\t\"./sr-cyrl.js\": 753,\n\t\"./sr.js\": 752,\n\t\"./ss\": 754,\n\t\"./ss.js\": 754,\n\t\"./sv\": 755,\n\t\"./sv.js\": 755,\n\t\"./sw\": 756,\n\t\"./sw.js\": 756,\n\t\"./ta\": 757,\n\t\"./ta.js\": 757,\n\t\"./te\": 758,\n\t\"./te.js\": 758,\n\t\"./tet\": 759,\n\t\"./tet.js\": 759,\n\t\"./tg\": 760,\n\t\"./tg.js\": 760,\n\t\"./th\": 761,\n\t\"./th.js\": 761,\n\t\"./tl-ph\": 762,\n\t\"./tl-ph.js\": 762,\n\t\"./tlh\": 763,\n\t\"./tlh.js\": 763,\n\t\"./tr\": 764,\n\t\"./tr.js\": 764,\n\t\"./tzl\": 765,\n\t\"./tzl.js\": 765,\n\t\"./tzm\": 766,\n\t\"./tzm-latn\": 767,\n\t\"./tzm-latn.js\": 767,\n\t\"./tzm.js\": 766,\n\t\"./ug-cn\": 768,\n\t\"./ug-cn.js\": 768,\n\t\"./uk\": 769,\n\t\"./uk.js\": 769,\n\t\"./ur\": 770,\n\t\"./ur.js\": 770,\n\t\"./uz\": 771,\n\t\"./uz-latn\": 772,\n\t\"./uz-latn.js\": 772,\n\t\"./uz.js\": 771,\n\t\"./vi\": 773,\n\t\"./vi.js\": 773,\n\t\"./x-pseudo\": 774,\n\t\"./x-pseudo.js\": 774,\n\t\"./yo\": 775,\n\t\"./yo.js\": 775,\n\t\"./zh-cn\": 776,\n\t\"./zh-cn.js\": 776,\n\t\"./zh-hk\": 777,\n\t\"./zh-hk.js\": 777,\n\t\"./zh-tw\": 778,\n\t\"./zh-tw.js\": 778\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1371;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 1371\n// module chunks = 0","import { Component, Renderer, ViewChild } from '@angular/core';\nimport { Device } from '@ionic-native/device';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { UserAgent } from '@ionic-native/user-agent';\nimport {\n  Config,\n  Events,\n  ModalController,\n  NavController,\n  Platform\n} from 'ionic-angular';\nimport { Observable, Subscription } from 'rxjs';\n\n// providers\n// import { AmazonProvider } from '../providers/amazon/amazon';\nimport { AppProvider } from '../providers/app/app';\n// import { BitPayCardProvider } from '../providers/bitpay-card/bitpay-card';\n// import { CoinbaseProvider } from '../providers/coinbase/coinbase';\nimport { ConfigProvider } from '../providers/config/config';\nimport { EmailNotificationsProvider } from '../providers/email-notifications/email-notifications';\n// import { GlideraProvider } from '../providers/glidera/glidera';\nimport { IncomingDataProvider } from '../providers/incoming-data/incoming-data';\nimport { Logger } from '../providers/logger/logger';\n// import { MercadoLibreProvider } from '../providers/mercado-libre/mercado-libre';\nimport { PopupProvider } from '../providers/popup/popup';\nimport { ProfileProvider } from '../providers/profile/profile';\nimport { PushNotificationsProvider } from '../providers/push-notifications/push-notifications';\n// import { ShapeshiftProvider } from '../providers/shapeshift/shapeshift';\nimport { TouchIdProvider } from '../providers/touchid/touchid';\n\n// pages\nimport { CopayersPage } from '../pages/add/copayers/copayers';\nimport { ImportWalletPage } from '../pages/add/import-wallet/import-wallet';\nimport { JoinWalletPage } from '../pages/add/join-wallet/join-wallet';\nimport { FingerprintModalPage } from '../pages/fingerprint/fingerprint';\n// import { BitPayCardIntroPage } from '../pages/integrations/bitpay-card/bitpay-card-intro/bitpay-card-intro';\n// import { CoinbasePage } from '../pages/integrations/coinbase/coinbase';\n// import { GlideraPage } from '../pages/integrations/glidera/glidera';\nimport { DisclaimerPage } from '../pages/onboarding/disclaimer/disclaimer';\nimport { OnboardingPage } from '../pages/onboarding/onboarding';\nimport { PaperWalletPage } from '../pages/paper-wallet/paper-wallet';\nimport { PinModalPage } from '../pages/pin/pin-modal/pin-modal';\nimport { AmountPage } from '../pages/send/amount/amount';\nimport { ConfirmPage } from '../pages/send/confirm/confirm';\nimport { AddressbookAddPage } from '../pages/settings/addressbook/add/add';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { WalletDetailsPage } from '../pages/wallet-details/wallet-details';\nimport { WalletTabsPage } from '../pages/wallet-tabs/wallet-tabs';\nimport { WalletTabsProvider } from '../pages/wallet-tabs/wallet-tabs.provider';\n\n// As the handleOpenURL handler kicks in before the App is started,\n// declare the handler function at the top of app.component.ts (outside the class definition)\n// to track the passed Url\n(window as any).handleOpenURL = (url: string) => {\n  (window as any).handleOpenURL_LastURL = url;\n};\n\n@Component({\n  templateUrl: 'app.html',\n  providers: [TouchIdProvider]\n})\nexport class CopayApp {\n  @ViewChild('appNav')\n  nav: NavController;\n\n  public rootPage:\n    | typeof AmountPage\n    | typeof DisclaimerPage\n    | typeof TabsPage\n    | typeof OnboardingPage;\n  private onResumeSubscription: Subscription;\n  private isLockModalOpen: boolean;\n  private isWalletModalOpen: boolean;\n  private walletModal: any;\n\n  private pageMap = {\n    AddressbookAddPage,\n    AmountPage,\n//    BitPayCardIntroPage,\n//    CoinbasePage,\n    ConfirmPage,\n    CopayersPage,\n//    GlideraPage,\n    ImportWalletPage,\n    JoinWalletPage,\n    PaperWalletPage,\n    WalletDetailsPage\n  };\n\n  constructor(\n    private config: Config,\n    private platform: Platform,\n    private statusBar: StatusBar,\n    private splashScreen: SplashScreen,\n    private events: Events,\n    private logger: Logger,\n    private appProvider: AppProvider,\n    private profile: ProfileProvider,\n    private configProvider: ConfigProvider,\n    private modalCtrl: ModalController,\n//    private glideraProvider: GlideraProvider,\n//    private coinbaseProvider: CoinbaseProvider,\n//    private amazonProvider: AmazonProvider,\n//    private bitPayCardProvider: BitPayCardProvider,\n//    private mercadoLibreProvider: MercadoLibreProvider,\n//    private shapeshiftProvider: ShapeshiftProvider,\n    private emailNotificationsProvider: EmailNotificationsProvider,\n    private screenOrientation: ScreenOrientation,\n    private popupProvider: PopupProvider,\n    private pushNotificationsProvider: PushNotificationsProvider,\n    private incomingDataProvider: IncomingDataProvider,\n    private walletTabsProvider: WalletTabsProvider,\n    private renderer: Renderer,\n    private userAgent: UserAgent,\n    private device: Device\n  ) {\n    this.initializeApp();\n  }\n\n  ngOnDestroy() {\n    this.onResumeSubscription.unsubscribe();\n  }\n\n  initializeApp() {\n    this.config.set('backButtonIcon', 'tab-button-back');\n    this.platform\n      .ready()\n      .then(readySource => {\n        this.onPlatformReady(readySource);\n      })\n      .catch(e => {\n        this.logger.error('Platform is not ready.', e);\n      });\n  }\n\n  private onPlatformReady(readySource): void {\n    this.appProvider\n      .load()\n      .then(() => {\n        this.onAppLoad(readySource);\n      })\n      .catch(err => {\n        let title = 'Could not initialize the app';\n        let message = JSON.stringify(err);\n        this.popupProvider.ionicAlert(title, message);\n      });\n  }\n\n  private onAppLoad(readySource) {\n    this.logger.info(\n      'Platform ready (' +\n        readySource +\n        '): ' +\n        this.appProvider.info.nameCase +\n        ' - v' +\n        this.appProvider.info.version +\n        ' #' +\n        this.appProvider.info.commitHash\n    );\n\n    if (this.platform.is('cordova')) {\n      this.statusBar.show();\n\n      // Set User-Agent\n      this.userAgent.set(\n        this.appProvider.info.name +\n          ' ' +\n          this.appProvider.info.version +\n          ' (' +\n          this.device.platform +\n          ' ' +\n          this.device.version +\n          ' - ' +\n          this.device.model +\n          ')'\n      );\n\n      // Set to portrait\n      this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT);\n\n      // Only overlay for iOS\n      if (this.platform.is('ios')) this.statusBar.overlaysWebView(true);\n\n      this.statusBar.styleLightContent();\n      this.splashScreen.hide();\n\n      // Subscribe Resume\n      this.onResumeSubscription = this.platform.resume.subscribe(() => {\n        // Check PIN or Fingerprint on Resume\n        this.openLockModal();\n      });\n\n      // Check PIN or Fingerprint\n      this.openLockModal();\n    }\n\n//    this.registerIntegrations();\n    this.incomingDataRedirEvent();\n    this.scanFromWalletEvent();\n    this.events.subscribe('OpenWallet', wallet => this.openWallet(wallet));\n    // Check Profile\n    this.profile\n      .loadAndBindProfile()\n      .then(profile => {\n        this.onProfileLoad(profile);\n      })\n      .catch((err: Error) => {\n        this.logger.warn('LoadAndBindProfile', err.message);\n        this.rootPage =\n          err.message == 'ONBOARDINGNONCOMPLETED: Onboarding non completed'\n            ? OnboardingPage\n            : DisclaimerPage;\n      });\n  }\n\n  private onProfileLoad(profile) {\n    this.emailNotificationsProvider.init(); // Update email subscription if necessary\n    this.initPushNotifications();\n\n    if (profile) {\n      this.logger.info('Profile exists.');\n\n      this.rootPage = TabsPage;\n\n      if (this.platform.is('cordova')) {\n        this.handleDeepLinks();\n      }\n\n      if (this.isNodeWebkit()) {\n        this.handleDeepLinksNW();\n      }\n    } else {\n      this.logger.info('No profile exists.');\n      this.profile.createProfile();\n      this.rootPage = OnboardingPage;\n    }\n  }\n\n  private openLockModal(): void {\n    if (this.isLockModalOpen) return;\n    let config = this.configProvider.get();\n    let lockMethod =\n      config && config.lock && config.lock.method\n        ? config.lock.method.toLowerCase()\n        : null;\n    if (!lockMethod) return;\n    if (lockMethod == 'pin') this.openPINModal('checkPin');\n    if (lockMethod == 'fingerprint') this.openFingerprintModal();\n  }\n\n  private openPINModal(action): void {\n    this.isLockModalOpen = true;\n    const modal = this.modalCtrl.create(\n      PinModalPage,\n      { action },\n      { cssClass: 'fullscreen-modal' }\n    );\n    modal.present({ animate: false });\n    modal.onDidDismiss(() => {\n      this.isLockModalOpen = false;\n    });\n  }\n\n  private openFingerprintModal(): void {\n    this.isLockModalOpen = true;\n    const modal = this.modalCtrl.create(\n      FingerprintModalPage,\n      {},\n      { cssClass: 'fullscreen-modal' }\n    );\n    modal.present({ animate: false });\n    modal.onDidDismiss(() => {\n      this.isLockModalOpen = false;\n    });\n  }\n\n/*  private registerIntegrations(): void {\n    // Mercado Libre\n    if (this.appProvider.info._enabledExtensions.mercadolibre)\n      this.mercadoLibreProvider.register();\n\n    // Amazon Gift Cards\n    if (this.appProvider.info._enabledExtensions.amazon)\n      this.amazonProvider.register();\n\n    // ShapeShift\n    if (this.appProvider.info._enabledExtensions.shapeshift)\n      this.shapeshiftProvider.register();\n\n    // Glidera\n    if (this.appProvider.info._enabledExtensions.glidera) {\n      this.glideraProvider.setCredentials();\n      this.glideraProvider.register();\n    }\n\n    // Coinbase\n    if (this.appProvider.info._enabledExtensions.coinbase) {\n      this.coinbaseProvider.setCredentials();\n      this.coinbaseProvider.register();\n    }\n\n    // BitPay Card\n    if (this.appProvider.info._enabledExtensions.debitcard)\n      this.bitPayCardProvider.register();\n  }\n   */\n  private incomingDataRedirEvent(): void {\n    this.events.subscribe('IncomingDataRedir', nextView => {\n      this.closeScannerFromWithinWallet();\n      this.getSelectedTabNav().push(\n        this.pageMap[nextView.name],\n        nextView.params\n      );\n    });\n  }\n\n  private openWallet(wallet) {\n    // check if modal is already open\n    if (this.isWalletModalOpen) {\n      this.walletModal.dismiss();\n    }\n    const page = wallet.isComplete() ? WalletTabsPage : CopayersPage;\n    this.isWalletModalOpen = true;\n    this.walletModal = this.modalCtrl.create(\n      page,\n      {\n        walletId: wallet.credentials.walletId\n      },\n      {\n        cssClass: 'wallet-details-modal'\n      }\n    );\n    this.walletModal.present();\n    this.walletModal.onDidDismiss(() => {\n      this.isWalletModalOpen = false;\n    });\n  }\n\n  private scanFromWalletEvent(): void {\n    this.events.subscribe('ScanFromWallet', async () => {\n      await this.getGlobalTabs().select(1);\n      await this.toggleScannerVisibilityFromWithinWallet(true, 300);\n    });\n    this.events.subscribe('ExitScan', async () => {\n      this.closeScannerFromWithinWallet();\n    });\n  }\n\n  private async closeScannerFromWithinWallet() {\n    if (!this.getWalletDetailsModal()) {\n      return;\n    }\n    await this.toggleScannerVisibilityFromWithinWallet(false, 300);\n    await this.getGlobalTabs().select(0);\n  }\n\n  private toggleScannerVisibilityFromWithinWallet(\n    visible: boolean,\n    transitionDuration: number\n  ): Promise<number> {\n    const walletDetailsModal = this.getWalletDetailsModal();\n    this.renderer.setElementClass(walletDetailsModal, 'scanning', visible);\n    return Observable.timer(transitionDuration).toPromise();\n  }\n\n  private getWalletDetailsModal(): Element {\n    return document.getElementsByClassName('wallet-details-modal')[0];\n  }\n\n  private initPushNotifications() {\n    this.pushNotificationsProvider.init();\n  }\n\n  private handleDeepLinks() {\n    // Check if app was resume by custom url scheme\n    (window as any).handleOpenURL = (url: string) => {\n      this.logger.info('App was resumed by custom url scheme');\n      this.handleOpenUrl(url);\n    };\n\n    // Check if app was opened by custom url scheme\n    const lastUrl: string = (window as any).handleOpenURL_LastURL || '';\n    if (lastUrl && lastUrl !== '') {\n      delete (window as any).handleOpenURL_LastURL;\n      setTimeout(() => {\n        this.logger.info('App was opened by custom url scheme');\n        this.handleOpenUrl(lastUrl);\n      }, 0);\n    }\n  }\n\n  private handleOpenUrl(url: string) {\n    if (!this.incomingDataProvider.redir(url)) {\n      this.logger.warn('Unknown URL! : ' + url);\n    }\n  }\n\n  private handleDeepLinksNW() {\n    var gui = (window as any).require('nw.gui');\n\n    // This event is sent to an existent instance of Copay (only for standalone apps)\n    gui.App.on('open', this.onOpenNW.bind(this));\n\n    // Used at the startup of Copay\n    var argv = gui.App.argv;\n    if (argv && argv[0] && !(window as any)._urlHandled) {\n      (window as any)._urlHandled = true;\n      this.handleOpenUrl(argv[0]);\n    }\n  }\n\n  private onOpenNW(pathData) {\n    if (pathData.indexOf('bitcoincash:/') != -1) {\n      this.logger.debug('Bitcoin Cash URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('bitcoincash:/')));\n    } else if (pathData.indexOf('bitcoin:/') != -1) {\n      this.logger.debug('Bitcoin URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('bitcoin:/')));\n    } else if (pathData.indexOf('safecoin:/') != -1) {\n      this.logger.debug('Safecoin URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('safecoin:/')));\n    } else if (pathData.indexOf('bitcoinz:/') != -1) {\n      this.logger.debug('Bitcoinz URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('bitcoinz:/')));\n    } else if (pathData.indexOf('zclassic:/') != -1) {\n      this.logger.debug('Zclassic URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('zclassic:/')));\n    } else if (pathData.indexOf('anonymous:/') != -1) {\n      this.logger.debug('Anonymous URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('anonymous:/')));\n    } else if (pathData.indexOf('zelcash:/') != -1) {\n      this.logger.debug('Zelcash URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('zelcash:/')));\n    } else if (pathData.indexOf('ravencoin:/') != -1) {\n      this.logger.debug('Ravencoin URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('ravencoin:/')));\n    } else if (pathData.indexOf('litecoin:/') != -1) {\n      this.logger.debug('Litecoin URL found');\n      this.handleOpenUrl(pathData.substring(pathData.indexOf('litecoin:/')));\n    } else if (pathData.indexOf(this.appProvider.info.name + '://') != -1) {\n      this.logger.debug(this.appProvider.info.name + ' URL found');\n      this.handleOpenUrl(\n        pathData.substring(pathData.indexOf(this.appProvider.info.name + '://'))\n      );\n    } else {\n      this.logger.debug('URL found');\n      this.handleOpenUrl(pathData);\n    }\n  }\n\n  private isNodeWebkit(): boolean {\n    let isNode =\n      typeof process !== 'undefined' && typeof require !== 'undefined';\n    if (isNode) {\n      try {\n        return typeof (window as any).require('nw.gui') !== 'undefined';\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  private getSelectedTabNav() {\n    const globalNav = this.getGlobalTabs().getSelected();\n    const walletTabs = this.walletTabsProvider.getTabNav();\n    return (walletTabs && walletTabs.getSelected()) || globalNav;\n  }\n\n  private getGlobalTabs() {\n    return this.nav.getActiveChildNavs()[0].viewCtrl.instance.tabs;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { DirectoryEntry, File, FileSystem } from '@ionic-native/file';\nimport * as _ from 'lodash';\nimport { Logger } from '../../../providers/logger/logger';\nimport { IStorage, KeyAlreadyExistsError } from './istorage';\n\n@Injectable()\nexport class FileStorage implements IStorage {\n  fs: FileSystem;\n  dir: DirectoryEntry;\n\n  constructor(private file: File, private log: Logger) {}\n\n  init(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (this.fs && this.dir) return resolve();\n\n      let onSuccess = (fs: FileSystem): Promise<any> => {\n        this.log.debug('File system started: ', fs.name, fs.root.name);\n        this.fs = fs;\n        return this.getDir().then(dir => {\n          if (!dir.nativeURL) return reject();\n          this.dir = dir;\n          this.log.debug('Got main dir:', dir.nativeURL);\n          return resolve();\n        });\n      };\n\n      let onFailure = (err: Error): Promise<any> => {\n        this.log.error('Could not init file system: ' + err.message);\n        return Promise.reject(err);\n      };\n\n      (window as any).requestFileSystem(1, 0, onSuccess, onFailure);\n    });\n  }\n\n  // See https://github.com/apache/cordova-plugin-file/#where-to-store-files\n  getDir(): Promise<DirectoryEntry> {\n    if (!this.file) {\n      return Promise.reject(new Error('Could not write on device storage'));\n    }\n\n    var url = this.file.dataDirectory;\n    return this.file.resolveDirectoryUrl(url).catch(err => {\n      let msg = 'Could not resolve filesystem ' + url;\n      this.log.warn(msg, err);\n      throw err || new Error(msg);\n    });\n  }\n\n  parseResult(v) {\n    if (!v) return null;\n    if (!_.isString(v)) return v;\n    let parsed;\n    try {\n      parsed = JSON.parse(v);\n    } catch (e) {\n      // TODO parse is not necessary\n    }\n    return parsed || v;\n  }\n\n  readFileEntry(fileEntry): Promise<any> {\n    return new Promise((resolve, reject) => {\n      fileEntry.file(file => {\n        var reader = new FileReader();\n\n        reader.onerror = () => {\n          reader.abort();\n          return reject();\n        };\n\n        reader.onloadend = () => {\n          return resolve(this.parseResult(reader.result));\n        };\n\n        reader.readAsText(file);\n      });\n    });\n  }\n\n  get(k: string): Promise<any> {\n    return new Promise(resolve => {\n      this.init()\n        .then(() => {\n          this.file\n            .getFile(this.dir, k, { create: false })\n            .then(fileEntry => {\n              if (!fileEntry) return resolve();\n\n              this.readFileEntry(fileEntry)\n                .then(result => {\n                  return resolve(result);\n                })\n                .catch(() => {\n                  this.log.error('Problem parsing input file.');\n                });\n            })\n            .catch(err => {\n              // Not found\n              if (err.code == 1) return resolve();\n              else throw err;\n            });\n        })\n        .catch(err => {\n          this.log.error(err);\n        });\n    });\n  }\n\n  set(k: string, v): Promise<void> {\n    return Promise.resolve(\n      this.init().then(() => {\n        this.file.getFile(this.dir, k, { create: true }).then(fileEntry => {\n          // Create a FileWriter object for our FileEntry (log.txt).\n          return new Promise((resolve, reject) => {\n            fileEntry.createWriter(fileWriter => {\n              fileWriter.onwriteend = () => {\n                this.log.info('Write completed:' + k);\n                return resolve();\n              };\n\n              fileWriter.onerror = e => {\n                this.log.error('Write failed', e);\n                return reject();\n              };\n\n              if (_.isObject(v)) v = JSON.stringify(v);\n              if (!_.isString(v)) v = v.toString();\n              fileWriter.write(v);\n            });\n          });\n        });\n      })\n    );\n  }\n\n  remove(k: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.file\n        .removeFile(this.dir.nativeURL, k)\n        .then(() => {\n          this.log.debug('File removed: ' + k);\n          resolve();\n        })\n        .catch(e => {\n          this.log.error('Error removing file', e);\n          reject(e);\n        });\n    });\n  }\n\n  create(k: string, v): Promise<void> {\n    return this.get(k).then(data => {\n      if (data) throw new KeyAlreadyExistsError();\n      this.set(k, v);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/persistence/storage/file-storage.ts","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { IStorage, KeyAlreadyExistsError } from './istorage';\n\n// providers\nimport { Logger } from '../../logger/logger';\nimport { PlatformProvider } from '../../platform/platform';\n\n@Injectable()\nexport class LocalStorage implements IStorage {\n  ls;\n\n  constructor(\n    private platformProvider: PlatformProvider,\n    private logger: Logger\n  ) {\n    this.ls =\n      typeof window.localStorage !== 'undefined' ? window.localStorage : null;\n    if (!this.ls) throw new Error('localstorage not available');\n\n    if (this.platformProvider.isNW) {\n      this.logger.info(\n        'Overwritting localstorage with chrome storage for NW.JS'\n      );\n\n      let ts = this.ls.getItem('migrationToChromeStorage');\n      let p = this.ls.getItem('profile');\n\n      // Need migration?\n      if (!ts && p) {\n        this.logger.info('### MIGRATING DATA! TO CHROME STORAGE');\n\n        let j = 0;\n        for (let i = 0; i < localStorage.length; i++) {\n          let k = this.ls.key(i);\n          let v = this.ls.getItem(k);\n\n          this.logger.debug('   Key: ' + k);\n          this.set(k, v).then(() => {\n            j++;\n            if (j == localStorage.length) {\n              this.logger.info('### MIGRATION DONE');\n              this.ls.setItem(\n                'migrationToChromeStorage',\n                Date.now().toString()\n              );\n              this.ls = chrome.storage.local;\n            }\n          });\n        }\n      } else if (p) {\n        this.logger.info('# Data already migrated to Chrome storage on ' + ts);\n      }\n    }\n  }\n\n  processingData(v) {\n    if (!v) return null;\n    if (!_.isString(v)) return v;\n    let parsed;\n    try {\n      parsed = JSON.parse(v);\n    } catch (e) {\n      // TODO parse is not necessary\n    }\n    return parsed || v;\n  }\n\n  get(k: string): Promise<any> {\n    return new Promise(resolve => {\n      if (this.platformProvider.isNW) {\n        chrome.storage.local.get(k, data => {\n          let v = data[k];\n          return resolve(this.processingData(v));\n        });\n      } else {\n        let v = this.ls.getItem(k);\n        return resolve(this.processingData(v));\n      }\n    });\n  }\n\n  set(k: string, v): Promise<void> {\n    return new Promise<void>(resolve => {\n      if (_.isObject(v)) v = JSON.stringify(v);\n      if (!_.isString(v)) v = v.toString();\n\n      if (this.platformProvider.isNW) {\n        let obj = {};\n\n        obj[k] = v;\n\n        chrome.storage.local.set(obj);\n      } else {\n        this.ls.setItem(k, v);\n      }\n      resolve();\n    });\n  }\n\n  remove(k: string): Promise<void> {\n    return new Promise<void>(resolve => {\n      if (this.platformProvider.isNW) {\n        chrome.storage.local.remove(k);\n      } else {\n        this.ls.removeItem(k);\n      }\n      resolve();\n    });\n  }\n\n  create(k: string, v): Promise<void> {\n    return this.get(k).then(data => {\n      if (data) throw new KeyAlreadyExistsError();\n      this.set(k, v);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/persistence/storage/local-storage.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 1400\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 1404\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/package.json\n// module id = 1486\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/crypto/ecdsa.js\n// module id = 1487\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/script/interpreter.js\n// module id = 1488\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/publickey.js\n// module id = 1489\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/publickeyhash.js\n// module id = 1490\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/multisig.js\n// module id = 1491\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/input/multisigscripthash.js\n// module id = 1492\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/transaction/jsdescription.js\n// module id = 1493\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/zcash/proof.js\n// module id = 1494\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin private URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a BIP21 'bitcoin:' URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'anonymous:') {\n    throw new TypeError('Invalid BIP21 ANON URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid anon address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a BTC string amount into satoshis\n *\n * @param {string} amount - Amount BTC string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromBTC(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin Private URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTC();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'anonymous:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin Private URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-anon/lib/uri.js\n// module id = 1495\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/package.json\n// module id = 1496\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/crypto/ecdsa.js\n// module id = 1497\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/script/interpreter.js\n// module id = 1498\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/publickey.js\n// module id = 1499\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/publickeyhash.js\n// module id = 1500\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/multisig.js\n// module id = 1501\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/input/multisigscripthash.js\n// module id = 1502\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/transaction/jsdescription.js\n// module id = 1503\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/zcash/proof.js\n// module id = 1504\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'bitcoinz:') {\n    throw new TypeError('Invalid bitcoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid bitcoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a BTCZ string amount into satoshis\n *\n * @param {string} amount - Amount BTCZ string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromBTCZ(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTCZ();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'bitcoinz:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-btcz/lib/uri.js\n// module id = 1505\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/package.json\n// module id = 1515\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/crypto/ecdsa.js\n// module id = 1516\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/script/interpreter.js\n// module id = 1517\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/publickey.js\n// module id = 1518\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/publickeyhash.js\n// module id = 1519\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/multisig.js\n// module id = 1520\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/input/multisigscripthash.js\n// module id = 1521\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/transaction/jsdescription.js\n// module id = 1522\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/zcash/proof.js\n// module id = 1523\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'litecoin:') {\n    throw new TypeError('Invalid litecoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid litecoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a BTC string amount into satoshis\n *\n * @param {string} amount - Amount BTC string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromBTC(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTC();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'litecoin:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-ltc/lib/uri.js\n// module id = 1524\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/package.json\n// module id = 1525\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/crypto/ecdsa.js\n// module id = 1526\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/script/interpreter.js\n// module id = 1527\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/publickey.js\n// module id = 1528\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/publickeyhash.js\n// module id = 1529\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/multisig.js\n// module id = 1530\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/input/multisigscripthash.js\n// module id = 1531\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/transaction/jsdescription.js\n// module id = 1532\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/zcash/proof.js\n// module id = 1533\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('ravencoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('ravencoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'ravencoin:') {\n    throw new TypeError('Invalid ravencoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid ravencoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a SAFE string amount into satoshis\n *\n * @param {string} amount - Amount SAFE string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromSAFE(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toSAFE();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'ravencoin:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-rvn/lib/uri.js\n// module id = 1534\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/package.json\n// module id = 1535\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/crypto/ecdsa.js\n// module id = 1536\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/script/interpreter.js\n// module id = 1537\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/publickey.js\n// module id = 1538\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/publickeyhash.js\n// module id = 1539\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/multisig.js\n// module id = 1540\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/input/multisigscripthash.js\n// module id = 1541\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/transaction/jsdescription.js\n// module id = 1542\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/zcash/proof.js\n// module id = 1543\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('safecoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('safecoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'safecoin:') {\n    throw new TypeError('Invalid bitcoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid bitcoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a SAFE string amount into satoshis\n *\n * @param {string} amount - Amount SAFE string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromSAFE(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toSAFE();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'safecoin:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-safe/lib/uri.js\n// module id = 1544\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/package.json\n// module id = 1545\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/crypto/ecdsa.js\n// module id = 1546\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/script/interpreter.js\n// module id = 1547\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/publickey.js\n// module id = 1548\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/publickeyhash.js\n// module id = 1549\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/multisig.js\n// module id = 1550\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/input/multisigscripthash.js\n// module id = 1551\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/transaction/jsdescription.js\n// module id = 1552\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/zcash/proof.js\n// module id = 1553\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'zclassic:') {\n    throw new TypeError('Invalid bitcoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid bitcoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a BTC string amount into satoshis\n *\n * @param {string} amount - Amount BTC string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromBTC(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTC();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'zclassic:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zcl/lib/uri.js\n// module id = 1554\n// module chunks = 0","module.exports = {\"_args\":[[\"bitcore-lib@0.15.0\",\"C:\\\\!wall\\\\bitcoinz-copay-wallet\"]],\"_from\":\"bitcore-lib@0.15.0\",\"_id\":\"bitcore-lib@0.15.0\",\"_inBundle\":false,\"_integrity\":\"sha512-AeXLWhiivF6CDFzrABZHT4jJrflyylDWTi32o30rF92HW9msfuKpjzrHtFKYGa9w0kNVv5HABQjCB3OEav4PhQ==\",\"_location\":\"/bitcore-lib\",\"_phantomChildren\":{\"base-x\":\"3.0.4\",\"brorand\":\"1.1.0\",\"hmac-drbg\":\"1.0.1\",\"minimalistic-assert\":\"1.0.1\",\"minimalistic-crypto-utils\":\"1.0.1\"},\"_requested\":{\"type\":\"version\",\"registry\":true,\"raw\":\"bitcore-lib@0.15.0\",\"name\":\"bitcore-lib\",\"escapedName\":\"bitcore-lib\",\"rawSpec\":\"0.15.0\",\"saveSpec\":null,\"fetchSpec\":\"0.15.0\"},\"_requiredBy\":[\"/bitcore-mnemonic\",\"/bitcore-payment-protocol\"],\"_resolved\":\"https://registry.npmjs.org/bitcore-lib/-/bitcore-lib-0.15.0.tgz\",\"_spec\":\"0.15.0\",\"_where\":\"C:\\\\!wall\\\\bitcoinz-copay-wallet\",\"author\":{\"name\":\"BitPay\",\"email\":\"dev@bitpay.com\"},\"browser\":{\"request\":\"browser-request\"},\"bugs\":{\"url\":\"https://github.com/bitpay/bitcore-lib/issues\"},\"dependencies\":{\"bn.js\":\"=4.11.8\",\"bs58\":\"=4.0.1\",\"buffer-compare\":\"=1.1.1\",\"elliptic\":\"=6.4.0\",\"bitcore-lib\":\"^0.15.0\",\"inherits\":\"=2.0.1\",\"lodash\":\"=4.17.4\"},\"description\":\"A pure and powerful JavaScript Bitcoin library.\",\"devDependencies\":{\"bitcore-build\":\"git+https://github.com/bitpay/bitcore-build.git#d4e8b2b2f1e2c065c3a807dcb6a6250f61d67ab3\",\"brfs\":\"^1.2.0\",\"chai\":\"^1.10.0\",\"gulp\":\"^3.8.10\",\"sinon\":\"^1.13.0\"},\"homepage\":\"https://github.com/bitpay/bitcore-lib#readme\",\"keywords\":[\"bitcoin\",\"transaction\",\"address\",\"p2p\",\"ecies\",\"cryptocurrency\",\"blockchain\",\"payment\",\"bip21\",\"bip32\",\"bip37\",\"bip69\",\"bip70\",\"multisig\"],\"license\":\"MIT\",\"main\":\"index.js\",\"name\":\"bitcore-lib\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/bitpay/bitcore-lib.git\"},\"scripts\":{\"build\":\"gulp\",\"coverage\":\"gulp coverage\",\"lint\":\"gulp lint\",\"test\":\"gulp test\"},\"version\":\"0.15.0\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/package.json\n// module id = 1555\n// module chunks = 0","'use strict';\n\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Point = BaseBitcore.crypto.Point;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Random = BaseBitcore.crypto.Random;\nvar Hash = BaseBitcore.crypto.Hash;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\n// var BN = require('./bn');\n// var Point = require('./point');\n// var Signature = require('./signature');\nvar PublicKey = require('../publickey');\n// var Random = require('./random');\n// var Hash = require('./hash');\n// var BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\n// var $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = new Buffer(32);\n  v.fill(0x01);\n  var k = new Buffer(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, new Buffer([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().mod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).mod(n);\n  var u2 = sinv.mul(r).mod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(new Buffer('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.mod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).mod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/crypto/ecdsa.js\n// module id = 1556\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BaseBitcore =require('bitcore-lib'); \n\nvar BN = BaseBitcore.crypto.BN;\nvar Hash = BaseBitcore.crypto.Hash;\nvar Signature = BaseBitcore.crypto.Signature;\n\n\n\n// var BN = require('../crypto/bn');\n// var Hash = require('../crypto/hash');\n// var Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags) {\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = new Buffer([1]);\nInterpreter.false = new Buffer([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP3:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n            buf = this.stack.pop();\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/script/interpreter.js\n// module id = 1557\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/publickey.js\n// module id = 1558\n// module chunks = 0","'use strict';\n\nvar inherits = require('inherits');\n\n// var $ = require('../../util/preconditions');\n// var BufferUtil = require('../../util/buffer');\nvar BaseBitcore =require('bitcore-lib'); \nvar Sighash = BaseBitcore.Transaction.sighash;\nvar Signature = BaseBitcore.crypto.Signature;\nvar BufferUtil = BaseBitcore.util.buffer;\nvar $ = BaseBitcore.util.preconditions;\n\nvar Hash = BaseBitcore.crypto.Hash;\n// var Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\n// var Sighash = require('../sighash');\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  if (BufferUtil.equals(hashData, this.output.script.getPublicKeyHash())) {\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(this.isValidSignature(transaction, signature), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyHashIn(\n    signature.publicKey,\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn();\n};\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/publickeyhash.js\n// module id = 1559\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\n// var $ = require('../../util/preconditions');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/multisig.js\n// module id = 1560\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar BaseBitcore =require('bitcore-lib'); \nvar $ = BaseBitcore.util.preconditions;\nvar Signature = BaseBitcore.crypto.Signature;\nvar Sighash = BaseBitcore.Transaction.sighash;\nvar BufferUtil = BaseBitcore.util.buffer;\n// var $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\n// var Signature = require('../../crypto/signature');\n// var Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\n// var BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/input/multisigscripthash.js\n// module id = 1561\n// module chunks = 0","'use strict';\r\n\r\nvar _ = require('lodash');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BN = BaseBitcore.crypto.BN;\r\nvar BufferReader = BaseBitcore.encoding.BufferReader;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\nvar JSUtil = BaseBitcore.util.js;\r\n\r\n// var $ = require('../util/preconditions');\r\n// var BN = require('../crypto/bn');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\n// var BufferUtil = require('../util/buffer');\r\n// var JSUtil = require('../util/js');\r\n\r\nvar ZCProof = require('../zcash/proof');\r\n\r\nvar ZC_NUM_JS_INPUTS = 2;\r\nvar ZC_NUM_JS_OUTPUTS = 2;\r\n\r\n// leading + v + rho + r + memo + auth\r\nvar ZC_NOTECIPHERTEXT_SIZE = 1 + 8 + 32 + 32 + 512 + 16;\r\n\r\nfunction JSDescription(params) {\r\n  if (!(this instanceof JSDescription)) {\r\n    return new JSDescription(params);\r\n  }\r\n  this.nullifiers = [];\r\n  this.commitments = [];\r\n  this.ciphertexts = [];\r\n  this.macs = [];\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_old', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_old;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_oldBN = num;\r\n      this._vpub_old = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_old = parseInt(num);\r\n      this._vpub_oldBN = BN.fromNumber(this._vpub_old);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_old is not a natural number'\r\n      );\r\n      this._vpub_oldBN = BN.fromNumber(num);\r\n      this._vpub_old = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_old),\r\n      'vpub_old is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nObject.defineProperty(JSDescription.prototype, 'vpub_new', {\r\n  configurable: false,\r\n  enumerable: true,\r\n  get: function() {\r\n    return this._vpub_new;\r\n  },\r\n  set: function(num) {\r\n    if (num instanceof BN) {\r\n      this._vpub_newBN = num;\r\n      this._vpub_new = num.toNumber();\r\n    } else if (_.isString(num)) {\r\n      this._vpub_new = parseInt(num);\r\n      this._vpub_newBN = BN.fromNumber(this._vpub_new);\r\n    } else {\r\n      $.checkArgument(\r\n        JSUtil.isNaturalNumber(num),\r\n        'vpub_new is not a natural number'\r\n      );\r\n      this._vpub_newBN = BN.fromNumber(num);\r\n      this._vpub_new = num;\r\n    }\r\n    $.checkState(\r\n      JSUtil.isNaturalNumber(this._vpub_new),\r\n      'vpub_new is not a natural number'\r\n    );\r\n  }\r\n});\r\n\r\nJSDescription.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var jsdesc = new JSDescription();\r\n  return jsdesc._fromObject(obj);\r\n};\r\n\r\nJSDescription.prototype._fromObject = function(params) {\r\n  var nullifiers = [];\r\n  _.each(params.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(new buffer.Buffer(nullifier, 'hex')));\r\n  });\r\n  var commitments = [];\r\n  _.each(params.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(new buffer.Buffer(commitment, 'hex')));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(params.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(new buffer.Buffer(ciphertext, 'hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(params.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(new buffer.Buffer(mac, 'hex')));\r\n  });\r\n  this.vpub_old = params.vpub_old;\r\n  this.vpub_new = params.vpub_new;\r\n  this.anchor = BufferUtil.reverse(new buffer.Buffer(params.anchor, 'hex'));\r\n  this.nullifiers = nullifiers;\r\n  this.commitments = commitments;\r\n  this.ephemeralKey = BufferUtil.reverse(new buffer.Buffer(params.ephemeralKey, 'hex'));\r\n  this.ciphertexts = ciphertexts;\r\n  this.randomSeed = BufferUtil.reverse(new buffer.Buffer(params.randomSeed, 'hex'));\r\n  this.macs = macs;\r\n  this.proof = ZCProof.fromObject(params.proof);\r\n  return this;\r\n};\r\n\r\nJSDescription.prototype.toObject = JSDescription.prototype.toJSON = function toObject() {\r\n  var nullifiers = [];\r\n  _.each(this.nullifiers, function(nullifier) {\r\n    nullifiers.push(BufferUtil.reverse(nullifier).toString('hex'));\r\n  });\r\n  var commitments = [];\r\n  _.each(this.commitments, function(commitment) {\r\n    commitments.push(BufferUtil.reverse(commitment).toString('hex'));\r\n  });\r\n  var ciphertexts = [];\r\n  _.each(this.ciphertexts, function(ciphertext) {\r\n    ciphertexts.push(ciphertext.toString('hex'));\r\n  });\r\n  var macs = [];\r\n  _.each(this.macs, function(mac) {\r\n    macs.push(BufferUtil.reverse(mac).toString('hex'));\r\n  });\r\n  var obj = {\r\n    vpub_old: this.vpub_old,\r\n    vpub_new: this.vpub_new,\r\n    anchor: BufferUtil.reverse(this.anchor).toString('hex'),\r\n    nullifiers: nullifiers,\r\n    commitments: commitments,\r\n    ephemeralKey: BufferUtil.reverse(this.ephemeralKey).toString('hex'),\r\n    ciphertexts: ciphertexts,\r\n    randomSeed: BufferUtil.reverse(this.randomSeed).toString('hex'),\r\n    macs: macs,\r\n    proof: this.proof.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nJSDescription.fromBufferReader = function(br) {\r\n  var i;\r\n  var jsdesc = new JSDescription();\r\n  jsdesc.vpub_old = br.readUInt64LEBN();\r\n  jsdesc.vpub_new = br.readUInt64LEBN();\r\n  jsdesc.anchor = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.nullifiers.push(br.read(32));\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.commitments.push(br.read(32));\r\n  }\r\n  jsdesc.ephemeralKey = br.read(32);\r\n  jsdesc.randomSeed = br.read(32);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    jsdesc.macs.push(br.read(32));\r\n  }\r\n  jsdesc.proof = ZCProof.fromBufferReader(br);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    jsdesc.ciphertexts.push(br.read(ZC_NOTECIPHERTEXT_SIZE));\r\n  }\r\n  return jsdesc;\r\n};\r\n\r\nJSDescription.prototype.toBufferWriter = function(writer) {\r\n  var i;\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt64LEBN(this._vpub_oldBN);\r\n  writer.writeUInt64LEBN(this._vpub_newBN);\r\n  writer.write(this.anchor);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.nullifiers[i]);\r\n  }\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.commitments[i]);\r\n  }\r\n  writer.write(this.ephemeralKey);\r\n  writer.write(this.randomSeed);\r\n  for (i = 0; i < ZC_NUM_JS_INPUTS; i++) {\r\n    writer.write(this.macs[i]);\r\n  }\r\n  this.proof.toBufferWriter(writer);\r\n  for (i = 0; i < ZC_NUM_JS_OUTPUTS; i++) {\r\n    writer.write(this.ciphertexts[i]);\r\n  }\r\n  return writer;\r\n};\r\n\r\nmodule.exports = JSDescription;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/transaction/jsdescription.js\n// module id = 1562\n// module chunks = 0","'use strict';\r\n\r\n// var $ = require('../util/preconditions');\r\nvar buffer = require('buffer');\r\n// var BufferWriter = require('../encoding/bufferwriter');\r\nvar BaseBitcore =require('bitcore-lib'); \r\nvar $ = BaseBitcore.util.preconditions;\r\nvar BufferWriter = BaseBitcore.encoding.BufferWriter;\r\n\r\nvar G1_PREFIX_MASK = 0x02;\r\nvar G2_PREFIX_MASK = 0x0a;\r\n\r\nfunction CompressedG1(params) {\r\n  if (!(this instanceof CompressedG1)) {\r\n    return new CompressedG1(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG1.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG1();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG1.prototype._fromObject = function(params) {\r\n  this.y_lsb = params.y_lsb;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG1.prototype.toObject = CompressedG1.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_lsb: this.y_lsb,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG1.fromBufferReader = function(br) {\r\n  var pt = new CompressedG1();\r\n  var y_lsb = br.readUInt8();\r\n  pt.y_lsb = y_lsb & 1;\r\n  pt.x = br.read(32);\r\n  return pt;\r\n};\r\n\r\nCompressedG1.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G1_PREFIX_MASK | this.y_lsb);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction CompressedG2(params) {\r\n  if (!(this instanceof CompressedG2)) {\r\n    return new CompressedG2(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nCompressedG2.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var pt = new CompressedG2();\r\n  return pt._fromObject(obj);\r\n};\r\n\r\nCompressedG2.prototype._fromObject = function(params) {\r\n  this.y_gt = params.y_gt;\r\n  this.x = new buffer.Buffer(params.x, 'hex');\r\n  return this;\r\n};\r\n\r\nCompressedG2.prototype.toObject = CompressedG2.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    y_gt: this.y_gt,\r\n    x: this.x.toString('hex'),\r\n  };\r\n  return obj;\r\n};\r\n\r\nCompressedG2.fromBufferReader = function(br) {\r\n  var pt = new CompressedG2();\r\n  var y_gt = br.readUInt8();\r\n  pt.y_gt = y_gt & 1;\r\n  pt.x = br.read(64);\r\n  return pt;\r\n};\r\n\r\nCompressedG2.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  writer.writeUInt8(G2_PREFIX_MASK | this.y_gt);\r\n  writer.write(this.x);\r\n  return writer;\r\n};\r\n\r\nfunction ZCProof(params) {\r\n  if (!(this instanceof ZCProof)) {\r\n    return new ZCProof(params);\r\n  }\r\n  if (params) {\r\n    return this._fromObject(params);\r\n  }\r\n}\r\n\r\nZCProof.fromObject = function(obj) {\r\n  $.checkArgument(_.isObject(obj));\r\n  var proof = new ZCProof();\r\n  return proof._fromObject(obj);\r\n};\r\n\r\nZCProof.prototype._fromObject = function(params) {\r\n  this.g_A       = CompressedG1.fromObject(params.g_A);\r\n  this.g_A_prime = CompressedG1.fromObject(params.g_A_prime);\r\n  this.g_B       = CompressedG2.fromObject(params.g_B);\r\n  this.g_B_prime = CompressedG1.fromObject(params.g_B_prime);\r\n  this.g_C       = CompressedG1.fromObject(params.g_C);\r\n  this.g_C_prime = CompressedG1.fromObject(params.g_C_prime);\r\n  this.g_K       = CompressedG1.fromObject(params.g_K);\r\n  this.g_H       = CompressedG1.fromObject(params.g_H);\r\n  return this;\r\n};\r\n\r\nZCProof.prototype.toObject = ZCProof.prototype.toJSON = function toObject() {\r\n  var obj = {\r\n    g_A:       this.g_A.toObject(),\r\n    g_A_prime: this.g_A_prime.toObject(),\r\n    g_B:       this.g_B.toObject(),\r\n    g_B_prime: this.g_B_prime.toObject(),\r\n    g_C:       this.g_C.toObject(),\r\n    g_C_prime: this.g_C_prime.toObject(),\r\n    g_K:       this.g_K.toObject(),\r\n    g_H:       this.g_H.toObject(),\r\n  };\r\n  return obj;\r\n};\r\n\r\nZCProof.fromBufferReader = function(br) {\r\n  var proof = new ZCProof();\r\n  proof.g_A       = CompressedG1.fromBufferReader(br);\r\n  proof.g_A_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_B       = CompressedG2.fromBufferReader(br);\r\n  proof.g_B_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_C       = CompressedG1.fromBufferReader(br);\r\n  proof.g_C_prime = CompressedG1.fromBufferReader(br);\r\n  proof.g_K       = CompressedG1.fromBufferReader(br);\r\n  proof.g_H       = CompressedG1.fromBufferReader(br);\r\n  return proof;\r\n};\r\n\r\nZCProof.prototype.toBufferWriter = function(writer) {\r\n  if (!writer) {\r\n    writer = new BufferWriter();\r\n  }\r\n  this.g_A.toBufferWriter(writer);\r\n  this.g_A_prime.toBufferWriter(writer);\r\n  this.g_B.toBufferWriter(writer);\r\n  this.g_B_prime.toBufferWriter(writer);\r\n  this.g_C.toBufferWriter(writer);\r\n  this.g_C_prime.toBufferWriter(writer);\r\n  this.g_K.toBufferWriter(writer);\r\n  this.g_H.toBufferWriter(writer);\r\n  return writer;\r\n};\r\n\r\nmodule.exports = ZCProof;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/zcash/proof.js\n// module id = 1563\n// module chunks = 0","'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'zelcash:') {\n    throw new TypeError('Invalid bitcoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid bitcoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a BTC string amount into satoshis\n *\n * @param {string} amount - Amount BTC string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromBTC(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTC();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'zelcash:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bwservice_forsafe_empty_NewTry_BTCZ/node_modules/bitcore-lib-zel/lib/uri.js\n// module id = 1564\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 1604\n// module chunks = 0","export class Profile {\n  public version: string;\n  public createdOn: number;\n  public credentials;\n  public disclaimerAccepted: boolean;\n  public onboardingCompleted: boolean;\n  public checked;\n  public checkedUA?;\n  public dirty: boolean;\n\n  constructor() {\n    this.version = '1.0.0';\n  }\n\n  public create(opts?): Profile {\n    opts = opts ? opts : {};\n    let x = new Profile();\n    x.createdOn = Date.now();\n    x.credentials = opts.credentials || [];\n    x.disclaimerAccepted = false;\n    x.onboardingCompleted = false;\n    x.checked = {};\n    return x;\n  }\n\n  public fromObj(obj): Profile {\n    let x = new Profile();\n\n    x.createdOn = obj.createdOn;\n    x.credentials = obj.credentials;\n    x.disclaimerAccepted = obj.disclaimerAccepted;\n    x.onboardingCompleted = obj.onboardingCompleted;\n    x.checked = obj.checked || {};\n    x.checkedUA = obj.checkedUA || {};\n\n    if (x.credentials[0] && typeof x.credentials[0] != 'object')\n      throw new Error('credentials should be an object');\n    return x;\n  }\n\n  public fromString(str: string): Profile {\n    return this.fromObj(JSON.parse(str));\n  }\n\n  public toObj(): string {\n    delete this.dirty;\n    return JSON.stringify(this);\n  }\n\n  public hasWallet(walletId: string): boolean {\n    for (let i in this.credentials) {\n      let c = this.credentials[i];\n      if (c.walletId == walletId) return true;\n    }\n    return false;\n  }\n\n  public isChecked(ua, walletId: string): boolean {\n    return !!(this.checkedUA == ua && this.checked[walletId]);\n  }\n\n  public isDeviceChecked(ua): boolean {\n    return this.checkedUA == ua;\n  }\n\n  public setChecked(ua, walletId: string): void {\n    if (this.checkedUA != ua) {\n      this.checkedUA = ua;\n      this.checked = {};\n    }\n    this.checked[walletId] = true;\n    this.dirty = true;\n  }\n\n  public addWallet(credentials): boolean {\n    if (!credentials.walletId)\n      throw new Error('credentials must have .walletId');\n\n    if (this.hasWallet(credentials.walletId)) return false;\n\n    this.credentials.push(credentials);\n    this.dirty = true;\n    return true;\n  }\n\n  public updateWallet(credentials): boolean {\n    if (!credentials.walletId)\n      throw new Error('credentials must have .walletId');\n\n    if (!this.hasWallet(credentials.walletId)) return false;\n\n    this.credentials = this.credentials.map(c => {\n      if (c.walletId != credentials.walletId) {\n        return c;\n      } else {\n        return credentials;\n      }\n    });\n\n    this.dirty = true;\n    return true;\n  }\n\n  public deleteWallet(walletId: string): boolean {\n    if (!this.hasWallet(walletId)) return false;\n\n    this.credentials = this.credentials.filter(c => {\n      return c.walletId != walletId;\n    });\n\n    this.dirty = true;\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/profile/profile.model.ts","import { FormControl } from '@angular/forms';\n\n// Providers\nimport { AddressProvider } from '../providers/address/address';\n\nexport class AddressValidator {\n  static addressProvider: AddressProvider;\n\n  constructor(addressProvider: AddressProvider) {\n    AddressValidator.addressProvider = addressProvider;\n  }\n\n  isValid(control: FormControl) {\n    return AddressValidator.addressProvider.isValid(control.value)\n      ? null\n      : { 'Invalid Address': true };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/address.ts","import { Injectable } from '@angular/core';\nimport { Logger } from '../../providers/logger/logger';\n\n// providers\nimport { PersistenceProvider } from '../persistence/persistence';\n\nimport * as bitauthService from 'bitauth';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class AppIdentityProvider {\n  constructor(\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider\n  ) {\n    this.logger.info('AppIdentityProvider initialized.');\n  }\n\n  public getIdentity(network, cb) {\n    let pubkey;\n    let isNew;\n    this.persistenceProvider.getAppIdentity(network).then(data => {\n      let appIdentity = data || {};\n\n      if (_.isEmpty(appIdentity) || (appIdentity && !appIdentity.priv)) {\n        isNew = true;\n        appIdentity = bitauthService.generateSin();\n      }\n      try {\n        pubkey = bitauthService.getPublicKeyFromPrivateKey(appIdentity.priv);\n        bitauthService.getSinFromPublicKey(pubkey);\n        if (isNew)\n          this.persistenceProvider.setAppIdentity(network, appIdentity);\n      } catch (e) {\n        return cb(e);\n      }\n      return cb(null, appIdentity);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/app-identity/app-identity.ts","import { FormControl } from '@angular/forms';\nimport { ConfigProvider } from '../providers/config/config';\nimport { EmailNotificationsProvider } from '../providers/email-notifications/email-notifications';\n\nexport class EmailValidator {\n  static cnf: ConfigProvider;\n  static eml: EmailNotificationsProvider;\n\n  constructor(cnf: ConfigProvider, eml: EmailNotificationsProvider) {\n    EmailValidator.cnf = cnf;\n    EmailValidator.eml = eml;\n  }\n\n  isValid(control: FormControl) {\n    let config = EmailValidator.cnf.get();\n    let latestEmail = EmailValidator.eml.getEmailIfEnabled(config);\n\n    let validEmail = /^[a-zA-Z0-9.!#$%&*+=?^_{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n      control.value\n    );\n    if (validEmail && control.value != latestEmail) {\n      return null;\n    }\n\n    return {\n      'Invalid Email': true\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","/* Pages */\nimport { AddPage } from '../pages/add/add';\nimport { CopayersPage } from '../pages/add/copayers/copayers';\nimport { CreateWalletPage } from '../pages/add/create-wallet/create-wallet';\nimport { ImportWalletPage } from '../pages/add/import-wallet/import-wallet';\nimport { JoinWalletPage } from '../pages/add/join-wallet/join-wallet';\nimport { BackupGamePage } from '../pages/backup/backup-game/backup-game';\nimport { BackupWarningPage } from '../pages/backup/backup-warning/backup-warning';\nimport { SendFeedbackPage } from '../pages/feedback/send-feedback/send-feedback';\nimport { FinishModalPage } from '../pages/finish/finish';\nimport { BackupRequestPage } from '../pages/onboarding/backup-request/backup-request';\nimport { CollectEmailPage } from '../pages/onboarding/collect-email/collect-email';\nimport { DisclaimerPage } from '../pages/onboarding/disclaimer/disclaimer';\nimport { OnboardingPage } from '../pages/onboarding/onboarding';\nimport { TourPage } from '../pages/onboarding/tour/tour';\nimport { PaperWalletPage } from '../pages/paper-wallet/paper-wallet';\nimport { PayProPage } from '../pages/paypro/paypro';\nimport { SlideToAcceptPage } from '../pages/slide-to-accept/slide-to-accept';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { TxDetailsPage } from '../pages/tx-details/tx-details';\nimport { TxpDetailsPage } from '../pages/txp-details/txp-details';\nimport { SearchTxModalPage } from '../pages/wallet-details/search-tx-modal/search-tx-modal';\nimport { WalletBalancePage } from '../pages/wallet-details/wallet-balance/wallet-balance';\nimport { WalletDetailsPage } from '../pages/wallet-details/wallet-details';\nimport { WalletTabsPage } from '../pages/wallet-tabs/wallet-tabs';\n\n// Integrations: Amazon\n// import { AmazonPage } from '../pages/integrations/amazon/amazon';\n// import { AmazonCardDetailsPage } from '../pages/integrations/amazon/amazon-card-details/amazon-card-details';\n// import { AmazonSettingsPage } from '../pages/integrations/amazon/amazon-settings/amazon-settings';\n// import { BuyAmazonPage } from '../pages/integrations/amazon/buy-amazon/buy-amazon';\n\n// Integrations: Coinbase\n// import { BuyCoinbasePage } from '../pages/integrations/coinbase/buy-coinbase/buy-coinbase';\n// import { CoinbasePage } from '../pages/integrations/coinbase/coinbase';\n// import { CoinbaseSettingsPage } from '../pages/integrations/coinbase/coinbase-settings/coinbase-settings';\n// import { CoinbaseTxDetailsPage } from '../pages/integrations/coinbase/coinbase-tx-details/coinbase-tx-details';\n// import { SellCoinbasePage } from '../pages/integrations/coinbase/sell-coinbase/sell-coinbase';\n\n// Integrations: Glidera\n// import { BuyGlideraPage } from '../pages/integrations/glidera/buy-glidera/buy-glidera';\n// import { GlideraPage } from '../pages/integrations/glidera/glidera';\n// import { GlideraSettingsPage } from '../pages/integrations/glidera/glidera-settings/glidera-settings';\n// import { GlideraTxDetailsPage } from '../pages/integrations/glidera/glidera-tx-details/glidera-tx-details';\n// import { SellGlideraPage } from '../pages/integrations/glidera/sell-glidera/sell-glidera';\n\n// Integrations: Mercado Libre\n// import { BuyMercadoLibrePage } from '../pages/integrations/mercado-libre/buy-mercado-libre/buy-mercado-libre';\n// import { MercadoLibrePage } from '../pages/integrations/mercado-libre/mercado-libre';\n// import { MercadoLibreCardDetailsPage } from '../pages/integrations/mercado-libre/mercado-libre-card-details/mercado-libre-card-details';\n// import { MercadoLibreSettingsPage } from '../pages/integrations/mercado-libre/mercado-libre-settings/mercado-libre-settings';\n\n// Integrations: ShapeShift\n// import { ShapeshiftPage } from '../pages/integrations/shapeshift/shapeshift';\n// import { ShapeshiftConfirmPage } from '../pages/integrations/shapeshift/shapeshift-confirm/shapeshift-confirm';\n// import { ShapeshiftDetailsPage } from '../pages/integrations/shapeshift/shapeshift-details/shapeshift-details';\n// import { ShapeshiftSettingsPage } from '../pages/integrations/shapeshift/shapeshift-settings/shapeshift-settings';\n// import { ShapeshiftShiftPage } from '../pages/integrations/shapeshift/shapeshift-shift/shapeshift-shift';\n\n// Integrations: BitPayCard\n// import { BitPayCardPage } from '../pages/integrations/bitpay-card/bitpay-card';\n// import { BitPayCardIntroPage } from '../pages/integrations/bitpay-card/bitpay-card-intro/bitpay-card-intro';\n// import { BitPayCardTopUpPage } from '../pages/integrations/bitpay-card/bitpay-card-topup/bitpay-card-topup';\n// import { BitPaySettingsPage } from '../pages/integrations/bitpay-card/bitpay-settings/bitpay-settings';\n\n/*Includes */\nimport { CardItemPage } from '../pages/includes/card-item/card-item';\nimport { FeedbackCardPage } from '../pages/includes/feedback-card/feedback-card';\nimport { GravatarPage } from '../pages/includes/gravatar/gravatar';\nimport { TxpPage } from '../pages/includes/txp/txp';\nimport { WalletActivityPage } from '../pages/includes/wallet-activity/wallet-activity';\n\n/* Tabs */\nimport { HomePage } from '../pages/home/home';\nimport { ReceivePage } from '../pages/receive/receive';\nimport { ScanPage } from '../pages/scan/scan';\nimport { SendPage } from '../pages/send/send';\nimport { SettingsPage } from '../pages/settings/settings';\n\n/* Home */\nimport { ActivityPage } from '../pages/home/activity/activity';\nimport { ProposalsPage } from '../pages/home/proposals/proposals';\n\n/* Settings */\nimport { FingerprintModalPage } from '../pages/fingerprint/fingerprint';\nimport { PIN_COMPONENTS } from '../pages/pin/pin';\nimport { AboutPage } from '../pages/settings/about/about';\nimport { SessionLogPage } from '../pages/settings/about/session-log/session-log';\nimport { AddressbookAddPage } from '../pages/settings/addressbook/add/add';\nimport { AddressbookPage } from '../pages/settings/addressbook/addressbook';\nimport { AddressbookViewPage } from '../pages/settings/addressbook/view/view';\nimport { AdvancedPage } from '../pages/settings/advanced/advanced';\nimport { AltCurrencyPage } from '../pages/settings/alt-currency/alt-currency';\nimport { FeePolicyPage } from '../pages/settings/fee-policy/fee-policy';\nimport { LanguagePage } from '../pages/settings/language/language';\nimport { LockPage } from '../pages/settings/lock/lock';\nimport { NotificationsPage } from '../pages/settings/notifications/notifications';\nimport { SharePage } from '../pages/settings/share/share';\n\n/* Wallet Settings */\nimport { WalletColorPage } from '../pages/settings/wallet-settings/wallet-color/wallet-color';\nimport { WalletNamePage } from '../pages/settings/wallet-settings/wallet-name/wallet-name';\nimport { WalletSettingsPage } from '../pages/settings/wallet-settings/wallet-settings';\n\n/* Wallet Advanced Settings */\nimport { BitcoinCashPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/bitcoin-cash/bitcoin-cash';\nimport { AllAddressesPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/all-addresses/all-addresses';\nimport { WalletAddressesPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-addresses/wallet-addresses';\nimport { WalletDeletePage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-delete/wallet-delete';\nimport { WalletExportPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-export/wallet-export';\nimport { WalletExtendedPrivateKeyPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-information/wallet-extended-private-key/wallet-extended-private-key';\nimport { WalletInformationPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-information/wallet-information';\nimport { WalletServiceUrlPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-service-url/wallet-service-url';\nimport { WalletTransactionHistoryPage } from '../pages/settings/wallet-settings/wallet-settings-advanced/wallet-transaction-history/wallet-transaction-history';\n\n/* Send */\nimport { AmountPage } from '../pages/send/amount/amount';\nimport { ChooseFeeLevelPage } from '../pages/send/choose-fee-level/choose-fee-level';\nimport { ConfirmPage } from '../pages/send/confirm/confirm';\n\n/* Receive */\nimport { CustomAmountPage } from '../pages/receive/custom-amount/custom-amount';\nimport { WideHeaderPage } from './templates/wide-header-page/wide-header-page';\nimport { WalletTabsChild } from './wallet-tabs/wallet-tabs-child';\n\nexport const PAGES = [\n  ActivityPage,\n  AddPage,\n//  AmazonCardDetailsPage,\n//  AmazonPage,\n//  AmazonSettingsPage,\n  AmountPage,\n  AddressbookPage,\n  AddressbookAddPage,\n  AddressbookViewPage,\n  AboutPage,\n  AdvancedPage,\n  AllAddressesPage,\n  AltCurrencyPage,\n  BackupRequestPage,\n  BitcoinCashPage,\n//  BitPayCardIntroPage,\n//  BitPayCardPage,\n//  BitPaySettingsPage,\n//  BitPayCardTopUpPage,\n//  BuyAmazonPage,\n//  BuyCoinbasePage,\n//  BuyGlideraPage,\n//  BuyMercadoLibrePage,\n  ChooseFeeLevelPage,\n  CreateWalletPage,\n//  CoinbasePage,\n//  CoinbaseTxDetailsPage,\n  CopayersPage,\n  FeedbackCardPage,\n  SharePage,\n  ImportWalletPage,\n  JoinWalletPage,\n  BackupWarningPage,\n  BackupGamePage,\n  ConfirmPage,\n  CustomAmountPage,\n  DisclaimerPage,\n  CollectEmailPage,\n//  GlideraPage,\n  GravatarPage,\n  FingerprintModalPage,\n  HomePage,\n  LanguagePage,\n  LockPage,\n//  MercadoLibrePage,\n//  MercadoLibreSettingsPage,\n  OnboardingPage,\n  PaperWalletPage,\n  PayProPage,\n//  GlideraTxDetailsPage,\n  ...PIN_COMPONENTS,\n  ProposalsPage,\n  ReceivePage,\n  ScanPage,\n  SendPage,\n  SettingsPage,\n//  SellCoinbasePage,\n//  SellGlideraPage,\n//  GlideraSettingsPage,\n//  CoinbaseSettingsPage,\n//  ShapeshiftConfirmPage,\n//  ShapeshiftDetailsPage,\n//  ShapeshiftSettingsPage,\n//  ShapeshiftPage,\n//  ShapeshiftShiftPage,\n//  MercadoLibreCardDetailsPage,\n  NotificationsPage,\n  FeePolicyPage,\n  SearchTxModalPage,\n  SessionLogPage,\n  SendFeedbackPage,\n  FinishModalPage,\n  TourPage,\n  TabsPage,\n  TxpDetailsPage,\n  TxDetailsPage,\n  TxpPage,\n  WalletSettingsPage,\n  WalletNamePage,\n  WalletColorPage,\n  WalletInformationPage,\n  WalletAddressesPage,\n  WalletExportPage,\n  WalletServiceUrlPage,\n  WalletTransactionHistoryPage,\n  WalletDeletePage,\n  WalletExtendedPrivateKeyPage,\n  WalletDetailsPage,\n  WalletTabsChild,\n  WalletTabsPage,\n  WalletBalancePage,\n  WalletActivityPage,\n  WideHeaderPage,\n  CardItemPage,\n  SlideToAcceptPage\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.ts","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// native\nimport { Device } from '@ionic-native/device';\n\n// providers\nimport { AppProvider } from '../../../providers/app/app';\n\n// pages\nimport { EmailNotificationsProvider } from '../../../providers/email-notifications/email-notifications';\nimport { BackupRequestPage } from '../backup-request/backup-request';\n\n@Component({\n  selector: 'page-collect-email',\n  templateUrl: 'collect-email.html'\n})\nexport class CollectEmailPage {\n  public showConfirmForm: boolean;\n\n  private walletId: string;\n  private emailForm: FormGroup;\n  private URL: string;\n\n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private logger: Logger,\n    private fb: FormBuilder,\n    private appProvider: AppProvider,\n    private http: HttpClient,\n    private emailProvider: EmailNotificationsProvider,\n    private device: Device\n  ) {\n    this.walletId = this.navParams.data.walletId;\n    let regex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    this.emailForm = this.fb.group({\n      email: [null, [Validators.required, Validators.pattern(regex)]],\n      accept: [false]\n    });\n    this.showConfirmForm = false;\n    // Get more info: https://mashe.hawksey.info/2014/07/google-sheets-as-a-database-insert-with-apps-script-using-postget-methods-with-ajax-example/\n    this.URL =\n      this.appProvider.servicesInfo &&\n      this.appProvider.servicesInfo.emailSheetURL\n        ? this.appProvider.servicesInfo.emailSheetURL\n        : null;\n  }\n\n  ionViewDidLoad() {\n    this.logger.info('ionViewDidLoad CollectEmailPage');\n  }\n\n  public skip(): void {\n    this.goToBackupRequestPage();\n  }\n\n  public showConfirm(): void {\n    this.showConfirmForm = !this.showConfirmForm;\n  }\n\n  public save(): void {\n    let opts = {\n      enabled: true,\n      email: this.emailForm.value.email\n    };\n\n    // Confirm for notifications\n    this.emailProvider.updateEmail(opts);\n\n    // Confirm to get news and updates from BitPay\n    if (this.emailForm.value.accept) this.collectEmail();\n\n    this.goToBackupRequestPage();\n  }\n\n  private goToBackupRequestPage(): void {\n    this.navCtrl.push(BackupRequestPage, { walletId: this.walletId });\n  }\n\n  private collectEmail(): void {\n    if (!this.URL) return;\n\n    let platform = this.device.platform || 'Unknown platform';\n    let version = this.device.version || 'Unknown version';\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    });\n    const urlSearchParams = new HttpParams()\n      .set('App', this.appProvider.info.nameCase)\n      .set('Email', this.emailForm.value.email)\n      .set('AppVersion', this.appProvider.info.version)\n      .set('Platform', platform)\n      .set('DeviceVersion', version);\n\n    this.http\n      .post(this.URL, null, {\n        params: urlSearchParams,\n        headers\n      })\n      .subscribe(\n        () => {\n          this.logger.info('SUCCESS: Email collected');\n        },\n        () => {\n          this.logger.error('ERROR: Could not collect email');\n        }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/onboarding/collect-email/collect-email.ts","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer,\n  ViewChild\n} from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-slide-to-accept',\n  templateUrl: 'slide-to-accept.html'\n})\nexport class SlideToAcceptPage implements AfterViewInit {\n  @Output()\n  slideDone = new EventEmitter<boolean>();\n\n  @Input()\n  buttonText: string;\n\n  @Input()\n  set disabled(disabled: boolean) {\n    this.isDisabled = disabled !== undefined ? disabled : false;\n  }\n  get disabled() {\n    return this.isDisabled;\n  }\n  @Input()\n  set slideButtonDone(done: boolean) {\n    this.done = done !== undefined ? done : false;\n  }\n  get slideButtonDone() {\n    return this.done;\n  }\n\n  @ViewChild('slideButton', { read: ElementRef })\n  private buttonElement: ElementRef;\n  @ViewChild('slideButtonContainer')\n  private containerElement: ElementRef;\n\n  private isPressed: boolean = false;\n  private clickPosition;\n  private xMax: number;\n  private delta: number = 8;\n  private htmlButtonElem;\n  private htmlContainerElem;\n  private containerWidth: number;\n  private origin;\n  private done: boolean = false;\n  private isDisabled: boolean = false;\n\n  public isConfirm: boolean = false;\n  public animation: boolean;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public renderer: Renderer\n  ) {\n    this.animation = false;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.htmlButtonElem = this.buttonElement.nativeElement;\n      this.htmlContainerElem = this.containerElement.nativeElement;\n      let buttonConstraints = this.htmlButtonElem.getBoundingClientRect();\n      this.origin = {\n        left: buttonConstraints.left,\n        top: buttonConstraints.top,\n        width: buttonConstraints.width\n      };\n      this.containerWidth = this.htmlContainerElem.clientWidth;\n      const subtract = this.containerWidth < 800 ? 75 : 200;\n      this.xMax = this.containerWidth - subtract;\n    }, 0);\n  }\n\n  activateButton(event: TouchEvent) {\n    this.isPressed = true;\n    if (typeof event.touches != 'undefined') {\n      this.clickPosition = event.touches[0].pageX;\n    }\n  }\n\n  dragButton(event: TouchEvent) {\n    if (typeof event.touches != 'undefined') {\n      let xTranslate = event.touches[0].pageX;\n      let xDisplacement = this.isPressed ? xTranslate - this.clickPosition : 0;\n      // Adjust displacement to consider the delta value\n      xDisplacement -= this.delta;\n      // Use resource inexpensive translation to perform the sliding\n      let posCss = {\n        transform: 'translateX(' + xDisplacement + 'px)',\n        '-webkit-transform': 'translateX(' + xDisplacement + 'px)'\n      };\n      // Move the element while the drag position is less than xMax\n      // -delta/2 is a necessary adjustment\n      if (\n        xDisplacement >= 0 &&\n        xDisplacement <\n          this.containerWidth - (this.origin.width * 15) / 100 + 30 &&\n        this.isPressed\n      ) {\n        // Set element styles\n        this.renderer.setElementStyle(\n          this.htmlButtonElem,\n          'transform',\n          posCss['transform']\n        );\n        this.renderer.setElementStyle(\n          this.htmlButtonElem,\n          '-webkit-transform',\n          posCss['-webkit-transform']\n        );\n      }\n\n      // If the max displacement position is reached\n      this.slideButtonDone =\n        xDisplacement >= this.xMax - this.delta / 2 ? true : false;\n    }\n  }\n\n  resetButton() {\n    // Only reset if button sliding is not done yet\n    if (!this.slideButtonDone || this.isDisabled) {\n      this.isConfirm = false;\n      // Reset state variables\n      // Resets button position\n      let posCss = {\n        transform: 'translateX(0px)',\n        '-webkit-transform': 'translateX(0px)'\n      };\n      this.renderer.setElementStyle(\n        this.htmlButtonElem,\n        'transform',\n        posCss['transform']\n      );\n      this.renderer.setElementStyle(\n        this.htmlButtonElem,\n        '-webkit-transform',\n        posCss['-webkit-transform']\n      );\n      this.ngAfterViewInit();\n    } else if (this.slideButtonDone && !this.isDisabled) {\n      this.isConfirm = true;\n      this.slideButtonDone = false;\n      this.slideDone.emit(true);\n    }\n  }\n\n  isConfirmed(boolean) {\n    if (!boolean) {\n      this.resetButton();\n    }\n  }\n\n  public toggleAnimation(): void {\n    if (this.isDisabled) return;\n    this.animation = true;\n    setTimeout(() => {\n      this.animation = false;\n    }, 300);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/slide-to-accept/slide-to-accept.ts","import { Component, Input } from '@angular/core';\nimport { TimeProvider } from '../../../providers/time/time';\n\n@Component({\n  selector: 'page-card-item',\n  templateUrl: 'card-item.html'\n})\nexport class CardItemPage {\n  private _currencySymbol: string;\n  private _card;\n  public sent: boolean = false;\n  public received: boolean = false;\n  public pending: boolean = false;\n\n  constructor(private timeProvider: TimeProvider) {}\n\n  @Input()\n  set card(card) {\n    this._card = card;\n    if (card.pending) {\n      this.pending = true;\n    } else if (card.price.toString().indexOf('-') > -1) {\n      this.sent = true;\n    } else {\n      this.received = true;\n    }\n  }\n\n  get card() {\n    return this._card;\n  }\n\n  @Input()\n  set currencySymbol(cs) {\n    this._currencySymbol = cs;\n  }\n\n  get currencySymbol() {\n    return this._currencySymbol;\n  }\n\n  public createdWithinPastDay(time) {\n    return this.timeProvider.withinPastDay(time);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/includes/card-item/card-item.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../../providers/logger/logger';\n\n// providers\nimport { AppProvider } from '../../../providers/app/app';\nimport { PersistenceProvider } from '../../../providers/persistence/persistence';\nimport { ReplaceParametersProvider } from '../../../providers/replace-parameters/replace-parameters';\n\n// pages\nimport { SendFeedbackPage } from '../../../pages/feedback/send-feedback/send-feedback';\n\n@Component({\n  selector: 'page-feedback-card',\n  templateUrl: 'feedback-card.html'\n})\nexport class FeedbackCardPage {\n  public score: number;\n  public button_title: string;\n  public feedbackCardTitle: string;\n  public isShowRateCard: boolean;\n\n  constructor(\n    private appProvider: AppProvider,\n    private navCtrl: NavController,\n    private logger: Logger,\n    private persistenceProvider: PersistenceProvider,\n    private translate: TranslateService,\n    private replaceParametersProvider: ReplaceParametersProvider\n  ) {\n    this.score = 0;\n    this.isShowRateCard = false;\n  }\n\n  public setShowRateCard(value) {\n    this.isShowRateCard = value;\n\n    if (this.isShowRateCard) {\n      let appName = this.appProvider.info.nameCase;\n      this.feedbackCardTitle = this.replaceParametersProvider.replace(\n        this.translate.instant(\n          'How satisfied are you with {{appName}} wallet?'\n        ),\n        { appName }\n      );\n    }\n  }\n\n  public hideCard(): void {\n    this.isShowRateCard = false;\n    this.logger.debug('Feedback card dismissed.');\n    this.persistenceProvider.getFeedbackInfo().then(info => {\n      let feedbackInfo = info;\n      feedbackInfo.sent = true;\n      this.persistenceProvider.setFeedbackInfo(feedbackInfo);\n    });\n  }\n\n  public setScore(score: number) {\n    this.score = score;\n    switch (this.score) {\n      case 1:\n        this.button_title = this.translate.instant(\"I'm disappointed\");\n        break;\n      case 2:\n        this.button_title = this.translate.instant(\"I'm satisfied\");\n        break;\n      case 3:\n        this.button_title = this.translate.instant(\"I'm very happy\");\n        break;\n    }\n  }\n\n  public goFeedbackFlow(): void {\n    this.hideCard();\n    this.navCtrl.push(SendFeedbackPage, {\n      score: this.score,\n      fromCard: true\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/includes/feedback-card/feedback-card.ts","import { Component, Input } from '@angular/core';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { Logger } from '../../../providers/logger/logger';\n\n@Component({\n  selector: 'gravatar',\n  templateUrl: 'gravatar.html'\n})\nexport class GravatarPage {\n  public emailHash;\n\n  @Input()\n  email: string;\n  @Input()\n  name: string;\n  @Input()\n  height: number;\n  @Input()\n  width: number;\n\n  constructor(private logger: Logger) {}\n\n  ngOnInit() {\n    this.logger.info('ionViewDidLoad GravatarPage');\n    if (typeof this.email === 'string') {\n      this.emailHash = Md5.hashStr(this.email.toLowerCase() || '');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/includes/gravatar/gravatar.ts","import { Component, Input } from '@angular/core';\nimport { Events, ModalController } from 'ionic-angular';\nimport { TimeProvider } from '../../../providers/time/time';\n\nimport { TxpDetailsPage } from '../../txp-details/txp-details';\n\n@Component({\n  selector: 'page-txp',\n  templateUrl: 'txp.html'\n})\nexport class TxpPage {\n  private _tx;\n  private _addressbook;\n\n  constructor(\n    private timeProvider: TimeProvider,\n    private events: Events,\n    private modalCtrl: ModalController\n  ) {}\n\n  @Input()\n  set tx(tx) {\n    this._tx = tx;\n  }\n\n  get tx() {\n    return this._tx;\n  }\n\n  @Input()\n  set addressbook(addressbook) {\n    this._addressbook = addressbook;\n  }\n\n  get addressbook() {\n    return this._addressbook;\n  }\n\n  public createdWithinPastDay(time) {\n    return this.timeProvider.withinPastDay(time);\n  }\n\n  public openTxpModal(txp): void {\n    let modal = this.modalCtrl.create(\n      TxpDetailsPage,\n      { tx: txp },\n      { showBackdrop: false, enableBackdropDismiss: false }\n    );\n    modal.present();\n    modal.onDidDismiss(() => {\n      this.events.publish('status:updated');\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/includes/txp/txp.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'page-wallet-activity',\n  templateUrl: 'wallet-activity.html'\n})\nexport class WalletActivityPage {\n  private _notification;\n\n  @Input()\n  set notification(notification) {\n    this._notification = notification;\n  }\n\n  get notification() {\n    return this._notification;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/includes/wallet-activity/wallet-activity.ts","import { PinDots } from './pin-dots/pin-dots.component';\nimport { PinModalPage } from './pin-modal/pin-modal';\nimport { PinPad } from './pin-pad/pin-pad.component';\n\nexport const PIN_COMPONENTS = [PinModalPage, PinDots, PinPad];\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pin/pin.ts","import {\n  Component,\n  Input,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\n\nimport { Animate } from './../../../directives/animate/animate';\n\n@Component({\n  selector: 'pin-dots',\n  template: `\n    <div *ngFor=\"let dot of dotArray; index as i\" class=\"circle\" [ngClass]=\"{filled: isFilled(i+1)}\" animate></div>\n  `\n})\nexport class PinDots {\n  public dotArray = new Array(4);\n\n  @Input()\n  pin: string;\n  @ViewChildren(Animate)\n  dots: QueryList<Animate>;\n\n  ngOnChanges(changes: SimpleChanges) {\n    const pinChanges = changes.pin;\n    if (!pinChanges) {\n      return;\n    }\n    const currentValue = pinChanges.currentValue;\n    const previousValue = pinChanges.previousValue;\n    if (!currentValue.length || currentValue.length < previousValue.length) {\n      return;\n    }\n    this.pulseDot(currentValue.length - 1);\n  }\n\n  public isFilled(limit): boolean {\n    return this.pin && this.pin.length >= limit;\n  }\n\n  public pulseDot(dotIndex: number): void {\n    const dot = this.dots.toArray()[dotIndex];\n    dot.animate('pulse');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pin/pin-dots/pin-dots.component.ts","import { Component, Input, Output } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nexport interface PinButton {\n  value: string;\n  letters: string;\n}\n\n@Component({\n  selector: 'pin-pad',\n  template: `\n    <ion-row *ngFor=\"let row of buttonRows\">\n      <ion-col *ngFor=\"let button of row\" (click)=\"onKeystroke(button.value)\" [ngClass]=\"{disabled: isValueDisabled(button.value)}\" tappable>\n        <div [ngSwitch]=\"button.value\">\n          <span *ngSwitchCase=\"'delete'\">\n            <img *ngIf=\"type ==='pin'\" src=\"assets/img/tail-left.svg\"> \n            <img class=\"amount-delete\" *ngIf=\"type ==='amount'\" src=\"assets/img/icon-delete.svg\">\n          </span>\n          <span *ngSwitchCase=\"'.'\">\n            <span *ngIf=\"type === 'amount'\">.</span>\n          </span>\n          <span *ngSwitchCase=\"'0'\" class=\"key-wrapper\" [ngClass]=\"{'swap-key': type === 'amount' && showSendMax}\">\n            <span class=\"send-max\" translate>Send Max</span>\n            <span>0</span>\n          </span>\n          <span *ngSwitchDefault>{{button.value}}</span>\n        </div>\n        <div class=\"letters\" *ngIf=\"type === 'pin'\">{{button.letters}}</div>\n      </ion-col>\n    </ion-row>\n  `\n})\nexport class PinPad {\n  @Input()\n  integersOnly: boolean = false;\n  @Input()\n  showSendMax: boolean = false;\n\n  @Input()\n  type: 'pin' | 'amount';\n\n  keystrokeSubject: Subject<string> = new Subject<string>();\n\n  @Output()\n  keystroke: Observable<string> = this.keystrokeSubject.asObservable();\n  public buttonRows: PinButton[][] = [\n    [\n      {\n        value: '1',\n        letters: ''\n      },\n      {\n        value: '2',\n        letters: 'ABC'\n      },\n      {\n        value: '3',\n        letters: 'DEF'\n      }\n    ],\n    [\n      {\n        value: '4',\n        letters: 'GHI'\n      },\n      {\n        value: '5',\n        letters: 'JKL'\n      },\n      {\n        value: '6',\n        letters: 'MNO'\n      }\n    ],\n    [\n      {\n        value: '7',\n        letters: 'PQRS'\n      },\n      {\n        value: '8',\n        letters: 'TUV'\n      },\n      {\n        value: '9',\n        letters: 'WXYZ'\n      }\n    ],\n    [\n      {\n        value: '.',\n        letters: ''\n      },\n      {\n        value: '0',\n        letters: ''\n      },\n      {\n        value: 'delete',\n        letters: ''\n      }\n    ]\n  ];\n\n  public onKeystroke(value: string): void {\n    if (this.isValueDisabled(value)) {\n      return;\n    }\n    this.keystrokeSubject.next(value);\n  }\n\n  public isValueDisabled(value: string) {\n    return value === '.' && this.integersOnly;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pin/pin-pad/pin-pad.component.ts","import { Component, Input } from '@angular/core';\nimport { PlatformProvider } from '../../../providers/platform/platform';\n\n@Component({\n  selector: 'wide-header-page',\n  templateUrl: 'wide-header-page.html'\n})\nexport class WideHeaderPage {\n  @Input()\n  headerColor: string;\n  @Input()\n  title: string;\n\n  constructor(public platformProvider: PlatformProvider) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/templates/wide-header-page/wide-header-page.ts","import { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigProvider } from '../providers/config/config';\nimport { RateProvider } from '../providers/rate/rate';\n\n@Pipe({\n  name: 'fiatToUnit',\n  pure: false\n})\nexport class FiatToUnitPipe implements PipeTransform {\n  private walletSettings;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private rateProvider: RateProvider,\n    private decimalPipe: DecimalPipe\n  ) {\n    this.walletSettings = this.configProvider.get().wallet.settings;\n  }\n  transform(amount: number, coin: string, alternative?: string) {\n    alternative = alternative\n      ? alternative\n      : this.walletSettings.alternativeIsoCode;\n    let amount_ = this.rateProvider.fromFiat(\n      amount,\n      alternative,\n      coin.toLowerCase()\n    );\n    return (\n      this.decimalPipe.transform(amount_ / 1e8 || 0, '1.2-8') +\n      ' ' +\n      coin.toUpperCase()\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/fiatToUnit.ts","/*\n * Example use\n *  Simple: *ngFor=\"let item of giftCards | keys\"\n *\tWith an object with objects: *ngFor=\"let item of (itemsObject | keys : 'date') | orderBy : ['-order']\"\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys'\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value, orderBy?: string) {\n    let keys = [];\n    for (let key in value) {\n      keys.push({\n        key,\n        value: value[key],\n        order: orderBy ? value[key][orderBy] : null\n      });\n    }\n    return keys;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/keys.ts","/*\n * Example use\n *\t\tBasic Array of single type: *ngFor=\"#todo of todoService.todos | orderBy : '-'\"\n *\t\tMultidimensional Array Sort on single column: *ngFor=\"#todo of todoService.todos | orderBy : ['-status']\"\n *\t\tMultidimensional Array Sort on multiple columns: *ngFor=\"#todo of todoService.todos | orderBy : ['status', '-title']\"\n *    With an object with objects: *ngFor=\"let item of (itemsObject | keys : 'date') | orderBy : ['-order']\"\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'orderBy',\n  pure: false\n})\nexport class OrderByPipe implements PipeTransform {\n  static _orderByComparator(a, b): number {\n    if (\n      isNaN(parseFloat(a)) ||\n      !isFinite(a) ||\n      (isNaN(parseFloat(b)) || !isFinite(b))\n    ) {\n      // Isn't a number so lowercase the string to properly compare\n      if (a.toLowerCase() < b.toLowerCase()) return -1;\n      if (a.toLowerCase() > b.toLowerCase()) return 1;\n    } else {\n      // Parse strings as numbers to compare properly\n      if (parseFloat(a) < parseFloat(b)) return -1;\n      if (parseFloat(a) > parseFloat(b)) return 1;\n    }\n\n    return 0; // equal each other\n  }\n\n  transform(input, [config = '+']) {\n    if (!Array.isArray(input)) return input;\n\n    if (\n      !Array.isArray(config) ||\n      (Array.isArray(config) && config.length == 1)\n    ) {\n      var propertyToCheck: string = !Array.isArray(config) ? config : config[0];\n      var desc = propertyToCheck.substr(0, 1) == '-';\n\n      // Basic array\n      if (\n        !propertyToCheck ||\n        propertyToCheck == '-' ||\n        propertyToCheck == '+'\n      ) {\n        return !desc ? input.sort() : input.sort().reverse();\n      } else {\n        var property: string =\n          propertyToCheck.substr(0, 1) == '+' ||\n          propertyToCheck.substr(0, 1) == '-'\n            ? propertyToCheck.substr(1)\n            : propertyToCheck;\n\n        return input.sort((a, b) => {\n          return !desc\n            ? OrderByPipe._orderByComparator(a[property], b[property])\n            : -OrderByPipe._orderByComparator(a[property], b[property]);\n        });\n      }\n    } else {\n      // Loop over property of the array in order and sort\n      return input.sort((a, b) => {\n        for (var i: number = 0; i < config.length; i++) {\n          var desc = config[i].substr(0, 1) == '-';\n          var property =\n            config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\n              ? config[i].substr(1)\n              : config[i];\n\n          var comparison = !desc\n            ? OrderByPipe._orderByComparator(a[property], b[property])\n            : -OrderByPipe._orderByComparator(a[property], b[property]);\n\n          // Don't return 0 yet in case of needing to sort by next property\n          if (comparison != 0) return comparison;\n        }\n\n        return 0; // equal each other\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/order-by.ts","import { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ConfigProvider } from '../providers/config/config';\nimport { RateProvider } from '../providers/rate/rate';\n\n@Pipe({\n  name: 'satToFiat',\n  pure: false\n})\nexport class SatToFiatPipe implements PipeTransform {\n  private walletSettings;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private rateProvider: RateProvider,\n    private decimalPipe: DecimalPipe\n  ) {\n    this.walletSettings = this.configProvider.get().wallet.settings;\n  }\n  transform(amount: number, coin: string) {\n    let amount_ = this.rateProvider.toFiat(\n      amount,\n      this.walletSettings.alternativeIsoCode,\n      coin.toLowerCase()\n    );\n    return (\n      this.decimalPipe.transform(amount_ || 0, '1.2-2') +\n      ' ' +\n      this.walletSettings.alternativeIsoCode\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/satToFiat.ts","import { DecimalPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'satToUnit',\n  pure: false\n})\nexport class SatToUnitPipe implements PipeTransform {\n  constructor(private decimalPipe: DecimalPipe) {}\n  transform(amount: number, coin: string) {\n    return (\n      this.decimalPipe.transform(amount / 1e8, '1.2-6') +\n      ' ' +\n      coin.toUpperCase()\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/satToUnit.ts","import { Directive, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { TranslateService } from '@ngx-translate/core';\n\n// providers\nimport { ActionSheetProvider } from '../../providers/action-sheet/action-sheet';\nimport { ClipboardProvider } from '../../providers/clipboard/clipboard';\nimport { Logger } from '../../providers/logger/logger';\nimport { PlatformProvider } from '../../providers/platform/platform';\n\n@Directive({\n  selector: '[copy-to-clipboard]', // Attribute selector\n  inputs: ['value: copy-to-clipboard', 'hideToast: hide-toast'],\n  host: {\n    '(click)': 'copy()'\n  }\n})\nexport class CopyToClipboard {\n  public value: string;\n  public hideToast: boolean;\n  private dom: Document;\n\n  constructor(\n    @Inject(DOCUMENT) dom: Document,\n    public clipboard: Clipboard,\n    public platform: PlatformProvider,\n    public logger: Logger,\n    public translate: TranslateService,\n    private actionSheetProvider: ActionSheetProvider,\n    private clipboardProvider: ClipboardProvider\n  ) {\n    this.logger.info('CopyToClipboardDirective initialized.');\n    this.dom = dom;\n  }\n\n  private copyBrowser() {\n    let textarea = this.dom.createElement('textarea');\n    this.dom.body.appendChild(textarea);\n    textarea.value = this.value;\n    textarea.select();\n    this.dom.execCommand('copy');\n    this.dom.body.removeChild(textarea);\n  }\n\n  public copy() {\n    if (!this.value) return;\n    try {\n      this.clipboardProvider.copy(this.value);\n    } catch (e) {\n      if (e) this.logger.warn(e.message);\n      this.copyBrowser();\n    }\n    if (this.hideToast) return;\n\n    const infoSheet = this.actionSheetProvider.createInfoSheet(\n      'copy-to-clipboard',\n      { msg: this.value }\n    );\n    infoSheet.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/copy-to-clipboard/copy-to-clipboard.ts","import { Directive, ElementRef, Input } from '@angular/core';\n\n/* \niOS allows the user to overshoot when scrolling, which can cause gaps to appear between\nelements if colors are not properly set on the scroll container to match the colors\nof surrounding elements. This directive sets the proper bg-color on the scroll container\nto create the illusion of smooth, fluid, and connected elements.\n*/\n\n@Directive({\n  selector: '[ios-scroll-bg-color]',\n  host: { class: 'ios-scroll-bg-color' }\n})\nexport class IosScrollBgColor {\n  @Input('ios-scroll-bg-color')\n  color: string;\n  @Input()\n  bottomColor: string = '#f8f8f9';\n\n  constructor(private element: ElementRef) {}\n\n  ngOnChanges() {\n    this.setScrollContentBackgroundColor(this.color);\n  }\n\n  setScrollContentBackgroundColor(color: string): void {\n    const scrollContent = this.element.nativeElement.getElementsByClassName(\n      'scroll-content'\n    )[0];\n    const linearGradient = `linear-gradient(to bottom, ${this.color}, ${\n      this.color\n    } 50%, ${this.bottomColor} 50%, ${this.bottomColor} 50%, ${\n      this.bottomColor\n    } 50%)`;\n\n    color\n      ? scrollContent.style.setProperty('background-image', linearGradient)\n      : scrollContent.style.removeProperty('background-image');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/ios-scroll-bg-color/ios-scroll-bg-color.ts","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { Gesture } from 'ionic-angular/gestures/gesture';\ndeclare var Hammer: any;\n\n@Directive({\n  selector: '[longPress]'\n})\nexport class LongPress implements OnInit, OnDestroy {\n  el: HTMLElement;\n  pressGesture: Gesture;\n\n  @Output()\n  longPress: EventEmitter<any> = new EventEmitter();\n\n  constructor(el: ElementRef) {\n    this.el = el.nativeElement;\n  }\n\n  ngOnInit() {\n    this.pressGesture = new Gesture(this.el, {\n      recognizers: [[Hammer.Press, { time: 1000 }]]\n    });\n    this.pressGesture.listen();\n    this.pressGesture.on('press', e => {\n      this.longPress.emit(e);\n    });\n  }\n\n  ngOnDestroy() {\n    this.pressGesture.destroy();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/long-press/long-press.ts","import { Directive, ElementRef, Input } from '@angular/core';\n\n/* \nIonic does not currently appear to provide an API to set the navbar background\nto an arbitrary color. This directive enables this functionality.\n*/\n\n@Directive({\n  selector: '[navbar-bg]'\n})\nexport class NavbarBg {\n  @Input('navbar-bg')\n  color: string;\n\n  constructor(private element: ElementRef) {}\n\n  ngOnChanges() {\n    this.setNewNavbarColor(this.color);\n  }\n\n  setNewNavbarColor(color: string): void {\n    const toolbarBg = this.element.nativeElement.getElementsByClassName(\n      'toolbar-background'\n    )[0];\n    color\n      ? toolbarBg.style.setProperty('background', color, 'important')\n      : toolbarBg.style.removeProperty('background');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/navbar-bg/navbar-bg.ts","import { Directive, ElementRef } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { Logger } from '../../providers/logger/logger';\n\n// Provider\nimport { ConfigProvider } from '../../providers/config/config';\nimport { PopupProvider } from '../../providers/popup/popup';\n\n@Directive({\n  selector: '[no-low-fee]', // Attribute selector\n  host: {\n    '(click)': 'noLowFee()'\n  }\n})\nexport class NoLowFee {\n  private configWallet;\n\n  constructor(\n    private configProvider: ConfigProvider,\n    private elem: ElementRef,\n    private logger: Logger,\n    private navCtrl: NavController,\n    private popupProvider: PopupProvider\n  ) {\n    this.logger.info('Hello NoLowFee Directive');\n    this.configWallet = this.configProvider.get().wallet;\n  }\n\n  public noLowFee(): void {\n    if (\n      this.configWallet.settings.feeLevel &&\n      this.configWallet.settings.feeLevel.match(/conomy/)\n    ) {\n      this.logger.debug(\n        'Economy Fee setting... disabling link:' +\n          this.elem.nativeElement.innerText\n      );\n      this.popupProvider\n        .ionicAlert(\n          'Low Fee Error',\n          'Please change your Bitcoin Network Fee Policy setting to Normal or higher to use this service'\n        )\n        .then(() => {\n          this.navCtrl.pop();\n        });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/no-low-fee/no-low-fee.ts","import { Directive, ElementRef, Input, Renderer } from '@angular/core';\nimport { Content } from 'ionic-angular';\n\n@Directive({\n  selector: '[reveal-at-scroll-pos]'\n})\nexport class RevealAtScrollPosition {\n  @Input('reveal-at-scroll-pos')\n  scrollThreshold: number;\n  @Input('scrollArea')\n  scrollArea: Content;\n\n  animationDistance: number = 28;\n\n  constructor(private element: ElementRef, private renderer: Renderer) {}\n\n  ngAfterViewInit() {\n    this.setOpacity(0);\n    this.scrollArea.ionScroll.subscribe(event =>\n      this.updateStyling(event.scrollTop)\n    );\n  }\n\n  updateStyling(scrollTop: number) {\n    const opacity = this.getOpacity(scrollTop);\n    const translateX = this.getTranslation(scrollTop);\n    this.setOpacity(opacity);\n    this.setTransform(translateX);\n  }\n\n  setOpacity(opacity: number) {\n    this.renderer.setElementStyle(\n      this.element.nativeElement,\n      'opacity',\n      opacity.toFixed(3)\n    );\n  }\n\n  setTransform(translateX: number) {\n    this.renderer.setElementStyle(\n      this.element.nativeElement,\n      'transform',\n      `translateX(${translateX}px)`\n    );\n  }\n\n  getOpacity(scrollTop: number) {\n    const finalOpacity = 1;\n    const fadeStartPosition = this.scrollThreshold - this.animationDistance;\n    const m = finalOpacity / (this.scrollThreshold - fadeStartPosition);\n    const opacity = m * (scrollTop - this.scrollThreshold) + finalOpacity;\n    return opacity;\n  }\n\n  getTranslation(scrollTop: number) {\n    /*\n    point-slope-form\n    y-y1 = m(x-x1)\n    y = m(x-x1) + y1\n      where m = (y2 - y1) / (x2 - x1)\n\n    initialTranslateX = -10\n    finalTranslateX = 0\n    p1 = (scrollThreshold, finalTranslateX)\n    p2 = (animationStartPos, initialTranslateX)\n    */\n    const initialTranslateX = -10;\n    const finalTranslateX = 0;\n    const animationStartPos = this.scrollThreshold - this.animationDistance;\n    const m =\n      (initialTranslateX - finalTranslateX) /\n      (animationStartPos - this.scrollThreshold);\n    const translateX = m * (scrollTop - this.scrollThreshold) + 0;\n    return translateX > 0 ? 0 : translateX;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/reveal-at-scroll-pos/reveal-at-scroll-pos.ts","import { ACTION_SHEET_COMPONENTS } from './action-sheets';\nimport { ClipboardCardPage } from './clipboard-card/clipboard-card';\nimport { EditableItemComponent } from './editable-item/editable-item';\nimport { EXPANDABLE_HEADER_COMPONENTS } from './expandable-header/expandable-header';\nimport { LabelTip } from './label-tip/label-tip';\n\nexport const COMPONENTS = [\n  EXPANDABLE_HEADER_COMPONENTS,\n  ACTION_SHEET_COMPONENTS,\n  EditableItemComponent,\n  LabelTip,\n  ClipboardCardPage\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.ts","import { ActionSheetComponent } from './action-sheet/action-sheet';\nimport { IncomingDataMenuComponent } from './incoming-data-menu/incoming-data-menu';\nimport { INFO_SHEET_COMPONENTS } from './info-sheet/info-sheet';\nimport { OptionsSheetComponent } from './options-sheet/options-sheet';\nimport { WalletSelectorComponent } from './wallet-selector/wallet-selector';\n\nexport const ACTION_SHEET_COMPONENTS = [\n  ActionSheetComponent,\n  INFO_SHEET_COMPONENTS,\n  OptionsSheetComponent,\n  IncomingDataMenuComponent,\n  WalletSelectorComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/action-sheets.ts","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'page-clipboard-card',\n  templateUrl: 'clipboard-card.html'\n})\nexport class ClipboardCardPage {\n  @Input()\n  validDataFromClipboard;\n  @Input()\n  payProDetailsData;\n  @Input()\n  remainingTimeStr;\n\n  constructor() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/clipboard-card/clipboard-card.ts","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Content } from 'ionic-angular';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\n\n// Providers\nimport { PlatformProvider } from '../../providers/platform/platform';\n\n@Component({\n  selector: 'editable-item',\n  templateUrl: 'editable-item.html'\n})\nexport class EditableItemComponent {\n  public isFocused: boolean;\n  public finishedFocus: boolean;\n  public textInput = new FormControl('');\n  public saving: boolean;\n  @ViewChild('itemTextarea')\n  itemTextarea;\n  @ViewChild('itemTextarea', { read: ElementRef })\n  moveCaret: ElementRef;\n  @Output()\n  valChange: EventEmitter<string> = new EventEmitter();\n  @Output()\n  focus: EventEmitter<boolean> = new EventEmitter();\n  @Input()\n  value: string;\n  @Input()\n  itemPlaceholder: string;\n  @Input('scrollArea')\n  scrollArea: Content;\n\n  listenerForEnsuringBlurOnIos = (e: Event) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  constructor(private platformProvider: PlatformProvider) {\n    this.textInput.valueChanges\n      .pipe(debounceTime(600), distinctUntilChanged(), skip(1))\n      .subscribe(value => {\n        this.value = value;\n        this.saving = true;\n        if (!this.value) {\n          this.value = '';\n        }\n        this.valChange.emit(value);\n        Observable.timer(2000)\n          .toPromise()\n          .then(() => {\n            this.saving = false;\n          });\n      });\n    this.saving = false;\n    this.isFocused = false;\n    this.finishedFocus = false;\n  }\n\n  ngOnInit() {\n    if (!this.scrollArea || !this.scrollArea.ionScroll) return;\n    this.scrollArea.ionScroll.subscribe(event => {\n      if (this.finishedFocus) {\n        const scrollSensitivity = 10;\n        if (Math.abs(event.velocityY) > scrollSensitivity) {\n          let activeElement = document.activeElement as HTMLElement;\n          activeElement && activeElement.blur && activeElement.blur();\n        }\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.resizeTextarea();\n  }\n\n  public resizeTextarea() {\n    if (!this.moveCaret) return;\n    const textArea = this.moveCaret.nativeElement.getElementsByClassName(\n      'text-input'\n    )[0];\n    textArea.style.overflow = 'hidden';\n    textArea.style.minHeight = '31px';\n    textArea.style.height = 'auto';\n    textArea.style.height = textArea.scrollHeight + 'px';\n  }\n\n  public saveValueNow(): void {\n    this.isFocused = false;\n    this.finishedFocus = false;\n    if (this.platformProvider.isCordova) {\n      this.focus.emit(false);\n    }\n    if (!this.value) {\n      this.value = '';\n    }\n    this.valChange.emit(this.value);\n    this.disableClickBlock();\n  }\n\n  public async toggleValueUpdate(): Promise<void> {\n    if (this.isFocused) return;\n    if (this.platformProvider.isCordova) {\n      this.focus.emit(true);\n    }\n    this.isFocused = true;\n    await Observable.timer(150).toPromise();\n    if (this.itemTextarea) {\n      this.itemTextarea.setFocus();\n    }\n    if (this.moveCaret) {\n      const elem = this.moveCaret.nativeElement.getElementsByTagName(\n        'textarea'\n      )[0];\n      if (this.value) {\n        elem.setSelectionRange(this.value.length, this.value.length);\n      }\n    }\n    this.enableClickBlock();\n    await Observable.timer(250).toPromise();\n    this.finishedFocus = true;\n  }\n\n  private getIonApp() {\n    return document.getElementsByTagName('ion-app')[0];\n  }\n\n  private enableClickBlock() {\n    // Ensures that tapping on other clickable elements on a page\n    // only blurs the textarea (and ignores any other click listeners)\n    this.getIonApp().addEventListener(\n      'click',\n      this.listenerForEnsuringBlurOnIos,\n      true\n    );\n  }\n\n  private async disableClickBlock() {\n    await Observable.timer(100).toPromise();\n    this.getIonApp().removeEventListener(\n      'click',\n      this.listenerForEnsuringBlurOnIos,\n      true\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/editable-item/editable-item.ts","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  Input,\n  Renderer\n} from '@angular/core';\nimport { Content } from 'ionic-angular';\n@Component({\n  selector: 'expandable-header-primary',\n  template: '<ng-content></ng-content>'\n})\nexport class ExpandableHeaderPrimaryComponent {\n  constructor(public element: ElementRef) {}\n}\n@Component({\n  selector: 'expandable-header-footer',\n  template: '<ng-content></ng-content>'\n})\nexport class ExpandableHeaderFooterComponent {\n  constructor(public element: ElementRef) {}\n}\n@Component({\n  selector: 'expandable-header',\n  template: '<ng-content></ng-content>'\n})\nexport class ExpandableHeaderComponent {\n  @ContentChild(ExpandableHeaderPrimaryComponent)\n  primaryContent: ExpandableHeaderPrimaryComponent;\n  @ContentChild(ExpandableHeaderFooterComponent)\n  footerContent: ExpandableHeaderFooterComponent;\n\n  /**\n   * The instance of ion-content to which the expandable header\n   * will react based on user scrolling.\n   */\n  @Input('scrollArea')\n  scrollArea: Content;\n\n  /**\n   * Determines how quickly the content fades out on scroll. The\n   * greater the value, the quicker the fade.\n   */\n  @Input()\n  fadeFactor: number = 2.5;\n\n  /**\n   * The height of the entire component based on its' content.\n   */\n  headerHeight: number;\n\n  private setTransformTo2dTimeout: NodeJS.Timer;\n\n  constructor(public element: ElementRef, public renderer: Renderer) {}\n\n  ngOnInit() {\n    this.scrollArea.ionScroll.subscribe(event =>\n      event.domWrite(() => this.applyTransforms(event.scrollTop))\n    );\n  }\n\n  ngAfterViewInit() {\n    this.headerHeight = this.element.nativeElement.offsetHeight;\n  }\n\n  applyTransforms(scrollTop: number): void {\n    clearTimeout(this.setTransformTo2dTimeout);\n\n    const transformations = this.computeTransformations(scrollTop);\n    this.transformPrimaryContent(transformations, true);\n    this.transformFooterContent(transformations);\n\n    this.setTransformTo2dTimeout = setTimeout(() => {\n      // Using 3d transforms allows us to achieve great performance. However, on iOS devices, switching to a\n      // different app and then returning back to this app causes any 3d transformed elements to dissapear\n      // initially for some reason. Scrolling again causes them to reappear. However, we can ensure the\n      // elements remain visible at all times by switching to 2d transforms once the user stops scrolling.\n      this.transformPrimaryContent(transformations, false);\n    }, 1000);\n  }\n\n  getNewHeaderHeight(scrollTop: number): number {\n    const newHeaderHeight = this.headerHeight - scrollTop;\n    return newHeaderHeight < 0 ? 0 : newHeaderHeight;\n  }\n\n  computeTransformations(scrollTop: number): number[] {\n    const newHeaderHeight = this.getNewHeaderHeight(scrollTop);\n    const opacity = this.getScaleValue(newHeaderHeight, this.fadeFactor);\n    const scale = this.getScaleValue(newHeaderHeight, 0.5);\n    const translateY = scrollTop > 0 ? scrollTop / 1.5 : 0;\n    return [opacity, scale, translateY];\n  }\n\n  getScaleValue(newHeaderHeight: number, exponent: number): number {\n    return (\n      Math.pow(newHeaderHeight, exponent) /\n      Math.pow(this.headerHeight, exponent)\n    );\n  }\n\n  transformPrimaryContent(transformations: number[], is3d: boolean): void {\n    const [opacity, scale, translateY] = transformations;\n    const transform3d = `scale3d(${scale}, ${scale}, ${scale}) translateY(${translateY}px)`;\n    const transform2d = `scale(${scale}, ${scale}) translate(0, ${translateY}px)`;\n    const transformStr = is3d ? transform3d : transform2d;\n    this.renderer.setElementStyle(\n      this.primaryContent.element.nativeElement,\n      'opacity',\n      `${opacity}`\n    );\n    this.primaryContent &&\n      this.renderer.setElementStyle(\n        this.primaryContent.element.nativeElement,\n        'transform',\n        transformStr\n      );\n  }\n\n  transformFooterContent(transformations: number[]): void {\n    const [opacity] = transformations;\n    this.footerContent &&\n      this.renderer.setElementStyle(\n        this.footerContent.element.nativeElement,\n        'opacity',\n        `${opacity}`\n      );\n  }\n}\n\nexport const EXPANDABLE_HEADER_COMPONENTS = [\n  ExpandableHeaderComponent,\n  ExpandableHeaderFooterComponent,\n  ExpandableHeaderPrimaryComponent\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/expandable-header/expandable-header.ts","import { Component, ElementRef, Input, Renderer } from '@angular/core';\nimport { AlertType } from '../info-sheet/info-sheet-template';\n\n@Component({\n  selector: 'label-tip',\n  template: `\n  <div class=\"label-header\" *ngIf=\"header !== 'no-header'\">\n    <img *ngIf=\"type === 'info'\" class=\"label-header__icon\" src=\"assets/img/icon-info-blue.svg\">\n    <img *ngIf=\"type === 'warn'\" class=\"label-header__icon\" src=\"assets/img/icon-warning-circled.svg\">  \n    <img *ngIf=\"type === 'danger'\" class=\"label-header__icon\" src=\"assets/img/icon-danger.svg\">  \n    <ng-content select=\"[label-tip-title]\"></ng-content>\n  </div>\n  <div [ngClass]=\"{blue: type === 'info', yellow: type == 'warn', red: type == 'danger'}\">\n    <ng-content select=\"[label-tip-body]\"></ng-content>\n  </div>\n  `\n})\nexport class LabelTip {\n  @Input()\n  type: AlertType;\n  @Input()\n  header: string;\n\n  constructor(private element: ElementRef, private renderer: Renderer) {}\n\n  ngOnChanges() {\n    this.renderer.setElementClass(this.element.nativeElement, this.type, true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/label-tip/label-tip.ts","import { NgModule } from '@angular/core';\n\nimport { DecimalPipe } from '@angular/common';\n\nimport {\n  ActionSheetProvider,\n  AddressBookProvider,\n  AddressProvider,\n//  AmazonProvider,\n  AndroidFingerprintAuth,\n  AppIdentityProvider,\n  AppProvider,\n  BackupProvider,\n//  BitPayAccountProvider,\n//  BitPayCardProvider,\n//  BitPayProvider,\n  BwcErrorProvider,\n  BwcProvider,\n  Clipboard,\n  ClipboardProvider,\n//  CoinbaseProvider,\n  ConfigProvider,\n  DerivationPathHelperProvider,\n  Device,\n  DomProvider,\n  EmailNotificationsProvider,\n  ExternalLinkProvider,\n  FCM,\n  FeedbackProvider,\n  FeeProvider,\n  File,\n  FilterProvider,\n//  GlideraProvider,\n  HomeIntegrationsProvider,\n  IncomingDataProvider,\n  LanguageProvider,\n  LaunchReview,\n  Logger,\n//  MercadoLibreProvider,\n  NodeWebkitProvider,\n  OnGoingProcessProvider,\n  PayproProvider,\n  PersistenceProvider,\n  PlatformProvider,\n  PopupProvider,\n  ProfileProvider,\n  PushNotificationsProvider,\n  QRScanner,\n  RateProvider,\n  ReleaseProvider,\n  ReplaceParametersProvider,\n  ScanProvider,\n  ScreenOrientation,\n//  ShapeshiftProvider,\n  SocialSharing,\n  SplashScreen,\n  StatusBar,\n  TimeProvider,\n  Toast,\n  TouchID,\n  TouchIdProvider,\n  TxConfirmNotificationProvider,\n  TxFormatProvider,\n  UserAgent,\n  Vibration,\n  WalletProvider,\n  WalletTabsProvider\n} from './index';\n\n@NgModule({\n  providers: [\n    ActionSheetProvider,\n    AddressProvider,\n    AddressBookProvider,\n    AndroidFingerprintAuth,\n    AppProvider,\n    AppIdentityProvider,\n//    AmazonProvider,\n    BackupProvider,\n//    BitPayProvider,\n//    BitPayCardProvider,\n//    BitPayAccountProvider,\n    BwcProvider,\n    BwcErrorProvider,\n    ConfigProvider,\n//    CoinbaseProvider,\n    Clipboard,\n    ClipboardProvider,\n    DerivationPathHelperProvider,\n    Device,\n    DomProvider,\n    ExternalLinkProvider,\n    FeedbackProvider,\n    FCM,\n    HomeIntegrationsProvider,\n    FeeProvider,\n//    GlideraProvider,\n    IncomingDataProvider,\n    LanguageProvider,\n    LaunchReview,\n    Logger,\n//    MercadoLibreProvider,\n    NodeWebkitProvider,\n    OnGoingProcessProvider,\n    PayproProvider,\n    PlatformProvider,\n    ProfileProvider,\n    PopupProvider,\n    QRScanner,\n    PushNotificationsProvider,\n    RateProvider,\n    ReleaseProvider,\n    ReplaceParametersProvider,\n//    ShapeshiftProvider,\n    StatusBar,\n    SplashScreen,\n    ScanProvider,\n    ScreenOrientation,\n    SocialSharing,\n    Toast,\n    TouchID,\n    Vibration,\n    TimeProvider,\n    TouchIdProvider,\n    TxConfirmNotificationProvider,\n    FilterProvider,\n    TxFormatProvider,\n    UserAgent,\n    WalletProvider,\n    EmailNotificationsProvider,\n    DecimalPipe,\n    PersistenceProvider,\n    File,\n    WalletTabsProvider\n  ]\n})\nexport class ProvidersModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.module.ts"],"sourceRoot":""}